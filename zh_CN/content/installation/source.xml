<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="manual-installation-of-otrs">

    <title>从源码安装OTRS（Linux、Unix）</title>

    <section role="NotInToc" id="installation-disable-selinux">
        <title>准备：禁用SELinux</title>
        <note>
            <para>
                如果你的系统使用了SELinux，你需要禁用它，否则OTRS无法正常工作。
            </para>
        </note>
        <para>
            下面是如何在RHEL/CentOS/Fedora中禁用SELinux：
            <itemizedlist>
                <listitem>
                    <para>
                        在文件/etc/selinux/config中配置SELINUX=disabled：
                    </para>
                    <para>
                        <screen><![CDATA[
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
SELINUX=disabled
# SELINUXTYPE= can take one of these two values:
#       targeted - Targeted processes are protected,
#       mls - Multi Level Security protection.
SELINUXTYPE=targeted
                        ]]></screen>
                    </para>
                </listitem>
                <listitem>
                    <para>
            重启系统。重启后确认命令getenforce返回为<literal>Disabled</literal>：
                    </para>
                    <para>
                    <screen><![CDATA[
root> getenforce
Disabled
                        ]]></screen>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 1: Unpack and Install the Application</title>

        <para>
        Unpack the source archive (for example, using <command>tar</command>) into
the directory <filename>/opt</filename>, and rename the directory from
otrs-x.x.x to otrs (see Script below).
        </para>

        <para>
        <screen><![CDATA[
root> tar xzf /tmp/otrs-x.x.x.tar.gz
root> mv otrs-x.x.x /opt/otrs
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="installation-of-perl-modules">
        <title>Step 2: Install Additional Programs and Perl Modules</title>
        <para>
            Use the following script to get an overview of all installed and required
CPAN modules and other external dependencies.
        </para>

        <para>
            <screen><![CDATA[
root> perl /opt/otrs/bin/otrs.CheckEnvironment.pl
Checking for Perl Modules:
  o Archive::Tar.....................ok (v1.90)
  o Archive::Zip.....................ok (v1.37)
  o Crypt::Eksblowfish::Bcrypt.......ok (v0.009)
...
            ]]></screen>
        </para>

        <note>
            <para>
                请注意：OTRS需要一个安装了所有核心模块（如<literal>version</literal>）、能工作的Perl。这些模块不在脚本的检查范围，在某些系统上（如RHEL）默认没有安装这些核心模块，你可能需要安装一个<literal>perl-core</literal>软件包。
            </para>
        </note>

        <para>
            OTRS requires a supported stable version of Node.js to be installed. Please
refer to the <ulink
url="https://nodejs.org/en/download/package-manager/">Node.js installation
instructions</ulink>.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 3: Create the OTRS User</title>
        <para>
            Create a dedicated user for OTRS:
        </para>
        <para>
            <screen><![CDATA[
root> useradd -d /opt/otrs -c 'OTRS user' otrs
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 4: Activate the Default Config File</title>
        <para>
            There is one OTRS config file bundled in
<filename>$OTRS_HOME/Kernel/Config.pm.dist</filename>.  You must activate it
by copying it without the ".dist" filename extension.
        </para>
        <para>
            <screen><![CDATA[
root> cp /opt/otrs/Kernel/Config.pm.dist /opt/otrs/Kernel/Config.pm
    ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="web-server-configuration">
        <title>Step 5: Configure the Apache Web Server</title>

        <para>
            OTRS comes with an own built-in web server that is used behind apache as a
reverse proxy (or any other reverse proxy server). A few apache modules are
needed for correct operation: <literal>proxy_module</literal>,
<literal>proxy_http_module</literal> and
<literal>proxy_wstunnel_module</literal>.
        </para>

        <para>
            <screen><![CDATA[
# On some systems like Debian and SuSE, these modules need to be specifically enabled:

root> a2enmod proxy
root> a2enmod proxy_http
root> a2enmod proxy_wstunnel
        ]]></screen>
        </para>

        <para>
            大部分的<application>Apache</application>安装都会包括一个<filename>conf.d</filename>目录。在Linux系统中这个目录一般在<filename>/etc/apache</filename>或<filename>/etc/apache2</filename>目录下。以root用户登录，进入<filename>conf.d</filename>目录，并在Apache配置目录创建一个到<filename>/opt/otrs/scripts/apache2-httpd.include.conf</filename>的软链接<filename>zzz_otrs.conf</filename>（确保载入其它配置之后再载入OTRS配置）。
        </para>

        <para>
            <screen><![CDATA[
# Debian/Ubuntu:
root> ln -s /opt/otrs/scripts/apache2-httpd.include.conf /etc/apache2/sites-enabled/zzz_otrs.conf
        ]]></screen>
        </para>

        <para>
            现在你可以重启WEB服务器来载入新的配置设置了。在大多数系统你可以用<command>systemctl restart
apache2.service</command>命令来重启Apache。
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 6: Set File Permissions</title>
        <para>
            请以root用户身份执行以下命令，以设置OTRS的文件和目录权限。 它将尝试检测你的安装所需的正确的用户和组设置。
        </para>

        <para>
        <screen><![CDATA[
root> cd /opt/otrs/
root> bin/otrs.SetPermissions.pl
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="database-configuration">
        <title>Step 7: Setup the Database</title>
        <para>
            The following steps need to be taken to setup the database for OTRS
properly:
        </para>
        <itemizedlist>
            <listitem><para>Create a dedicated database user and database.</para></listitem>
            <listitem><para>Create the database structure.</para></listitem>
            <listitem><para>Insert the initial data.</para></listitem>
            <listitem><para>Configure the database connection in <filename>Kernel/Config.pm</filename>.</para></listitem>
        </itemizedlist>
        <note>
            <para>请注意，OTRS需要utf8作为数据库存储编码。</para>
        </note>
        <section>
            <title>MySQL</title>

            <para>
                <screen><![CDATA[
#
# Run the following commands in mysql as admin user:
#

mysql -uroot -p

    # Create database
    CREATE DATABASE otrs CHARACTER SET utf8;

    # Create database user
    # Special handling for MySQL 8, as the default caching_sha2_password can only be used over secure connections.
    CREATE USER 'otrs'@'localhost' IDENTIFIED WITH mysql_native_password BY 'choose-your-password';
    # Older mysql versions:
    CREATE USER 'otrs'@'localhost' IDENTIFIED BY 'choose-your-password';

    # Assign user privileges to the new database.
    GRANT ALL PRIVILEGES ON otrs.* TO 'otrs'@'localhost';
    FLUSH PRIVILEGES;

#
# Run the following commands on the shell:
#

# Create schema and insert data.
mysql -uroot -p otrs < /opt/otrs/scripts/database/otrs-schema.mysql.sql
mysql -uroot -p otrs < /opt/otrs/scripts/database/otrs-initial_insert.mysql.sql
mysql -uroot -p otrs < /opt/otrs/scripts/database/otrs-schema-post.mysql.sql

# Configure database settings in Kernel/Config.pm
$Self->{DatabaseHost} = '127.0.0.1';
$Self->{Database}     = 'otrs';
$Self->{DatabaseUser} = 'otrs';
$Self->{DatabasePw}   = 'choose-your-password';
$Self->{DatabaseDSN}  = "DBI:mysql:database=$Self->{Database};host=$Self->{DatabaseHost};";
                ]]></screen>
            </para>

            <note>
                <para>
                    下面的推荐配置设置是针对MySQL的。请添加下列行到文件 <filename>/etc/my.cnf</filename> 的[mysqld]部分：
                </para>
                <para>
                    <screen><![CDATA[
max_allowed_packet   = 64M
query_cache_size     = 32M
innodb_log_file_size = 256M
                ]]></screen>
                </para>
            </note>
        </section>

        <section>
            <title>PostgreSQL</title>

            <para>
                <screen><![CDATA[
#
# Run these commands as "postgres" user:
#
sudo su - postgres

    # Create database
    createdb --encoding=utf8 --owner=otrs otrs

    # Create database user
    echo "create user otrs password 'choose-your-password';" | psql

#
# Run these commands on the shell as 'otrs' user.
#

    # Create schema and insert data.
    export PGPASSWORD=some-pass
    psql otrs otrs -h localhost < /opt/otrs/scripts/database/otrs-schema.postgresql.sql
    psql otrs otrs -h localhost < /opt/otrs/scripts/database/otrs-initial_insert.postgresql.sql
    psql otrs otrs -h localhost < /opt/otrs/scripts/database/otrs-schema-post.postgresql.sql

# Configure database settings in Kernel/Config.pm
$Self->{DatabaseHost} = '127.0.0.1';
$Self->{Database}     = 'otrs';
$Self->{DatabaseUser} = 'otrs';
$Self->{DatabasePw}   = 'choose-your-password';
$Self->{DatabaseDSN}  = "DBI:Pg:dbname=$Self->{Database};host=$Self->{DatabaseHost};";
                ]]></screen>
            </para>
        </section>

        <section>
            <title>Finishing the Database Setup</title>

            <para>
                To verify your database setup, run the following command (as
<literal>otrs</literal> user):
            </para>
            <para>
                <screen><![CDATA[
otrs> /opt/otrs/bin/otrs.Console.pl Maint::Database::Check
Trying to connect to database 'DBI:Pg:dbname=otrs;host=localhost' with user 'otrs'...
Connection successful.
                ]]></screen>
            </para>
            <para>
                Once the database is configured correctly, please initialize the system
configuration with the following command:
            </para>
            <para>
                <screen><![CDATA[
otrs> /opt/otrs/bin/otrs.Console.pl Maint::Config::Rebuild
Rebuilding the system configuration...
Done.
            ]]></screen>
            </para>

            <note>
                <para>
                    For security reasons, please change the default password
<literal>root</literal> of the admin user <literal>root@localhost</literal>.
                </para>
                <para>
                    <screen><![CDATA[
otrs> /opt/otrs/bin/otrs.Console.pl Admin::User::SetPassword root@localhost
Generated password 'rtB98S55kuc9'.
Successfully set password for user 'root@localhost'.
                    ]]></screen>
                </para>
            </note>
        </section>
    </section>

    <section role="NotInToc" id="installation-setup-elasticsearch-cluster">
        <title>Step 8: Setup Elasticsearch Cluster</title>
        <para>
            OTRS requires an active cluster of Elasticsearch 6.0 or higher. The easiest
way is to <ulink
url="https://www.elastic.co/guide/en/elasticsearch/reference/current/setup.html">setup
Elasticsearch</ulink> on the same host as OTRS and binding it to its default
port. With that, no further configuration in OTRS is needed.
        </para>
        <para>
            Additionally, OTRS requires plugins to be installed into Elasticsearch:
        </para>
        <para>
            <screen><![CDATA[
# Install required plugins for elasticsearch.
root> /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch ingest-attachment
root> /usr/share/elasticsearch/bin/elasticsearch-plugin install --batch analysis-icu
            ]]></screen>
        </para>
        <para>
            To verify the Elasticsearch installation, you can use the following command:
<screen><![CDATA[
otrs> /opt/otrs/bin/otrs.Console.pl Maint::DocumentSearch::Check
Trying to connect to cluster...
  Connection successful.
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 9: Start the OTRS Daemon and Web Server</title>

        <para>
            The new OTRS daemon is responsible for handling any asynchronous and
recurring tasks in OTRS. The built-in OTRS web server process handles the
web requests handed over from Apache. Both processes must be started from
the <literal>otrs</literal> user.
        </para>

        <para>
            <screen><![CDATA[
otrs> /opt/otrs/bin/otrs.Daemon.pl start
otrs> /opt/otrs/bin/otrs.WebServer.pl
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 10: First Login</title>
        <para>
            Now you are ready to login to your system at <ulink
url="http://localhost/otrs/index.pl">http://localhost/otrs/index.pl</ulink>
as user <literal>root@localhost</literal> with the password that was
generated (see above).
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 11: Setup Cron Jobs</title>
        <para>
            OTRS自带了两个不同的cron文件：<filename>/opt/otrs/var/cron/*.dist</filename>，它们的目的是确保OTRS守护正常运行。你需要将它们复制为不带.dist扩展名的文件名来激活它们。
        </para>

        <para>
            <screen><![CDATA[
otrs> cd /opt/otrs/var/cron
otrs> for foo in *.dist; do cp $foo `basename $foo .dist`; done
            ]]></screen>
        </para>

        <para>
            要在系统中安排这些cron任务，你可以使用<literal>otrs</literal>运行脚本文件<filename>Cron.sh</filename>。
        </para>

        <para>
            <screen><![CDATA[
otrs> /opt/otrs/bin/Cron.sh start

# Stopping the cron jobs is also possible (useful for maintenance):
otrs> /opt/otrs/bin/Cron.sh stop
            ]]></screen>
        </para>

        <para>
            通过本步骤，完成了系统的基本配置。
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 12: Setup Bash Autocompletion (optional)</title>
        <para>
            所有的常规OTRS命令操作现在都通过OTRS控制台接口
<filename>bin/otrs.Console.pl</filename>执行。它提供bash的自动补齐功能，在查找正确的命令和选项时更容易些。
        </para>
        <para>
            你可以安装软件包<literal>bash-completion</literal>来激活bash的自动补齐功能。它能为<literal>otrs</literal>用户自动检测到并载入文件<filename>/opt/otrs/.bash_completion</filename>。
        </para>
        <para>
            重启shell后，你可以在输入<filename>bin/otrs.Console.pl</filename>后按TAB键，就会显示所有可用的命令。如果你键入了命令的部分字符，按TAB键会列出所有匹配这些字符的命令。在输入完整的命令后，按TAB键会列出所有可用的选项和参数。
        </para>
    </section>

    <section role="NotInToc">
        <title>步骤13：进一步信息</title>
        <para>
            我们建议你参阅OTRS<link linkend="performance-tuning">性能调优章节</link>。
        </para>
        <para>
            Please have a look at the list of <link
linkend="additional-resources">additional resources</link> for information
about OTRS Group, the creator of and service provider for <ulink
url="https://www.otrs.com">OTRS</ulink>, and futher resources.
        </para>
    </section>

</section>
