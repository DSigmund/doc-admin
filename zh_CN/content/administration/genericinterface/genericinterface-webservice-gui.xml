<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="webservice_gui">
    <title>WEB服务图形界面</title>
    <para>
        WEB服务图形界面是一个工具，允许你在用户友好、便捷的界面构建复杂的WEB服务配置。它允许：
    </para>
    <para>
        <itemizedlist>
            <listitem>
                <para>
                    创建和删除WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    导入和导出已有WEB服务的配置（用YAML文件格式）。
                </para>
            </listitem>
            <listitem>
                <para>
                    在WEB服务历史窗口查看、还原和导出已有WEB服务的老配置。
                </para>
            </listitem>
            <listitem>
                <para>
                    在调试窗口跟踪每个WEB服务所有的通讯日志。
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <section id="webservice_gui_overview">
        <title>WEB服务概览</title>
        <para>
            在系统管理页面系统管理员部分的“WEB服务”链接通向WEB服务概览窗口，你可以管理WEB服务的配置。在这个窗口你可以添加新的WEB服务或修改已有WEB服务的配置。
        </para>
        <para>
            每个WEB服务配置窗口的上部分有一行‘面包条’风格的导航路径，通过这个导航路径可以知道我们在WEB服务配置中的准确位置，还可以让用户随时跳回到配置流程的任何位置（这个跳回操作不会保存任何修改内容）。
        </para>
        <note>
            <para>
                要创建一个新的WEB服务，点击“添加WEB服务”按钮，并输入需要的信息。
            </para>
        </note>
        <para>
            <figure>
                <title>WEB服务概览</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-overview.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
        </para>
    </section>

    <section id="webservice_gui_add">
        <title>添加WEB服务</title>
        <para>
            这部分必填的字段只有WEB服务的“名称”，要求系统唯一且不得留空。其它字段也是配置需要的如“调试阈值”和“有效性”，但是这些字段已经有默认值了。
        </para>
        <para>
            “调试阈值”的默认值是“调试”，当配置为这个方式时所有的通讯日志都会记录到数据库中。每个随后的调试阈值都有更多的限制并会丢弃比当前阈值级别低的通讯日志。
        </para>
        <para>
            <itemizedlist>
                <title>调试阈值级别(从低到高)</title>
                <listitem>
                    <para>
                        Debug（调试）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Info（信息）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Notice（注意）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Error（错误）
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            还可以为“OTRS作为服务提供方”和“OTRS作为服务请求方”定义网络传输协议。
        </para>
        <para>
            点击“保存”按钮来将新的WEB服务注册到数据库中，或点击“取消”按钮丢弃这个操作。现在可以返回到WEB服务概览窗口。
        </para>
        <para>
            如果你已经有一个YAML格式的WEB服务配置文件，你可以点击窗口左侧的“导入WEB服务”按钮。导入WEB服务的更多信息请检查下一部分的“修改WEB服务”。
        </para>
        <note>
            <para>
                要为一个WEB服务添加或修改更多细节，点击WEB服务概览窗口中WEB服务的名称。
            </para>
        </note>
        <para>
            <figure>
                <title>添加WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-add.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
        </para>
    </section>

    <section id="webservice_gui_change">
        <title>修改WEB服务</title>
        <para>
            在这个窗口你有处理一个WEB服务所有部分的完整功能集。在左侧的操作栏中你可以找到一些按钮，允许你在一个WEB服务上执行所有可能的操作。
        </para>
        <para>
        <itemizedlist>
            <listitem>
                <para>
                    克隆WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    导出WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    导入WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    配置历史。
                </para>
            </listitem>
            <listitem>
                <para>
                    删除WEB服务
                </para>
            </listitem>
            <listitem>
                <para>
                    调试器
                </para>
            </listitem>
        </itemizedlist>
        </para>
        <note>
            <para>
                “配置历史”和“调试器”会打开不同的窗口。
            </para>
        </note>

        <section id="webservice-clone">
            <title>克隆WEB服务</title>
            <para>
                要克隆一个WEB服务，你需要点击“克隆WEB服务”按钮。在打开的对话框中你可以为这个克隆的WEB服务使用默认的名称或设置一个新名称。
            </para>
            <note>
                <para>
                    <emphasis>记住：</emphasis>WEB服务的名称必须是系统中唯一的。
                </para>
            </note>
            <para>点击“克隆”按钮来创建这个WEB服务的克隆或“取消”按钮关闭这个对话框。</para>
            <para>
                <figure>
                    <title>克隆WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-clone.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-export">
            <title>导出WEB服务</title>
            <para>
                “导出WEB服务”按钮让你转储当前WEB服务配件到一个YAML文件，下载并保存到你的文件系统中。这在你要从一个服务器迁移WEB服务到另外的服务器时特别有用，例如从测试环境到生产系统。
            </para>
            <warning>
                <para>
                    所有存储在WEB服务配置中的密码都将以纯文本格式导出。
                </para>
            </warning>
            <para>
                在点击“导出WEB服务”按钮后，你的浏览器会出现一个保存文件对话框，就像你在网页上点击了一个文件下载链接一样的。
            </para>
            <note>
                <para>
                    不同操作系统中不同浏览器有它自己的保存对话框窗口和风格。取决于浏览器和它的配置，可能不会显示对话框而是直接将文件保存到一个默认目录中。如有需要请检查你的浏览器文档以获取更多的特定说明。
                </para>
            </note>
            <para>
                <figure>
                    <title>导出WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-export.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-import">
            <title>导入WEB服务</title>
            <para>
                导入WEB服务功能必须使用一个有效的WEB服务配置的YAML文件。点击“导入WEB服务”按钮，浏览配置文件或在输入框中输入文件的完整路径。
            </para>
            <para>
                点击“导入”按钮以从一个文件创建一个新的WEB服务或“取消”关闭这个对话框。
            </para>
            <note>
                <para>
                    WEB服务的名称会使用配置文件的文件名（例如文件是MyWebservice.yml，则WEB服务将命名为MyWebservice）。如果在系统中已经有一个与之同名的WEB服务，系统会打开修改WEB服务窗口，让你修改导入的WEB服务的名称。
                </para>
            </note>
            <para>
                <figure>
                    <title>导入WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-import.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-history">
            <title>WEB服务历史</title>
            <para>
                对WEB服务配置所做的每个修改都会在WEB服务历史中创建一条新条目（就像一个日志）。WEB服务历史窗口显示一个WEB服务配置所有版本的列表。在“配置历史列表”中的每一行（版本）代表WEB服务历史中一个单独的修订。
            </para>
            <para>
                点击一行可以显示在特定日期/时间的整个配置，这个配置会显示在本窗口的“历史详细信息”部分。你还可以在这里导出选定的WEB服务配置版本或者恢复这个版本到当前的WEB服务配置。
            </para>
            <para>
                “导出WEB服务配置”与修改WEB服务窗口中的“导出WEB服务”功能完全一样。更多信息请参考那部分内容。
            </para>
            <para>
                如果对当前WEB服务配置的修改没有按预期工作，可以手动轻易恢复修改内容到原状，你可以点击“恢复WEB服务配置”按钮。这会打开一个对话框问你是否确定恢复到这个WEB服务配置。点击对话框中的“恢复WEB服务配置”按钮用选定版本替换当前的配置，或点击“取消”直接关闭对话框。
            </para>
            <warning>
                <para>
                    记住：存储在WEB服务配置中的任何密码都将以纯文本格式导出。
                </para>
                <para>
                    恢复一个配置时请一定小心，因为这个过程是不可逆的。
                </para>
            </warning>
            <para>
                <figure>
                    <title>WEB服务历史</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-history.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-delete">
            <title>删除WEB服务</title>
            <para>
                有时需要完全删除一个WEB服务，如要这样做你可以点击“删除WEB服务按钮”，会弹出一个确认对话框。
            </para>
            <para>
                点击“删除”按钮来确认删除这个WEB服务或点击“取消”关闭对话框。
            </para>
            <warning>
                <para>
                    删除一个WEB服务后无法撤销，请在删除一个WEB服务时一定要小心。
                </para>
             </warning>
            <para>
                <figure>
                    <title>删除WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-delete.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-debugger">
            <title>WEB服务调试器</title>
            <para>
                调试器存储了一个WEB服务的日志。在调试器窗口你可以跟踪该WEB服务作为提供者或请求者类型的所有通讯日志。
            </para>
            <para>
                显示这个窗口后，请求列表开始载入。在列表完全载入后你可以选择一行（即一条通讯序列）来检查它的详细信息，这个详细信息显示在窗口下方。
            </para>
            <para>
                你可以使用窗口右边的过滤器来收缩通讯列表，你可以过滤的内容有：
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        通讯类型（提供者或请求者）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        日期：在一个特定日期之前或之后
                    </para>
                </listitem>
                <listitem>
                    <para>
                        远程IP地址
                    </para>
                </listitem>
                <listitem>
                    <para>
                        以上所有组合
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                在设置了过滤器后，点击“刷新”按钮，就会显示满足搜索条件的新列表。
            </para>
            <note>
                <para>
                    取决于过滤器的搜索条件，新列表可能无返回结果。
                </para>
            </note>
            <para>
                在窗口左侧的操作栏中你可以选择“返回WEB服务”，或点击“清除”按钮清空调试器日志，这会打开一个对话框确认清除日志，点击对话框中的“清除”按钮执行清除操作或点击“取消”关闭这个对话框。
            </para>
            <para>
                在“请求详细信息”部分你可以看到选定通讯的所有详细信息。在这里你可以跟踪完整流并检查可能的错误或确认成功响应。
            </para>
            <para>
                <figure>
                    <title>WEB服务调试器</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-debugger.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-configuration-change">
            <title>修改WEB服务配置</title>
            <para>
                回到修改WEB服务窗口，现在我们准备回顾窗口右侧。在这里我们可以修改一个WEB服务的所有通用信息如名称、描述、调试阈值等等。此外下面还有两个部分允许我们修改通讯类型“OTRS作为提供者”和“OTRS作为请求者”的特定参数。
            </para>
            <para>
                WEB服务配置需要在每个级别保存，这意味着如果修改了一个设置，到其它部分（这个配置更深层次的部分）的链接将被禁用，强迫你保存当前的配置级别。在保存后禁用了的链接会被重新启用，允许你使用这个配置继续。
            </para>
            <para>
                在“OTRS作为提供者”部分可以设置或配置网络传输协议，只有注册了的网络传输后端才会显示在列表中。要配置网络传输，点击“配置”按钮。在这部分还可以添加新操作，从“添加操作”列表中选择一个可用的操作，这会引领你到操作配置窗口。在保存了这个新操作后它就会在上面的表格里列出。
            </para>
            <para>
                在“OTRS作为请求者”部分与前面非常类似，但你可以在这里添加调用程序而不是“操作”。
            </para>
            <para>
                点击“保存”按钮以保存并继续配置这个WEB服务，“保存并完成”保存并返回到WEB服务概览窗口，或者“取消”会丢弃当前配置级别的修改内容并返回到WEB服务概览窗口。
            </para>
            <para>
                <figure>
                    <title>修改WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-change.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
            <note>
                <para>
                    你其它的通用接口配置窗口（如网络传输、操作、调用程序和映射窗口）一样，初始化配置（添加）窗口仅提供了两个选项“保存”和“取消”。如果是重新查看这个配置，会出现新的选项“保存并完成”。这个功能的行为定义如下。
                </para>
                <para>
                    “保存”将存储当前配置级别到数据库并且会返回到之前的窗口以回顾你的修改内容或配置更深层次的设置。
                </para>
                <para>
                    “保存并完成”将存储当前配置级别到数据库并且会返回到配置层次之前的窗口（到上一个配置级别）。
                </para>
                <para>
                    “取消”将丢弃当前配置级别的任何配置修改内容，并且会返回到配置层次之前的窗口（到上一个配置级别）。
                </para>
            </note>

            <section id="webservice-provider-network-transport">
                <title>WEB服务提供都网络传输</title>
                <para>
                    将来可用的网络传输列表可能会增加，目前只有“HTTP::SOAP”和“HTTP::REST”传输可用。每个传输有不同的配置选项，并且可能使用不同的前端界面来配置它们。
                </para>
                <para>
                    配置“HTTP::SOAP”作为提供者很简单。只有两个设置“命名空间”和“消息的最大长度”。这些字段是必填的，第一个是一个URI（统一资源标识符），为SOAP方法指定一个上下文，减少歧义；第二个是你可以指定OTRS能够处理SOAP消息的最大尺寸（单位：字节）。
                </para>
                <para>
                    <figure>
                        <title>WEB服务提供者网络传输（HTTP::SOAP）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-soap.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
                <para>
                    对于“HTTP::REST”，配置可能要稍微复杂一些，因为它的设置会根据配置的操作而动态增长，给每个操作添加两个设置：“路由映射，用于操作
‘&lt;操作名称&gt;’:”和“有效的请求方法，用于操作
‘&lt;操作名称&lt;’:”到默认的传输设置“消息的最大长度：”和“发送Keep-Alive（保持连接）:”之前。
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>路由映射，用于操作 ‘&lt;操作名称&gt;’:</para>
                        <para>
                            在这个设置中设置一个资源路径，这个路径必须根据WEB服务考虑的需求来定义，这个路径与HTTP请求方法相结合来确定要执行的通用接口操作。
                        </para>
                        <para>
                            路径中可以包含变量，格式为‘:&lt;VariableName&gt;’。在变量位置的每个路径字符串会用这个设置中定义的变量名称替换后添加到请求的有效载荷中。
                        </para>
                        <para>
                            例子：
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                路由映射：/Resource
                            </para>
                            <listitem>
                                <para>有效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                            <listitem>
                                <para>无效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                路由映射：/Resource/:ID
                            </para>
                            <listitem>
                                <para>有效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1?Param1=One
                                </para>
                                <para>
                                    在这两种情况下，ID=1都会发送到操作作为有效载荷的一部分。在这2种情况还添加了Param1=One，取决于HTTP请求方法还会添加其它参数（如果它们在请求头字段中作为一个JSON字符串）。
                                </para>
                            </listitem>
                            <listitem>
                                <para>无效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                路由映射：/Resource/OtherResource/:ID/:Color
                            </para>
                            <listitem>
                                <para>有效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1/Red
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherReosurce/123/Blue?Param1=One
                                </para>
                                <para>
                                    在第一个例子中，ID = 1且Color = Red，第二个例子中ID = 123且Color = Blue。
                                </para>
                            </listitem>
                            <listitem>
                                <para>无效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1?Param1=One
                                </para>
                                <para>
                                    在第一个例子中，路径缺失了'/OtherResource'和:Color变量，在第二个例子中只缺失了:Color变量。
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>有效的请求方法，用于操作‘&lt;操作名称&gt;’：</para>
                        <para>
                            HTTP请求方法结合路由映射来确定要使用的操作，可能的选项有：CONNECT、DELETE、GET、HEAD、OPTIONS、PATCH、POST、PUT和TRACE。
                        </para>
                        <para>
                            完全不同的操作可以共享完全相同的映射路径，但是为了正确地确定使用的操作，每个操作的请求方法必须是唯一的。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>WEB服务提供者网络传输（HTTP::REST）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-rest.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-operation">
                <title>WEB服务操作</title>
                <para>
                    当你使用OTRS作为一个WEB服务提供者时可以完执行的动作叫“操作”。每个操作属于一个控制器。控制器是操作或调用程序的集合，一般地，同一控制器中的操作需要类似的设置并共享相同的配置对话框，但是如果需要每个操作可以有独立的配置对话框。
                </para>
                <para>
                    一般出现在操作中的字段是名称、描述、后端和映射，其它特殊字段可以出现在非默认配置对话框中以达到操作的特殊需要。
                </para>
                <para>
                    每个操作一般有两个映射配置部分，一个是进入数据映射，另外一个是出站数据映射。你可以为每个映射方向选择不同的映射类型（后端），因为它们的配置是彼此独立的，并且操作后端也是独立的。通常和最普遍的做法是操作在这两种情况下（反向的配置）使用相同的映射类型。完整的映射配置在一个单独的窗口（取决于映射类型）中完成。
                </para>
                <para>
                    操作后端是预先选择的，不能编辑。如果在WEB服务编辑窗口选择了该操作你就会看到这个参数。这个字段仅用于提供信息。
                </para>
                <para>
                    在窗口左侧的操作栏中你有这些选项：“返回到WEB服务”（丢弃上次保存后的所有修改内容）和“删除”。如果你点击了“删除”，会打开一个对话框问你是否要删除这个操作，点击“删除”按钮确认删除该操作和它的配置，或点击“取消”关闭对话框。
                </para>
                <para>
                    <figure>
                        <title>WEB服务的操作</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-operation.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-requester-transport">
                <title>WEB服务请求者网络传输</title>
                <para>
                    WEB服务请求者的网络传输配置类似于提供者的配置。对于请求者的“HTTP::SOAP”网络传输需要设置更多的字段。
                </para>
                <para>
                    除了“端点”（远程系统上的WEB服务用来接受请求的URI）和“命名空间”是必填字段外，你还要指定：
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            SOAP消息的编码（如utf-8、latin1、iso-8859-1、cp1250等等）
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            SOAP动作头：你可以使用这个来发送一个空的或填满的SOAPAction头。设置为“否”且SOAP消息中的SOAP动作头会是一个空的字符串，或者设置为“是”以发送‘命名空间’#‘动作’格式的SOAP动作并定义分隔符（通常.NET
WEB服务是“/”，REST是“#”）。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            身份认证：设置身份认证机制，设置为“-”不使用任何身份认证，或从列表中选择一个身份认证后会出现相关的详细字段。
                        </para>
                    </listitem>
                </itemizedlist>
                <note>
                    <para>
                        目前只实现了“HTTP基本认证”机制。你可以根据远程系统配置决定是否要用它。如果要使用“HTTP基本认证”，你必须提供用户名和密码来访问远程系统。
                    </para>
                </note>
                <warning>
                    <para>
                        如果你提供了一个身份认证密码并且随后你导出这个WEB服务到一个YAML文件，这个密码会以明文字符串导出到YAML文件中。请知悉这一点并在需要时采取必要的预防措施。
                    </para>
                </warning>
                <para>
                    <figure>
                        <title>WEB服务请求者的网络传输（HTTP::SOAP）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-soap.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
                <para>
                    至于HTTP::REST，这个配置也会根据配置的调用程序动态增长，给每个调用程序添加两个设置：“控制器映射，用于调用程序
‘&lt;调用程序名称&gt;:”和“有效的请求命令，用于调用程序
‘&lt;调用程序名称&gt;’:”。身份认证和SSL选项类似于HTTP::SOAP。
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>主机</para>
                        <para>
                            远程系统的主机名称或IP地址和端口号，如果没有端口号，默认使用80端口。
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>控制器映射，用于调用程序&lt;调用程序名称&gt;:</para>
                        <para>
                            在这个设置中设置一个资源路径，这个路径必须根据远程WEB服务的需求来定义，并遵从它的规定。
                        </para>
                        <para>
                            路径可以包含‘:&lt;变量名称&gt;’格式的变量，每个变量名称匹配（要发送的）当前数据将被对应的数据值替换。匹配的变量名称和值将从当前数据中移除。取决于HTTP请求命令，剩余的数据可以在请求正文中作为一个JSON字符串或在URI中作为查询参数发送。
                        </para>
                        <para>
                            例子：
                        </para>
                        <para>
                            当前数据：Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four。
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                控制器映射：/Resource
                            </para>
                            <listitem>
                                <para>替换后：</para>
                                <para>/Resource</para>
                            </listitem>
                            <listitem>
                                <para>剩余数据：</para>
                                <para> Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                控制器映射：/Resource/:Var1
                            </para>
                            <listitem>
                                <para>替换后：</para>
                                <para>/Resource/One</para>
                            </listitem>
                            <listitem>
                                <para>剩余数据：</para>
                                <para> Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                       <itemizedlist mark="round">
                            <para>
                                控制器映射：/Resource/:Var1?Param1=:Var2&amp;Var3=:Var3
                            </para>
                            <listitem>
                                <para>替换后：</para>
                                <para>/Resource/One?Param1=Two&amp;Var3=Three</para>
                            </listitem>
                            <listitem>
                                <para>剩余数据：</para>
                                <para>Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>有效的请求命令，用于调用程序 ‘&lt;调用程序名称&gt;’：</para>
                        <para>
                            这个字段确定使用的HTTP请求方法，可能的选项有：CONNECT、DELETE、GET、HEAD、OPTIONS、PATCH、POST、PUT和TRACE。如果没有选择命令，则使用默认命令。
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>默认命令</para>
                        <para>
                            用作所有没有定义请求命令的调用程序的最后依靠。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>WEB服务提供者网络传输（HTTP::REST）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-rest.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-invoker">
                <title>WEB服务调用程序</title>
                <para>
                    当你使用OTRS作为一个WEB服务请求者时能够执行的操作称之为“调用程序”。每个调用程序属于一个控制器（控制器是操作或调用程序的集合）。通常在相同控制器中的调用程序需要类似的设置和共同相同的配置对话框。每个调用程序如果需要可以有独立的配置对话框。
                </para>
                <para>
                    在每个调用程序配置中通常是名称、描述、后端和映射字段，附加的事件触发器和其它特殊字段的列表可以出现在非默认的配置对话框中以满足调用程序特殊的需求。
                </para>
                <para>
                    每个调用程序通常有两个映射配置部分，一个是对进入的数据，另外一个是对发出的数据。你可以给每个映射方向选择不同的映射类型（后端），因为它们的配置是彼此独立的，调用程序后端也是独立的。通常和最普遍的做法是调用程序在这两种情况下（反射的配置）使用相同的映射类型。完整的映射配置在一个单独的窗口（取决于映射类型）中完成。
                </para>
                <para>
                    操作后端是预先选择的，不能编辑。如果在WEB服务编辑窗口选择了该调用程序你就会看到这个参数。这个字段仅用于提供信息。
                </para>
                <para>
                    事件触发器是OTRS中的事件比如“工单创建”、“信件发送”等等。这些事件可以作为执行调用程序的触发器。每个调用程序需要注册至少一个事件触发器，否则调用程序就没用，因为它永远不会被调用。事件触发器的异步属性定义是由OTRS进程处理这个调用程序还是委托给OTRS守护进程处理。
                </para>
                <note>
                    <para>
                        OTRS守护进程是一个执行后台任务的单独的进程集，使用守护进程就不会影响OTRS进程本身，比如服务不可用或有网络问题，远程系统花费大量时间才响应。如果你不使用OTRS守护进程，则使用WEB服务会导致OTRS变慢或无法响应。所以强烈推荐尽可能使用异步事件触发器。
                    </para>
                </note>
                <para>
                    要添加一个事件触发器，首先从第一个列表中选择事件家族，然后从第二个列表中选择事件名称，然后设置异步属性（未选中即意味着事件触发器不是异步的），最后点击“+”按钮。就会创建一个新的事件触发器，会在调用程序的“事件触发器”列表中列出。
                </para>
                <para>
                    要删除一个事件触发器，简单定位到“事件触发器”列表中要删除的事件触发器，点击行尾的“垃圾桶”图标即可。这会打开一个对话框问你是否确认删除该事件触发器，点击“删除”从列表中删除这个事件触发器，或“取消”关闭对话框。
                </para>
                <para>
                    在窗口左侧操作栏你有两个选项：“返回到WEB服务”（丢失上次保存以来的所有修改内容）和“删除”。如果你点击了“删除”按钮，会弹出一个对话框问你是否要删除这个调用程序，点击“删除”删除这个调用程序和它的配置，或“取消”关闭删除对话框。
                </para>
                <para>
                    <figure>
                        <title>WEB服务调用程序</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-invoker.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-mapping">
                <title>WEB服务映射</title>
                <para>
                    有这种情况：你需要将一种格式的数据转化为另外的格式（映射或修改数据结构），因为通常一个WEB服务用来与一个远程系统交互，很可能不是另外一个OTRS系统并且/或者不能理解OTRS数据结构和值。在这些情况下一些或所有值必须被修改，有些时候甚至值的名称（键）或整个结构都需要修改，才能匹配另外一端期望的数据。
                </para>
                <para>
                    每个远程系统都有它自己的数据结构，可以为每种情况创建新的映射模块（例如：OTRS自带有一个为SAP Solution
Manager定制的映射模块），但并不总是需要这样单独定制，Mapping::Simple模块可以涵盖大部分的映射需求。
                </para>
                <note>
                    <para>
                        当Mapping::Simple无法处理一个WEB服务所有的映射需求时，就需要创建一个映射模块。要学习关于如何创建一个新的映射模块的更多内容，请参阅OTRS开发手册。
                    </para>
                </note>
                <para>
                    这个模块让你有机会设置默认值来映射整个通讯数据中的每个键或值。
                </para>
                <para>
                    在窗口的开始部分你会看到一个通用部分，在这里你可以设置默认规则，适用于所有没有映射的键和值。还有3个选项可用，如下列表：
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            保持（保持不变）：不对键或值做任何改动。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            忽略（丢弃键/值对）：当这个选项用于键时它会删除键和值，因为当一个键被删除时结果就是键相关的值也被删除。当这个选项用于值时，只有这个值被删除，保留键（现在会关联一个空值）。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            映射到（使用提供键或值为默认）：所有没有定义映射规则的键和/或值，使用这个映射作为默认映射，当你选择这个选项后会出现一个新的文本字段，用来设置默认键或值。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    点击“+”按钮来添加新的键映射，会显示一个新框用于一个特定映射配置。你可以根据需要的随意添加键映射。只需再次点击“+”按钮，在已有映射的下面会出现一个新的映射框。从这个映射你可以定义一个特定键的映射，有下列选项：
                </para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                准确值：如果原键完全匹配，原键字符串会变为一个新的键。
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                正则表达式：键字符串会按照一个正则表达式规则进行替换。
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    点击新增值映射的“+”按钮，会显示一个新行用于值映射。在这里也有键映射那样的选项（准确值和正则表达式）来定义每个值映射。你可以根据需要随意添加值映射，如果你要删除一个值映射，只需点击每个值映射行后面的“-”按钮即可。
                </para>
                <para>
                    可以删除完整的键映射部分（框），只需点击要删除的键映射框右上角的“-”按钮即可。
                </para>
                <para>
                    如果你要删除一个完整的映射配置，返回到相应的操作或调用程序窗口，找到之前选择的映射方向并设置其值为“-”，然后保存配置即可。
                </para>
                <para>
                    <figure>
                        <title>WEB服务映射</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-mapping.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>
        </section>
    </section>
</section>
