<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="webservice_gui">
    <title>WEB服务图形界面</title>
    <para>
        WEB服务图形界面是一个工具，允许你在用户友好、便捷的界面构建复杂的WEB服务配置。它允许：
    </para>
    <para>
        <itemizedlist>
            <listitem>
                <para>
                    创建和删除WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    导入和导出已有WEB服务的配置（用YAML文件格式）。
                </para>
            </listitem>
            <listitem>
                <para>
                    在WEB服务历史窗口查看、还原和导出已有WEB服务的老配置。
                </para>
            </listitem>
            <listitem>
                <para>
                    在调试窗口跟踪每个WEB服务所有的通讯日志。
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <section id="webservice_gui_overview">
        <title>WEB服务概览</title>
        <para>
            The <emphasis>Web Services</emphasis> link in the main screen of Admin
Interface (in the System Administration box) leads to the web services
overview screen, where you are able to manage your web service
configurations. You can add new web services or change the configuration of
the existing ones from this screen.
        </para>
        <para>
            Every web service configuration screen has in the upper part of the screen a
<emphasis>bread crumbs</emphasis> style navigation path. This navigation
path is useful to know exactly in which part of the web service
configuration we are, and also enables the user to jump back to any part of
the configuration process at any time (this action will not save any
changes).
        </para>
        <note>
            <para>
                To create a new web service, press the button <emphasis>Add web
service</emphasis>, and provide the required information.
            </para>
        </note>
        <para>
            <figure>
                <title>WEB服务概览</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-overview.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
        </para>
    </section>

    <section id="webservice_gui_add">
        <title>添加WEB服务</title>
        <para>
            The only required field in this part is the web service
<emphasis>Name</emphasis> that needs to be unique in the system and can not
be left empty. Other fields are also necessary for the configuration like
the <emphasis>Debug Threshold</emphasis> and <emphasis>Validity</emphasis>
but these fields are already populated with the default value for each list.
        </para>
        <para>
            The default value for <emphasis>Debug Threshold</emphasis> is
<emphasis>debug</emphasis>. When configured in this manner all communication
logs are registered in the database. Each subsequent <emphasis>Debug
Threshold</emphasis> value is more restrictive and discards communication
logs of lower order than the one set in the system.
        </para>
        <para>
            <itemizedlist>
                <title>调试阈值级别(从低到高)</title>
                <listitem>
                    <para>
                        Debug（调试）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Info（信息）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Notice（注意）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Error（错误）
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            It is also possible to define the network transport protocol for
<emphasis>OTRS as Provider</emphasis> and <emphasis>OTRS as
requester</emphasis>.
        </para>
        <para>
            Click on the <emphasis>Save</emphasis> button to register the new web
service in the database or click <emphasis>Cancel</emphasis> to discard this
operation. You will now be returned to the web service overview screen.
        </para>
        <para>
            If you already have a web service configuration file in YAML format you can
click on the <emphasis>Import web service</emphasis> button on the left side
of the screen. For more information on importing web services please check
the next section <emphasis>Web Service Change</emphasis>.
        </para>
        <note>
            <para>
                要为一个WEB服务添加或修改更多细节，点击WEB服务概览窗口中WEB服务的名称。
            </para>
        </note>
        <para>
            <figure>
                <title>添加WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-add.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
        </para>
    </section>

    <section id="webservice_gui_examples">
        <title>导入WEB服务样例</title>
        <para>
            在  <ulink
url="http://otrs.github.io/doc/manual/otrs-business-solution/stable/en/html/import-example-web-service.html">OTRS
Business Solution™</ulink>中有可用的示例Web服务，你知道吗？
        </para>
    </section>

    <section id="webservice_gui_change">
        <title>修改WEB服务</title>
        <para>
            在这个窗口你有处理一个WEB服务所有部分的完整功能集。在左侧的操作栏中你可以找到一些按钮，允许你在一个WEB服务上执行所有可能的操作：
        </para>
        <para>
        <itemizedlist>
            <listitem>
                <para>
                    克隆WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    导出WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    导入WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    配置历史。
                </para>
            </listitem>
            <listitem>
                <para>
                    删除WEB服务。
                </para>
            </listitem>
            <listitem>
                <para>
                    调试器。
                </para>
            </listitem>
        </itemizedlist>
        </para>
        <note>
            <para>
                <emphasis>Configuration history</emphasis> and <emphasis>Debugger</emphasis>
will lead you to different screens.
            </para>
        </note>

        <section id="webservice-clone">
            <title>克隆WEB服务</title>
            <para>
                To clone a web service, you need to click on the <emphasis>Clone web
service</emphasis> button. A dialog will be shown where you can use the
default name or set a new name for the (cloned) web service.
            </para>
            <note>
                <para>
                    <emphasis>Remember</emphasis> that the name of the web service must be
unique within the system.
                </para>
            </note>
            <para>Click on <emphasis>Clone</emphasis> button to create the web service clone
or <emphasis>Cancel</emphasis> to close the dialog.</para>
            <para>
                <figure>
                    <title>克隆WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-clone.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-export">
            <title>导出WEB服务</title>
            <para>
                The <emphasis>Export web service</emphasis> button gives you the opportunity
to dump the configuration of the current web service into a YAML file, to
download it and to store it on your file system. This can be specially
useful if you want to migrate the web service from one server to another,
for example from a testing environment to a production system.
            </para>
            <warning>
                <para>
                    所有存储在WEB服务配置中的密码都将以纯文本格式导出。
                </para>
            </warning>
            <para>
                Right after clicking the <emphasis>Export web service</emphasis> button a
save dialog of your browser will appear, just like when you click on a file
download link on a web page.
            </para>
            <note>
                <para>
                    不同操作系统中不同浏览器有它自己的保存对话框窗口和风格。取决于浏览器和它的配置，可能不会显示对话框而是直接将文件保存到一个默认目录中。如有需要请检查你的浏览器文档以获取更多的特定说明。
                </para>
            </note>
            <para>
                <figure>
                    <title>导出WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-export.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-import">
            <title>导入WEB服务</title>
            <para>
                A valid web service configuration YAML file is required to use the import
web service feature. Click on the <emphasis>Import web service</emphasis>
button, browse for the configuration file or provide the complete path in
the input box.
            </para>
            <para>
                Click <emphasis>Import</emphasis> button to create a new web service from a
file or "Cancel" to close the dialog.
            </para>
            <note>
                <para>
                    The web service name will be taken from the configuration file name (e.g. if
the file name is <filename>MyWebservice.yml</filename> the resulting web
service will be named <emphasis>MyWebservice</emphasis>). If a web service
is registered in the system with the same name as the web service that you
want to import, the system will lead you to the web service change screen to
let you change the name of the imported web service.
                </para>
            </note>
            <para>
                <figure>
                    <title>导入WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-import.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-history">
            <title>WEB服务历史</title>
            <para>
                Every change to the web service configuration creates a new entry in the web
service history (as a journal). The web service history screen displays a
list of all configuration versions for a web service. Each row (version) in
the <emphasis>Configuration History List</emphasis> represents a single
revision in the web service history.
            </para>
            <para>
                Click on one of the rows to show the whole configuration as it was on that
particular date / time. The configuration will be shown in the
<emphasis>History details</emphasis> section of this screen. Here you are
also able to export the selected web service configuration version or to
restore that version into the current web service configuration.
            </para>
            <para>
                The <emphasis>Export web service configuration</emphasis> behaves exactly as
the "Export web service" feature in the web service change screen. For more
information refer to that section.
            </para>
            <para>
                If changes to the current web service configuration do not work as expected
and it is not easy to revert the changes manually, you can click on the
<emphasis>Revert web service configuration</emphasis> button. This will open
a dialog to ask you if you are sure to revert the web service
configuration. Click <emphasis>Revert web service configuration</emphasis>
in this dialog to replace the current configuration with the selected
version, or click <emphasis>Cancel</emphasis> to close the dialog.
            </para>
            <warning>
                <para>
                    记住：存储在WEB服务配置中的任何密码都将以纯文本格式导出。
                </para>
                <para>
                    恢复一个配置时请一定小心，因为这个过程是不可逆的。
                </para>
            </warning>
            <para>
                <figure>
                    <title>WEB服务历史</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-history.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-delete">
            <title>删除WEB服务</title>
            <para>
                Sometimes it is necessary to delete a web service completely.  To do this
you can press on the <emphasis>Delete web service</emphasis> button and a
new dialog will appear asking for confirmation.
            </para>
            <para>
                Click on <emphasis>Delete</emphasis> to confirm the removal of the web
service or on <emphasis>Cancel</emphasis> to close the dialog.
            </para>
            <warning>
                <para>
                    删除一个WEB服务后无法撤销，请在删除一个WEB服务时一定要小心。
                </para>
             </warning>
            <para>
                <figure>
                    <title>删除WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-delete.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-debugger">
            <title>WEB服务调试器</title>
            <para>
                调试器存储了一个WEB服务的日志。在调试器窗口你可以跟踪该WEB服务作为提供者或请求者类型的所有通讯日志。
            </para>
            <para>
                显示这个窗口后，请求列表开始载入。在列表完全载入后你可以选择一行（即一条通讯序列）来检查它的详细信息，这个详细信息显示在窗口下方。
            </para>
            <para>
                你可以使用窗口右边的过滤器来收缩通讯列表，你可以过滤的内容有：
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        通讯类型（提供者或请求者）
                    </para>
                </listitem>
                <listitem>
                    <para>
                        日期：在一个特定日期之前或之后
                    </para>
                </listitem>
                <listitem>
                    <para>
                        远程IP地址
                    </para>
                </listitem>
                <listitem>
                    <para>
                        以上所有组合
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                After filter settings are set, push the <emphasis>Refresh</emphasis> button
and a new list will be displayed meeting your search criteria.
            </para>
            <note>
                <para>
                    取决于过滤器的搜索条件，新列表可能无返回结果。
                </para>
            </note>
            <para>
                On the left part of the screen under the action column you can select
<emphasis>Go back to the web service</emphasis> or clear the debugger log by
pushing the <emphasis>Clear</emphasis> button.  This will open a dialog that
ask you to confirm erasing of the log. Click <emphasis>Clear</emphasis> in
the dialog button to perform the action or click on
<emphasis>Cancel</emphasis> to close this dialog.
            </para>
            <para>
                In the <emphasis>Request details</emphasis> section you can see all the
details for the selected communication. Here you can track the complete flow
and check for possible errors or confirm success responses.
            </para>
            <para>
                <figure>
                    <title>WEB服务调试器</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-debugger.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-configuration-change">
            <title>修改WEB服务配置</title>
            <para>
                Returning to the web service change screen, now we are going to review the
right side of it. Here we have the possibility to modify all the general
data for a web service such as name, description, debug threshold, etc. Also
there are two more sections below that allows us to modify specific
parameters for communication types <emphasis>OTRS as Provider</emphasis> and
<emphasis>OTRS as Requester</emphasis>.
            </para>
            <para>
                WEB服务配置需要在每个级别保存，这意味着如果修改了一个设置，到其它部分（这个配置更深层次的部分）的链接将被禁用，强迫你保存当前的配置级别。在保存后禁用了的链接会被重新启用，允许你使用这个配置继续。
            </para>
            <para>
                On the <emphasis>OTRS as provider</emphasis> section it is possible to set
or configure the network transport protocol. Only network transport
back-ends that are registered are shown on the list. To configure the
network transport click on the <emphasis>Configure</emphasis> button.  It is
also possible to add new operations in this box. To do this select one of
the available operations from the <emphasis>Add Operation</emphasis>
list. This will lead you to the operation configuration screen. After saving
the new operation it will be listed in the table above.
            </para>
            <para>
                <emphasis>OTRS as requester</emphasis> is very similar to the previous one,
but instead of <emphasis>operations</emphasis> you can add invokers here.
            </para>
            <para>
                Click the <emphasis>Save</emphasis> button to save and continue configuring
the web service, <emphasis>Save and finish</emphasis> to save and return to
the web service overview screen, or <emphasis>Cancel</emphasis> to discard
current configuration level changes and return to web service overview
screen.
            </para>
            <para>
                <figure>
                    <title>修改WEB服务</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-change.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
            <note>
                <para>
                    Like the other Generic Interface configuration screens such as Network
Transport, Operation, Invoker and Mapping, the initial configuration (add)
screen will only present two options: <emphasis>Save</emphasis> and
<emphasis>Cancel</emphasis>. If the configuration is re-visited, a new
option <emphasis>Save and Finish</emphasis> will appear.  The behavior of
this feature is defined below.
                </para>
                <para>
                    <emphasis>Save</emphasis> will store the current configuration level in the
database and it will return to the previous screen to review your changes or
to configure deeper settings.
                </para>
                <para>
                    <emphasis>Save and Finish</emphasis> will store the current configuration
level in the database and it will return to the previous screen in the
configuration hierarchy (to the immediate upper configuration level).
                </para>
                <para>
                    <emphasis>Cancel</emphasis> will discard any configuration change to the
current configuration level and will return to the previous screen in the
configuration hierarchy.
                </para>
            </note>

            <section id="webservice-provider-network-transport">
                <title>WEB服务提供都网络传输</title>
                <para>
                    In future the list of available network transports will be
increased. Currently only <emphasis>HTTP::SOAP</emphasis> and
<emphasis>HTTP::REST</emphasis> transports are available. Each transport has
different configuration options to setup and they might use different
frontend modules to configure them.
                </para>
                <para>
                    It is quite simple to configure the <emphasis>HTTP::SOAP</emphasis> protocol
as provider.  There are only two settings: <emphasis>Namespace</emphasis>
and <emphasis>Maximum message length</emphasis>. These fields are
required. The first one is a URI to give SOAP methods a context, reducing
ambiguities, and the second one is a field where you can specify the maximum
size (in bytes) for SOAP messages that OTRS will process.
                </para>
                <para>
                    <figure>
                        <title>WEB服务提供者网络传输（HTTP::SOAP）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-soap.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
                <para>
                    或者，你可能需要定义附加的响应头，它们可用于为每个响应添加静态标头值。 只需点击“添加响应头”并填充键和值字段。 附加的标头行的数量没有限制。
                </para>
                <para>
                    For <emphasis>HTTP::REST</emphasis> the configuration might be a bit more
complicated, as it grows dynamically for each configured operation by
adding: <emphasis>Route mapping for Operation
'&lt;OperationName&gt;':</emphasis> and <emphasis>Valid request methods for
Operation '&lt;OperationName&gt;':</emphasis> settings to the default
transport settings <emphasis>Maximum message length:</emphasis> and
<emphasis>Send Keep-Alive:</emphasis>
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>路由映射，用于操作 ‘&lt;操作名称&gt;’:</para>
                        <para>
                            在这个设置中设置一个资源路径，这个路径必须根据WEB服务考虑的需求来定义，这个路径与HTTP请求方法相结合来确定要执行的通用接口操作。
                        </para>
                        <para>
                            路径中可以包含变量，格式为‘:&lt;VariableName&gt;’。在变量位置的每个路径字符串会用这个设置中定义的变量名称替换后添加到请求的有效载荷中。
                        </para>
                        <para>
                            例子：
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                路由映射：/Resource
                            </para>
                            <listitem>
                                <para>有效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                            <listitem>
                                <para>无效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                路由映射：/Resource/:ID
                            </para>
                            <listitem>
                                <para>有效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1?Param1=One
                                </para>
                                <para>
                                    在这两种情况下，ID=1都会发送到操作作为有效载荷的一部分。在这2种情况还添加了Param1=One，取决于HTTP请求方法还会添加其它参数（如果它们在请求头字段中作为一个JSON字符串）。
                                </para>
                            </listitem>
                            <listitem>
                                <para>无效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                路由映射：/Resource/OtherResource/:ID/:Color
                            </para>
                            <listitem>
                                <para>有效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1/Red
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherReosurce/123/Blue?Param1=One
                                </para>
                                <para>
                                    在第一个例子中，ID = 1且Color = Red，第二个例子中ID = 123且Color = Blue。
                                </para>
                            </listitem>
                            <listitem>
                                <para>无效的请求：</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1?Param1=One
                                </para>
                                <para>
                                    在第一个例子中，路径缺失了'/OtherResource'和:Color变量，在第二个例子中只缺失了:Color变量。
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>有效的请求方法，用于操作‘&lt;操作名称&gt;’：</para>
                        <para>
                            HTTP请求方法结合路由映射来确定要使用的操作，可能的选项有：CONNECT、DELETE、GET、HEAD、OPTIONS、PATCH、POST、PUT和TRACE。
                        </para>
                        <para>
                            完全不同的操作可以共享完全相同的映射路径，但是为了正确地确定使用的操作，每个操作的请求方法必须是唯一的。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>WEB服务提供者网络传输（HTTP::REST）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-rest.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-operation">
                <title>WEB服务操作</title>
                <para>
                    The actions that can be performed when you are using OTRS as a provider are
called <emphasis>Operations</emphasis>. Each operation belongs to a
controller. Controllers are collections of operations or invokers, normally
operations from the same controller need similar settings and share the same
configuration dialog. But each operation can have independent configuration
dialogs if needed.
                </para>
                <para>
                    <emphasis>Name</emphasis>, <emphasis>Description</emphasis>,
<emphasis>Backend</emphasis> and <emphasis>Mappings</emphasis> are fields
that normally appear on every operation, other special fields can appear in
non default configuration dialogs to fulfill specific needs of the
operation.
                </para>
                <para>
                    每个操作一般有两个映射配置部分，一个是进入数据映射，另外一个是出站数据映射。你可以为每个映射方向选择不同的映射类型（后端），因为它们的配置是彼此独立的，并且操作后端也是独立的。通常和最普遍的做法是操作在这两种情况下（反向的配置）使用相同的映射类型。完整的映射配置在一个单独的窗口（取决于映射类型）中完成。
                </para>
                <para>
                    操作后端是预先选择的，不能编辑。如果在WEB服务编辑窗口选择了该操作你就会看到这个参数。这个字段仅用于提供信息。
                </para>
                <para>
                    In the left part of the screen on the action column you have the options:
<emphasis>Go back to web service</emphasis> (discarding all changes since
the last save) and <emphasis>Delete</emphasis>.  If you click on the last
one, a dialog will open and ask you if you like to remove the
operation. Click on <emphasis>Delete</emphasis> button to confirm the
removal of the operation and its configuration or
<emphasis>Cancel</emphasis> to close the delete dialog.
                </para>
                <para>
                    <figure>
                        <title>WEB服务的操作</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-operation.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-requester-transport">
                <title>WEB服务请求者网络传输</title>
                <para>
                    The network transport configuration for the requester is similar to the
configuration for the provider. For the Requester
<emphasis>HTTP::SOAP</emphasis> network transport there are more fields to
be set.
                </para>
                <para>
                    Apart from the <emphasis>Endpoint</emphasis> (URI of the Remote System web
service interface to accept requests) and <emphasis>Namespace</emphasis>
which are required fields, you can also specify:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            SOAP消息的编码（如utf-8、latin1、iso-8859-1、cp1250等等）
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            SOAPAction Header: you can use this to send an empty or filled SOAPAction
header. Set to <emphasis>No</emphasis> and the SOAPAction header on the SOAP
message will be an empty string, or set to <emphasis>Yes</emphasis> to send
the SOAP action in Namespace#Action format and define the separator
(typically "/" for .Net web services and "#" for the REST).
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            身份认证：设置身份认证机制，设置为“-”不使用任何身份认证，或从列表中选择一个身份认证后会出现相关的详细字段。
                        </para>
                    </listitem>
                </itemizedlist>
                <note>
                    <para>
                        Currently only the <emphasis>BasicAuth</emphasis> (HTTP) authentication
mechanism is implemented. You can decide whether or not to use it depending
on the Remote System configuration. If used, you must provide the User Name
and the Password to access the remote system.
                    </para>
                </note>
                <warning>
                    <para>
                        如果你提供了一个身份认证密码并且随后你导出这个WEB服务到一个YAML文件，这个密码会以明文字符串导出到YAML文件中。请知悉这一点并在需要时采取必要的预防措施。
                    </para>
                </warning>
                <para>
                    <figure>
                        <title>WEB服务请求者的网络传输（HTTP::SOAP）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-soap.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
                <para>
                    In the case of HTTP::REST, this configuration also grows dynamically
depending on the configured invokers by adding <emphasis>Controller mapping
for Invoker '&lt;InvokerName&gt;':</emphasis> and <emphasis>Valid request
command for Invoker '&lt;InvokerName&gt;':</emphasis> for each
invoke. Authentication and SSL options are similar to the ones in HTTP::SOAP
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>主机</para>
                        <para>
                            远程系统的主机名称或IP地址和端口号，如果没有端口号，默认使用80端口。
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>控制器映射，用于调用程序&lt;调用程序名称&gt;:</para>
                        <para>
                            在这个设置中设置一个资源路径，这个路径必须根据远程WEB服务的需求来定义，并遵从它的规定。
                        </para>
                        <para>
                            路径可以包含‘:&lt;变量名称&gt;’格式的变量，每个变量名称匹配（要发送的）当前数据将被对应的数据值替换。匹配的变量名称和值将从当前数据中移除。取决于HTTP请求命令，剩余的数据可以在请求正文中作为一个JSON字符串或在URI中作为查询参数发送。
                        </para>
                        <para>
                            例子：
                        </para>
                        <para>
                            当前数据：Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four。
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                控制器映射：/Resource
                            </para>
                            <listitem>
                                <para>替换后：</para>
                                <para>/Resource</para>
                            </listitem>
                            <listitem>
                                <para>剩余数据：</para>
                                <para> Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                控制器映射：/Resource/:Var1
                            </para>
                            <listitem>
                                <para>替换后：</para>
                                <para>/Resource/One</para>
                            </listitem>
                            <listitem>
                                <para>剩余数据：</para>
                                <para> Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                       <itemizedlist mark="round">
                            <para>
                                控制器映射：/Resource/:Var1?Param1=:Var2&amp;Var3=:Var3
                            </para>
                            <listitem>
                                <para>替换后：</para>
                                <para>/Resource/One?Param1=Two&amp;Var3=Three</para>
                            </listitem>
                            <listitem>
                                <para>剩余数据：</para>
                                <para>Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>有效的请求命令，用于调用程序 ‘&lt;调用程序名称&gt;’：</para>
                        <para>
                            这个字段确定使用的HTTP请求方法，可能的选项有：CONNECT、DELETE、GET、HEAD、OPTIONS、PATCH、POST、PUT和TRACE。如果没有选择命令，则使用默认命令。
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>默认命令</para>
                        <para>
                            用作所有没有定义请求命令的调用程序的最后依靠。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>WEB服务请求者网络传输（HTTP::REST）</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-rest.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-invoker">
                <title>WEB服务调用程序</title>
                <para>
                    The actions that can be performed when you are using OTRS as a requester are
called <emphasis>Invokers</emphasis>. Each invoker belongs to a controller
(controllers are collections of operations or invokers). Usually invokers
from the same controller need similar settings and share the same
configuration dialogs.  Each invoker can have independent configuration
dialogs if needed.
                </para>
                <para>
                    <emphasis>Name</emphasis>, <emphasis>Description</emphasis>,
<emphasis>Backend</emphasis> and <emphasis>Mappings</emphasis> are fields
that normally appear on every invoker. Additionally the list of event
triggers and other special fields can appear on non default configuration
dialogs to fulfill special needs of the invoker.
                </para>
                <para>
                    每个调用程序通常有两个映射配置部分，一个是对进入的数据，另外一个是对发出的数据。你可以给每个映射方向选择不同的映射类型（后端），因为它们的配置是彼此独立的，调用程序后端也是独立的。通常和最普遍的做法是调用程序在这两种情况下（反射的配置）使用相同的映射类型。完整的映射配置在一个单独的窗口（取决于映射类型）中完成。
                </para>
                <para>
                    操作后端是预先选择的，不能编辑。如果在WEB服务编辑窗口选择了该调用程序你就会看到这个参数。这个字段仅用于提供信息。
                </para>
                <para>
                    Event triggers are events within OTRS such as
<literal>TicketCreate</literal>, <literal>ArticleSend</literal>, etc. These
can act as triggers to execute the invoker. Each invoker needs to have at
least one event trigger registered, or the invoker will be useless, because
it will never be called. Additionally a set of rules (conditions) for each
event can be defined to have more control over the triggering of the events,
This rules depends on the data of the object associated with the event.  The
asynchronous property of the event triggers define if the OTRS process will
handle the invoker or if it will be delegated to the OTRS Daemon.
                </para>
                <note>
                    <para>
                        OTRS守护进程是一个执行后台任务的单独的进程集，使用守护进程就不会影响OTRS进程本身，比如服务不可用或有网络问题，远程系统花费大量时间才响应。如果你不使用OTRS守护进程，则使用WEB服务会导致OTRS变慢或无法响应。所以强烈推荐尽可能使用异步事件触发器。
                    </para>
                </note>
                <para>
                    To add an Event trigger, first select the event family from the first list,
then the event name from the second list, then set the asynchronous property
(if unchecked means that the event trigger will not be asynchronous) and
finally click on the plus button. A new event trigger will be created and it
will be listed on the invoker <emphasis>Event Triggers</emphasis> list.
                </para>
                <para>
                    From the <emphasis>Event Triggers</emphasis> list each events shows if it
contains conditions or not.  The edit button next to the condition property
allows to add or edit the current conditions of the event.
                </para>
                <para>
                    To delete an Event trigger, simply locate the event trigger to be deleted in
the <emphasis>Event Triggers</emphasis> list and click on the trash icon at
the end of the row. This will open a dialog that asks you if you are sure to
delete the event trigger.  Click <emphasis>Delete</emphasis> to remove the
event trigger from the list, or <emphasis>Cancel</emphasis> to close the
dialog.
                </para>
                <para>
                    In the left part of the screen on the action column you have the options:
<emphasis>Go back to web service</emphasis> (discarding all changes since
the last save) and "Delete".  If you click on the last one, a dialog will
emerge and ask you if you like to remove the invoker. Click on the
<emphasis>Delete</emphasis> button to confirm the removal of the invoker and
its configuration or <emphasis>Cancel</emphasis> to close the delete dialog.
                </para>
                <para>
                    <figure>
                        <title>WEB服务调用程序</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-invoker.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-invoker-event">
                <title>WEB服务调用程序事件</title>
                <para>
                    有时定义一个事件来触发一个调用程序可能会导致对远程服务器的许多不必要或错误的请求。 在这种情况下，可以设置事件条件来限制调用程序的触发。
                </para>
                <para>
                    要访问可以定义条件的事件设置屏幕，需要在调用程序屏幕中，并从中点击此条件生效的事件条件状态旁边的编辑图标。
                </para>
                <para>
                    Within the event settings screen in the action bar there is a button to go
back to the invoker screen as well as a button to remove all the event
conditions.  By default the screen is pre-populated with the first
condition. Update the Type of linkings between conditions if more than one
condition is planned, then change the Type of linking from
<emphasis>Condition 1</emphasis> if more than one field is planned. Both
linking fields accepts <emphasis>and</emphasis>, <emphasis>or</emphasis> or
<emphasis>xor</emphasis> as values.
                </para>
                <para>
                    Fill the <emphasis>Field</emphasis> name, set the matching type
(<emphasis>String</emphasis> for exact match, <emphasis>Regexp</emphasis>
for regular expression or <emphasis>Validation Module</emphasis>) and set
Value to match (in case of <emphasis>Validation Module</emphasis> the full
class name like:
<literal>Kernel::GenericInterface::Event::Validation::ValidateDemo</literal>).
                </para>
                <para>
                    To add more fields to the condition, click on the <emphasis>+</emphasis>
button in the fields header. To remove a field, click on the
<emphasis>-</emphasis> button in the field row. It is necessary to keep at
least one field per condition.
                </para>
                <para>
                    To add more conditions clock on the button below the last condition box.  To
remove remove a condition, click on the <emphasis>-</emphasis> button in the
condition header.  It is necessary to keep at least one condition in the
set. To remove all conditions use the button in the sidebar.
                </para>
                <para>
                    <figure>
                        <title>WEB服务调用程序事件</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-invoker-event.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-mapping">
                <title>WEB服务映射</title>
                <para>
                    有这种情况：你需要将一种格式的数据转化为另外的格式（映射或修改数据结构），因为通常一个WEB服务用来与一个远程系统交互，很可能不是另外一个OTRS系统并且/或者不能理解OTRS数据结构和值。在这些情况下一些或所有值必须被修改，有些时候甚至值的名称（键）或整个结构都需要修改，才能匹配另外一端期望的数据。
                </para>
                <para>
                    Each Remote System has it own data structures and it is possible to create
new mapping modules for each case (e.g. there is a customized mapping module
for SAP Solution Manager shipped with OTRS), but it is not always
necessary.  The module <literal>Mapping::Simple</literal> should cover most
of the mapping needs.
                </para>
                <note>
                    <para>
                        When <literal>Mapping::Simple</literal> does not cover all mapping needs for
a web service, a new mapping module should be created. To learn more about
how to create new mapping modules please consult the OTRS Development
Manual.
                    </para>
                </note>
                <para>
                    这个模块让你有机会设置默认值来映射整个通讯数据中的每个键或值。
                </para>
                <para>
                    在窗口的开始部分你会看到一个通用部分，在这里你可以设置默认规则，适用于所有没有映射的键和值。还有3个选项可用，如下列表：
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            保持（保持不变）：不对键或值做任何改动。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            忽略（丢弃键/值对）：当这个选项用于键时它会删除键和值，因为当一个键被删除时结果就是键相关的值也被删除。当这个选项用于值时，只有这个值被删除，保留键（现在会关联一个空值）。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            映射到（使用提供键或值为默认）：所有没有定义映射规则的键和/或值，使用这个映射作为默认映射，当你选择这个选项后会出现一个新的文本字段，用来设置默认键或值。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Clicking on the <emphasis>+</emphasis> button for new key map, will display
a new box for a single mapping configuration. You can add as many key
mappings as needed. Just click on the <emphasis>+</emphasis> button again
and a new mapping box will appear below the existing one. From this mapping
boxes you can define a map for a single key, with the next options:
                </para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                准确值：如果原键完全匹配，原键字符串会变为一个新的键。
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                正则表达式：键字符串会按照一个正则表达式规则进行替换。
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    Pressing the new value map <emphasis>+</emphasis> button will display a new
row for a value map.  Here it is also possible to define rules for each
value to be mapped with the same options as for the key map (Exact value and
Regular expression). You can add as many values to map as needed, and if you
want to delete one of them, just click on the <emphasis>-</emphasis> button
for each mapping value row.
                </para>
                <para>
                    Deleting the complete key mapping section (box) is possible, just push on
the <emphasis>-</emphasis> button located on the up right corner of each box
that you want to delete.
                </para>
                <para>
                    If you need to delete a complete mapping configuration: go back to the
corresponding operation or invoker screen, look for the mapping direction
that you select before and set its value to <emphasis>-</emphasis>, and save
the configuration to apply changes.
                </para>
                <para>
                    <figure>
                        <title>WEB服务映射</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-mapping.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>
        </section>
    </section>
</section>
