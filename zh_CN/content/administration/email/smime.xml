<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="smime">
<title>用S/MIME加密邮件</title>

<para>
乍一看，使用S/MIME加密似乎要比PGP复杂一点。首先，你必须为OTRS系统建立一个认证机构（CA）。随后的步骤与PGP非常相似：配置OTRS、安装你自己的证书、导入其它需要的公共证书等等。
</para>

<para>
S/MIME配置主要是在OTRS的WEB界面之外进行，需要用‘otrs’用户在shell中执行。Linux下MIME配置基于SSL（OpenSSL）。所以首先要检查你的系统中是否安装了OpenSSL软件包。OpenSSL中包括了一个叫CA.pl的脚本文件，可以用它来执行创建证书的大部分重要步骤。为了简化过程，在文件系统查找CA.pl的路径，并将这个路径临时加入当前shell的PATH变量（见下面的脚本）。
</para>

<para>
<screen>
otrs@linux:~&gt; rpm -ql openssl | grep CA
/usr/share/ssl/misc/CA.pl
otrs@linux:~&gt; export PATH=$PATH:/usr/share/ssl/misc
otrs@linux:~&gt; which CA.pl
/usr/share/ssl/misc/CA.pl
otrs@linux:~&gt; mkdir tmp; cd tmp
otrs@linux:~/tmp&gt;
</screen>
</para>

<para>
<emphasis>脚本：配置S/MIME。</emphasis>
</para>

<para>
上面的脚本显示创建了一个新的临时目录~/tmp，这是生成证书的位置。
</para>

<para>
要创建一个证书，在命令行中执行下面的操作（我们假定OTRS系统管理员已经为测试和学习目的创建了一个SSL证书。如果你已经有一个验证过的用来加密的SSL证书，使用它就行了，可以跳过这些步骤）：
</para>

<para>
<orderedlist numeration="arabic">
<listitem>
    <para>
    建立你自己的SSL认证机构。你需要它来证明你自己的SSL证书请求（见下面的脚本）。
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -newca
CA certificate filename (or enter to create)

Making CA certificate ...
Generating a 1024 bit RSA private key
...++++++
......++++++
writing new private key to './demoCA/private/cakey.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:DE
State or Province Name (full name) [Some-State]:OTRS-state
Locality Name (eg, city) []:OTRS-town
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Your company
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:OTRS Admin
Email Address []:otrs@your-domain.tld
otrs@linux:~/tmp&gt; ls -la demoCA/
total 8
-rw-r--r--  1 otrs otrs 1330 2006-01-08 17:54 cacert.pem
drwxr-xr-x  2 otrs otrs   48 2006-01-08 17:53 certs
drwxr-xr-x  2 otrs otrs   48 2006-01-08 17:53 crl
-rw-r--r--  1 otrs otrs    0 2006-01-08 17:53 index.txt
drwxr-xr-x  2 otrs otrs   48 2006-01-08 17:53 newcerts
drwxr-xr-x  2 otrs otrs   80 2006-01-08 17:54 private
-rw-r--r--  1 otrs otrs   17 2006-01-08 17:54 serial
otrs@linux:~/tmp&gt;
    </screen>
    </para>

    <para>
    <emphasis>脚本：建立一个SSL认证机构。</emphasis>
    </para>

</listitem>
<listitem>
    <para>
    生成一个证书请求（见下面的脚本）。
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -newreq
Generating a 1024 bit RSA private key
..........................................++++++
....++++++
writing new private key to 'newreq.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:DE\keyreturn
State or Province Name (full name) [Some-State]:OTRS-state
Locality Name (eg, city) []:OTRS-town
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Your company
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:OTRS admin
Email Address []:otrs@your-domain.tld

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
Request (and private key) is in newreq.pem
otrs@linux:~/tmp&gt; ls -la
total 4
drwxr-xr-x  6 otrs otrs  232 2006-01-08 17:54 demoCA
-rw-r--r--  1 otrs otrs 1708 2006-01-08 18:04 newreq.pem
otrs@linux:~/tmp&gt;
    </screen>
    </para>

    <para>
    <emphasis>脚本：创建一个证书请求。</emphasis>
    </para>
</listitem>
<listitem>
    <para>
    证书请求的签名。证书请求要么用你自己的CA证明签名，要么使用另外的外部认证过的CA以获取更可信的签名（见下面的脚本）。
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -signreq
Using configuration from /etc/ssl/openssl.cnf
Enter pass phrase for ./demoCA/private/cakey.pem:
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number:
            fd:85:f6:9f:14:07:16:c8
        Validity
            Not Before: Jan  8 17:04:37 2006 GMT
            Not After : Jan  8 17:04:37 2007 GMT
        Subject:
            countryName               = DE
            stateOrProvinceName       = OTRS-state
            localityName              = OTRS-town
            organizationName          = Your Company
            commonName                = OTRS administrator
            emailAddress              = otrs@your-domain.tld
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            Netscape Comment:
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier:
                01:D9:1E:58:C0:6D:BF:27:ED:37:34:14:D6:04:AC:C4:64:98:7A:22
            X509v3 Authority Key Identifier:
                keyid:10:4D:8D:4C:93:FD:2C:AA:9A:B3:26:80:6B:F5:D5:31:E2:8E:DB:A8
                DirName:/C=DE/ST=OTRS-state/L=OTRS-town/O=Your Company/
                CN=OTRS admin/emailAddress=otrs@your-domain.tld
                serial:FD:85:F6:9F:14:07:16:C7

Certificate is to be certified until Jan  8 17:04:37 2007 GMT (365 days)
Sign the certificate? [y/n]:y

1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated
Signed certificate is in newcert.pem
otrs@linux:~/tmp&gt;
    </screen>
    </para>
    <para>
    <emphasis>脚本：证书请求的签名。</emphasis>
    </para>
</listitem>
<listitem>
    <para>
    使用已经签名的证书请求生成你自己的证书和相关的所有数据。
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -pkcs12 "OTRS Certificate"
Enter pass phrase for newreq.pem:
Enter Export Password:
Verifying - Enter Export Password:
otrs@linux:~/tmp&gt; ls -la
total 12
drwxr-xr-x  6 otrs otrs  328 2006-01-08 18:04 demoCA
-rw-r--r--  1 otrs otrs 3090 2006-01-08 18:13 newcert.p12
-rw-r--r--  1 otrs otrs 3791 2006-01-08 18:04 newcert.pem
-rw-r--r--  1 otrs otrs 1708 2006-01-08 18:04 newreq.pem
otrs@linux:~/tmp&gt;
    </screen>
    </para>
    <para>
    <emphasis>脚本：生成一个新证书。</emphasis>
    </para>
</listitem>
</orderedlist>
</para>

<para>
现在已经执行了这些操作，还必须在OTRS中完成S/MIME设置。
</para>

<para>
这部分的设置在系统管理页面中进行，选择<link
linkend="adminarea-smime">“S/MIME证书”</link>链接。如果在OTRS中还没有启用S/MIME支持，会弹出遮罩窗口提示系统管理员并提供了启用它的链接。
</para>

<para>
通过系统配置组<link
linkend="ConfigReference_Framework:Crypt::SMIME">"Crypt::SMIME"</link>，你还可以启用并配置通用S/MIME支持。
</para>

<para>
在这里你可以激活S/MIME支持，并定义OpenSSL命令的路径和证书目录。前面创建的密钥文件必须保存在这里指定的目录中，否则OpenSSL无法使用证书。
</para>

<para>
下一步是在系统管理页面的<link
linkend="adminarea-smime">S/MIME证书</link>链接中执行。在这里，你可以导入OTRS系统的私钥和其它通信伙伴的公钥。输入本节开始部分创建的公钥并添加到OTRS中。
</para>

<para>
显然，所有通信伙伴的S/MIME公钥也可以通过<link
linkend="adminarea-customers">客户联系人管理工具</link>导入。
</para>

<section id="SMIMEFetchFromCustomer">
    <title>在客户用户后端获取S/MIME证书</title>
    <para>
        It is possible to use a Customer User Backed (such as LDAP) as the source of
public S/MIME certificates. This certificates could be imported into the
system and be displayed in <link linkend="adminarea-smime">S/MIME
configuration on the OTRS Admin page</link> and they can be used from OTRS
to send encrypted emails to the customers.
    </para>
    <para>
        In order to enable this feature is needed to:
    </para>
    <para>
        <orderedlist numeration="arabic">
            <listitem><para>Enable <literal>SMIME</literal> in SysConfig</para></listitem>
            <listitem><para>Enable <literal>SMIME::FetchFromCustomer</literal> in SysConfig</para></listitem>
            <listitem>
                <para>
                    Configure a customer user backend to provide the attribute
<literal>UserSMIMECertificate</literal> with the customer user S/MIME
certificate (there is an example for LDAP customer user mapping in
<filename>$OTRS_HOME/Kernel/Config/Defaults.pm</filename>).
                </para>
            </listitem>
        </orderedlist>
    </para>
    <para>
        This feature can be used in three different ways:
    </para>
    <para>
        <orderedlist numeration="arabic">
            <listitem>
                <para>
                    收到的邮件：
                </para>
                <para>
                    A dedicated Postmaster filter
(<literal>PostMaster::PreFilterModule###000-SMIMEFetchFromCustomer</literal>
in SysConfig) will extract the email address of each incoming email and will
try to find the email address is the list of customers. If found it will try
get the S/MIME certificate from customer user attributes. If a certificate
is found it will try to import it (unless it was already imported).
                </para>
            </listitem>
            <listitem>
                <para>
                    特定的邮件地址或所有客户：
                </para>
                <para>
                    The console command
<literal>Maint::SMIME::CustomerCertificate::Fetch</literal> can be used to
import the S/MIME certificate of one customer email address as:
                </para>
                <para>
                    <screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.Console.pl Maint::SMIME::CustomerCertificate::Fetch --email customer@example.com
                    ]]></screen>
                </para>
                <para>
                    In this case the console command will try to match the supplied email
address with one of the customer users. If found it will try add to the
system the S/MIME certificate found in customer user properties (if the
certificate is not already added).
                </para>
                <para>
                    The same console command can be used to import the S/MIME certificates of
all customer users (limited to
<literal>CustomerUserSearchListLimit</literal> property from the customer
user backend). This option is discouraged specially for systems with a large
number of customer users as it might require too much time to execute and
depending on the limit it might be possible that not all customer
certificates will be fetch. Execute the console command in this mode as:
<screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.Console.pl Maint::SMIME::CustomerCertificate::Fetch --add-all
                    ]]></screen>
                </para>
                <para>
                    For this option the console command will query the customer user backends to
get all possible customers and for each it will check if there is a S/MIME
certificate. If a certificate is found, it will try to add it to the system
(if the certificate is not already added).
                </para>
            </listitem>
            <listitem>
                <para>
                    更新已有的证书：
                </para>
                <para>
                    Another console command
<literal>Maint::SMIME::CustomerCertificate::Renew</literal> can be used to
check for all existing certificates in the system. This verifies that the
existing certificates from customer users matches the ones that are
retrieved by the customer user properties. Any new certificate in the
customer user backend will be added into the system (no certificates are
deleted in this process).
                </para>
                <para>
                    This console command is executed once a day by the OTRS daemon automatically
with the task
<literal>Daemon::SchedulerCronTaskManager::Task###RenewCustomerSMIMECertificates</literal>
(as seen in SysConfig), but it can be also executed manually on demand as:
                </para>
                <para>
                    <screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.Console.pl Maint::SMIME::CustomerCertificate::Renew
                    ]]></screen>
                </para>
            </listitem>
        </orderedlist>
    </para>
</section>

</section>
