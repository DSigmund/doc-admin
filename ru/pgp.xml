<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<!-- $Id: pgp.xml,v 1.9 2011-03-02 13:51:33 mg Exp $ -->
<chapter id='configure-pgp'>
<title> PGP</title>

<para>
OTRS может подписывать или шифровать исходящие сообщения с помощью
PGP. Также зашифрованные вохдящие сообщения могут быть расшифрованы.
Шифрование и дешифрование осуществляется с помощью GPL-инструмента
GnuPG. Чтобы установить GnuPG для OTRS, нужно проделать следующие действия.
</para>

<para>
<orderedlist numeration="arabic">
    <listitem>
    <para>
    Установка GnuPG с помощью менеджера пакетов вашей операционной системы.
    </para>
    </listitem>
    <listitem>
    <para>
    Настройка GnuPG для использования с OTRS. Необходимые каталоги для GnuPG и
должен быть создан личный закрытй ключ. Команда приведенная в Сценарии 16.1
должна быть выполнена от имени OTRS-пользователя в командной строке.
    </para>

    <para>
    <screen>
    linux:~# su otrs
    linux:/root$ cd
    linux:~$ pwd
    /opt/otrs
    linux:~$ gpg --gen-key
    gpg (GnuPG) 1.4.2; Copyright (C) 2005 Free Software Foundation, Inc.
    This program comes with ABSOLUTELY NO WARRANTY.
    This is free software, and you are welcome to redistribute it
    under certain conditions. See the file COPYING for details.

    gpg: directory `/opt/otrs/.gnupg' created
    gpg: new configuration file `/opt/otrs/.gnupg/gpg.conf' created
    gpg: WARNING: options in `/opt/otrs/.gnupg/gpg.conf' are not yet active during t
    his run
    gpg: keyring `/opt/otrs/.gnupg/secring.gpg' created
    gpg: keyring `/opt/otrs/.gnupg/pubring.gpg' created
    Please select what kind of key you want:
       (1) DSA and Elgamal (default)
       (2) DSA (sign only)
       (5) RSA (sign only)
    Your selection? 1
    DSA keypair will have 1024 bits.
    ELG-E keys may be between 1024 and 4096 bits long.
    What keysize do you want? (2048)
    Requested keysize is 2048 bits
    Please specify how long the key should be valid.
         0 = key does not expire
      &lt;n&gt;  = key expires in n days
      &lt;n&gt;w = key expires in n weeks
      &lt;n&gt;m = key expires in n months
      &lt;n&gt;y = key expires in n years
    Key is valid for? (0)
    Key does not expire at all
    Is this correct? (y/N) y

    You need a user ID to identify your key; the software constructs the user ID
    from the Real Name, Comment and Email Address in this form:
        "Heinrich Heine (Der Dichter) &lt;heinrichh@duesseldorf.de&gt;"

    Real name: Ticket System
    Email address: support@example.com
    Comment: Private PGP Key for the ticket system with address support@example.com
    You selected this USER-ID:
    "Ticket System (Private PGP Key for the ticket system with address support@examp
    le.com) &lt;support@example.com&gt;"

    Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O
    You need a Passphrase to protect your secret key.

    Passphrase: secret
    Repeat passphrase: secret

    We need to generate a lot of random bytes. It is a good idea to perform
    some other action (type on the keyboard, move the mouse, utilize the
    disks) during the prime generation; this gives the random number
    generator a better chance to gain enough entropy.
    ++++++++++.+++++++++++++++++++++++++....+++++.+++++...+++++++++++++++++++++++++.
    +++++++++++++++++++++++++.+++++.+++++.+++++++++++++++++++++++++&gt;++++++++++&gt;+++++
    .......&gt;+++++&lt;+++++................................+++++

    Not enough random bytes available.  Please do some other work to give
    the OS a chance to collect more entropy! (Need 280 more bytes)

    ++++++++++.+++++..++++++++++..+++++....++++++++++++++++++++.+++++++++++++++.++++
    ++++++++++++++++++++++++++.++++++++++.+++++++++++++++.++++++++++.+++++++++++++++
    ..+++++&gt;.+++++....&gt;+++++........................................................
    ...........................................................&gt;+++++&lt;+++++.........
    .............+++++^^^
    gpg: /opt/otrs/.gnupg/trustdb.gpg: trustdb created
    gpg: key 7245A970 marked as ultimately trusted
    public and secret key created and signed.

    gpg: checking the trustdb
    gpg: 3 marginal(s) needed, 1 complete(s) needed, PGP trust model
    gpg: depth: 0  valid:   1  signed:   0  trust: 0-, 0q, 0n, 0m, 0f, 1u
    pub   1024D/7245A970 2006-02-03
          Key fingerprint = 2ED5 BC36 D2B6 B055 7EE1  5833 1D7B F967 7245 A970
     uid                  Ticket System (Private pgp key for ticket system with addre
    ss support@example.com) &lt;support@example.com&gt;
    sub   2048g/52B97069 2006-02-03

    linux:~$
    </screen>
    </para>

    <para>
        <emphasis>Сценарий 16.1. Настройка GnuPG.</emphasis>
    </para>

    <para>
    Как показано в Сценарии 16.1 для большинства настроек значением по умолчанию
есть OK. Только значения для владельца ключа должны быть введены правильно а
также пароль должен быть указан правильно.
    </para>
    </listitem>
    <listitem>
    <para>
    Теперь OTRS готов для использования PGP. Откройте SysConfig-интерфейс через
панель управления администратора и найдите "PGP". Выберите подгруппу
Crypt::PGP из результатов поиска.
    </para>

    <para>
    На странице с PGP-настройками, PGP должен быть активирован для OTRS (первая
опция). Также нужно проверить путь к gpg-программе.
    </para>

    <para>
    Следующим должен быть изменен параметр конфигурации (PGP::Options). С
помощью этих настроек конфигурации, которые используются для каждого вызова
gpg пользователем OTRS, могут быть указаны. Особенно каталог для
конфигурационных файлов GnuPG для OTRS пользователя есть очень важными. В
примере <filename>/opt/otrs/.gnupg</filename> используется. Эта директоиря
была создана на первом шаге конфигурации PGP.
    </para>

    <para>
    Используя последний параметр конфигурации можно указать пары для ключей ID и
их пароли для собственных закрытых ключей. Поскольку общающиеся люди из за
пределов системы пишут в систему обработки заявок и их сообщиния шифруются с
открытым ключем, OTRS может расшифровать эти сообщения с помощью OTRS
ID/пароль указаных здесь.
    </para>

    <para>
    Как получить идентификатор вашего собственного закрытого ключа? ID вашего
собственного закрытого идентификатора отображается во время генерации
(см. ниже шаг 1). Также есть возможность получить ID, указав команду из
Сценария 16.2 вызванную с правами OTRS-пользователя:
    </para>

    <para>
    <screen>
    linux:~# su otrs
    linux:/root$ cd
    linux:~$ pwd
    /opt/otrs
    linux:~$ gpg --list-keys
    /opt/otrs/.gnupg/pubring.gpg
    ----------------------------
    pub   1024D/7245A970 2006-02-03
    uid                  Ticket System (Private pgp key for ticket system with
    address support@example.com) &lt;support@example.com&gt;
    sub   2048g/52B97069 2006-02-03

    linux:~$
    </screen>
    </para>

    <para>
        <emphasis>Сценарий 16.2. Получение ID вашего собственного приватного
ключа.</emphasis>
    </para>

    <para>
    Идентификатор (ID) закрытого ключа можно найти в строке, которая начинается
с "sub". Это шестнадцатеричные строки из восьми символов длиной, например
"52B97069".  Пароль, который нужно указать для этого ключа в системе
обработки заявок такой же как данные при генерации ключей.
    </para>

    <para>
    После того, как эти данные были введены, нажмите кнопку "Обновить" чтобы
сохранить настройки. Теперь OTRS готов принимать и расшифровывать
кодированные сообщения.
    </para>
    </listitem>
    <listitem>
    <para>
    И наконец, нужно импортировать открытый ключ клиента. Это гарантирует, что
зашифрованные сообщение также могут быть отправлены для этого клиента. Есть
два способа импортировать открытый ключ клиента.
    </para>

    <para>
    Первый способ указать открытый ключ клиента в веб-интерфейсе управления
клиентами. Доступ можуте быть дан если клиент создан или изменены его
данные.
    </para>

    <para>
    Вторая возможность заключается в определении ключей используя настройки PGP,
куда можно зайти через панель управления OTRS. В правой стороне этой
страницы отображаются все импортированные открытые ключи для клиентов. После
того как PGP была активирована и сконфигурирована для работы с OTRS, ваш
собственный открытый ключ должен также отображатся. В левой части страницы
настроек PGP возможно производить поиск по ключам. Также новый открытый ключ
может быть загружен из файла.
    </para>

    <para>
    Файлы с открытым ключем, которые нужно импортировать в OTRS должны
соответствовать ключевым файлам GnuPGP. В большинстве случаев, ключ
сохраняется в файле как "ASCII armored key". OTRS может работать с этим
форматом.
    </para>
    </listitem>
</orderedlist>
</para>
</chapter>
