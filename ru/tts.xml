<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<!-- $Id: tts.xml,v 1.1 2010-12-21 09:13:39 mg Exp $ -->
<chapter id="tts">
<title>Основы систем обработки заявок</title>

<abstract>
<para>
В этой главе дается краткий обзор идеи заявок в целом и, конкретных систем
обработки заявок. Краткий пример иллюстрирует преимущества от использования
системы обработки заявок.
</para>
</abstract>

<section id="basic-tts-example">
<title>Что такое система обработки заявок и зачем она нужна?</title>

<para>
Следующий пример показывает, что собой представляет система обработки заявок
и как можно сэкономить время и деньги используя подобную систему в своей
компании.
</para>

<para>
Давайте представим, что Макс занимается производством
видеомагнитофонов. Поскольку программирование видеомагнитофонов является
очень сложным занятием, Макс получает много писем от клиентов, нуждающихся в
помощи. Спустя несколько дней Макс слишком занят и у него нету свободного
времени, чтобы ответить на все письма, так что его клиенты должны быть
весьма терпеливы и ждать своего ответа. Некоторые клиенты не хотят ждать так
долго, и пишут второе письмо, с тем же вопросом. Все письма, с просьбой о
помощи хранятся в одном почтовом ящике. Письма не сортируются и Макс
отвечает на них пользуясь обычной программой для работы с эллектронной
почтой.
</para>

<para>
Поскольку Макс не может быстро ответить на все сообщения, разработчики Джо и
Джон берутся помочь Максу разобрать его почту. Так как Макс, Джо и Джон
используют одну и ту же схему с одним почтовым ящиком, хранящим входящие
письма,  все они используют этот единственный ящик. Джо и Джон ничего не
знают о том, что Макс получил два одинаковых письма от одного отчаявшегося
клиента. Таким образом Джо отвечает на первое сообщение а Джон - на второе
сообщение этого клиента, оба письма содержат полезную информацию о том, как
решить проблему. Клиент получает два разных ответа, но дело в том, что у
Макса нету никакой информации о том, что написали Джон и Джо. Макс не имеет
никакого представления о том, что отвечают Джо и Джон, ни о том связаны ли
все проблемы клиентов с видеомагнитофонами, ни о том, какие проблемы
возникают чаще всего, ни о том сколько времени и денег он должен потратить
на поддержку клиентов.
</para>

<para>
На заседании, коллега рассказывает Максу о системе обработки заявок и о том,
что она действительно может помочь Максу решить его проблемы с поддержкой
клиентов. После поиска информации в Интернете, Макс решает установить
Открытую Систему Обработки Заявок (Open Ticket Request System, OTRS) на
компьютере, который доступен из веб как для клиентов компании так и для ее
сотрудников. Теперь, запросы клиентов больше не приходят на частный почтовый
ящик Макса, а на почтовый ящик, который используется OTRS. Система обработки
заявок подключена к этому почтовому ящику и хранит все сообщения в своей
базе данных. Для каждого нового запроса система генерирует автоматический
ответ и отправляет его клиенту, так что теперь клиент знает, что его
сообщение поступило в обработку и ответ будет дан в ближайшее время. Для
каждого запроса OTRS создает прямую ссылку - номер заявки. Теперь, клиенты
довольны, потому что они получают быстрый ответ на свои вопросы и им уже не
нужно писать второе письмо с тем же вопросом. Теперь, Макс, Джон и Джо могут
войти в OTRS используя обычный веб-браузер и отвечать на поступившие
вопросы. Поскольку система блокирует заявку, на которую будет дан ответ, ни
одно сообщение не будет отредактировано дважды.
</para>

<para>
Давайте представим, что мистер Смит делает запрос в компанию Макса и его
сообщение обрабатывается системой OTRS. Джон дает краткий ответ на этот
запрос, но у мистера Смита есть дополнительный вопрос и он отвечает на
письмо Джона. Поскольну у Джона и своих дел хватает, на письмо мистера Смита
отвечает Макс. Способность OTRS запоминать историю позволяет Максу с
легкостью прочитать оба сообщения: первое письмо мистера Смита и ответ
Джона, таким образом он может написать более подробный ответ мистеру
Смиту. Мистер Смит, в свою очередь, даже не догадывается, что в процесс
общения были вовлечены два разных человека, он доволен советами по решению
своей проблемы, которые пришли в последнем ответе от Макса.
</para>

<para>
Конечно, это всего лишь краткий обзор возможностей и особенностей системы
обработки заявок. Но в случае, если запросы от многих клиентов (письма и
телефонные звонки) должны быть обработаны различными людьми, система
обработки заявок поможет существенно сэкономить время и деньги. Также
система обработки заявок позволяет структурировать всю систему поддержки
клиентов компании. Процесс обмена информацией между клиентами и компаниями
станет более прозрачным, что приведет к повышению эффективности как для
клиентов так и для обслуживающего персонала.
</para>

</section>

<section id="what-is-a-tt">
<title>Что такое заявка?</title>

<para>
Вы можете сравнить заявку с медицинской карточкой пациента
больницы. Медицинская карточка создается, когда пациент посещает больницу
впервые. Все важные данные о пациенте, такие как личные данные о медицинском
осмотре сохраняются в медицинской карточке. Каждый из лечащих врачей
добавляет в карточку информацию о истории болезни и используемые для лечения
лекарственные препараты, таким образом все остальные лечащие врачи и
медсестры могут видеть общую, подробную картину состояния пациента. Когда
пациент выздоровел и выписался из больницы, медицинская карточка закрывается
и вся информация передается в архив.
</para>

<para>
Для систем обработки заявок, таких как OTRS, заявками являются обычные
сообщения электронной почты. Сообщения сохраняются в системе. Когда клиент
посылает запрос, в системе создается новая заявка, ее можно сравнить с
созданием медицинской карточки пациента больницы. Ответ на эту заявку можно
сравнить с записью лечащего врача в медицинской карточке пациента,
свидетельствующей о изменении состояния здоровья пациента. Заявка считается
завершенной, когда ответ отправлен обратно клиенту или в случае, если заявка
была автоматически закрыта системой. Если клиент посылает ответ на уже
закрытую заявку, она будет открыта системой заново, новая информация будет
добавлена в заявку. Чтобы сохранить целосность всех данных хранящихся в
системе, каждая заявка сохраняется и архивируется вместе со всей
соответствующей информацией. Поскольку заявки обрабатываются подобно обычным
сообщениям электронной почты, вместе с ними хранятся и вложения. Также, в
качестве дополнительной информации к каждому емейлу могут прилагатся
заметки. Все заявки хранятся на жестком диске в виде файлов или в базе
данных системы. Естественно, что такая полезная информация как примечания,
даты, работники, рабочее время необходимое для работы с заявкой и т.д также
сохраняется системой. Все заявки могут быть отсортированы соответствующим
образом, также можно производить поиск необходимой информации.
</para>
</section>

</chapter>
