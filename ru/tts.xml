<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<!-- $Id: tts.xml,v 1.3 2011-01-20 16:03:37 mg Exp $ -->
<chapter id="tts">
<title>Общая информация о системах обработки заявок</title>

<abstract>
<para>
В этой главе дается краткий обзор идеи заявок в целом, и систем обработки
заявок, в частности. Краткий пример иллюстрирует преимущества использования
системы обработки заявок.
</para>
</abstract>

<section id="basic-tts-example">
<title>Что такое система обработки заявок и зачем она нужна?</title>

<para>
Следующий пример показывает, что собой являет система обработки заявок и как
можно сэкономить много времени и денег, используя подобную систему в своей
компании.
</para>

<para>
Давайте представим, что Максим занимается производством
видеомагнитофонов. Поскольку программирование видеомагнитофонов довольно
сложное занятие, Максим получает много писем от клиентов, нуждающихся в
помощи. Спустя несколько дней у Максима нету свободного времени, он слишком
занят, чтобы ответить на все письма клиетнов, так что они должны набраться
терпения и подождать своего ответа. Некоторые клиенты не хотят долго ждать и
пишут второе письмо с тем же вопросом. Все письма, с просьбой о помощи
хранятся в одном почтовом ящике. Письма не сортируются и Максим отвечает на
них пользуясь обычной программой для работы с эллектронной почтой.
</para>

<para>
Спустя несколько дней количество сообщений настолько велико, что Максим не
успевает быстро дать ответ на все письма, поэтому его инженеры Андрей и
Александр берутся помочь Максиму разобрать почту. Для работы с почтой
используется один единственный почтовый ящик, который хранит все письма
клиентов, соответственно Андрей, Александр и Максим вместе используют один
ящик для переписки с клиентами. Но Андрей и Александр ничего не подозревают
о том, что Максим получил два одинаковых письма с вопросом о помощи от
одного отчаявшегося клиента. Таким образом, Андрей отвечает на первое
сообщение, а Александр - на второе сообщение этого клиента, оба ответа
содержат полезную информацию о том, как решить проблему. Клиент получает два
разных ответа, но дело в том, что у Максима нету никакой информации о том,
что ответили Андрей и Александр. Также, Максим не имеет представления о том,
что отвечают клиентам Андрей и Александр, не знает, связаны ли все проблемы
клиентов с видеомагнитофонами, ему не известно, какие проблемы возникают
чаще всего, а также, сколько времени и денег он должен потратить на
поддержку клиентов.
</para>

<para>
На собрании коллега рассказывает Максиму о системах обработки заявок и о
том, что они действительно могут решить его проблемы с поддержкой
клиентов. После поиска соответствующей информации в Интернете, Максим
принимает решение установить Open Ticket Request System (OTRS) - Открытую
Систему Обработки Заявок (далее просто OTRS) на компьютере, который будет
доступен из веб как для клиентов компании так и для ее сотрудников. С этого
момента, запросы клиентов больше не приходят на частный почтовый ящик
Максима, теперь они направляются на почтовый ящик, который используется для
OTRS (закреплен за OTRS). Система обработки заявок (OTRS) подключена к этому
почтовому ящику и автоматически сохраняет все запросы в своей базе
данных. Система генерирует авто-ответ для каждого нового запроса и
отправляет его клиенту, так что теперь клиент может быть уверен в том, что
его запрос поступил в обработку и ответ будет дан в ближайшее время. Для
каждого запроса OTRS создает прямую ссылку - номер заявки. Теперь клиенты
довольны, они получают быстрый ответ на свою заявку и им уже нет никакого
смысла писать повтороне письмо с тем же вопросом. Максим, Андрей и Александр
могут спокойно отвечать на поступившые запросы используя обычный веб-браузер
для работы с OTRS. Также, следует отметить тот факт, что ни одно сообщение
клиента не будет отредактировано дважды, поскольку система автоматически
блокирует заявку, для которой создается ответ.
</para>

<para>
Давайте представим что г-н Гришко делает запрос в компанию Максима и его
сообщение обрабатывается системой OTRS. Александр дает краткий ответ на это
письмо, но у г-на Гришко есть дополнительный вопрос и на следующий день он
пишет новое письмо Александру. Поскольку у Александра и своих дел хватает,
на письмо г-на Гришко отвечает Максим. Способность OTRS хранить историю
позволяет Максиму с легкостью прочитать оба сообщения: первое письмо г-на
Гришко и ответ Александра. Так что он может написать более подробный ответ
г-ну Гришко. Господин Гришко, в свою очередь, даже не догадывается, что в
процесс общения были вовлечены два разных человека, он доволен советами
относительно решения своей проблемы, которые пришли в последнеем сообщении
от Максима.
</para>

<para>
Конечно, это всего лишь краткий обзор функциональных возможностей и
особеностей систем обработки заявок. Но в случае, если запросы множества
клиентов (письма и телефонные звонки) должны обрабатываться различными
людьми, - система обработки заявок поможет существенно сэкономить время и
деньги, позволит структурировать всю систему поддержки клиентов, сделать
более прозрачным процесс обмена информацией между клиентами и компаниями,
что неотменно приведет к повышению эффективности как для клиентов так и для
обслуживающего персонала.
</para>

</section>

<section id="what-is-a-tt">
<title>Что такое заявка?</title>

<para>
Заявку можно сравнить с медицинской карточкой пациента больницы. Медицинская
карточка создается, когда пациент посещает больницу впервые. Все важные
данные о пациенте, такие как личные данные, информация о медицинском осмотре
записываются в медицинскую карточку. Каждый из лечащих врачей добавляет в
карточку информацию о истории болезни и используемые для лечения
лекарственные препараты. Таким образом другие лечащие врачи и медсестры
могут видеть, подробную картину состояния пациента. Когда пациент выздоровел
и выписался из больницы, медицинская карточка закрывается и вся информация
передается в архив.
</para>

<para>
Системы обработки заявок, такие как OTRS, обрабатывают заявки как
обыкновенные сообщения электронной почты. Все сообщения сохраняются в
системе. Когда клиент посылает запрос, система создает новую заявку, что
сравнимо с открытием новой медицинской карточки пациента больницы. Ответ на
эту новую заявку можно сравнить с записью лечащего врача в медицинской
карточке, свидетельствующей о изменении состояния здоровья пациента. Заявка
считается обработаной, когда клиенту отправлен ответ или если заявка закрыта
системой автоматически. Если клиент отправляет ответ на уже закрытую заявку,
она будет заново открыта системой и в нее будет добавлена новая
информация. Чтобы сохранить целосность всех данных, хранящихся в системе,
каждая заявка хранится и архивируется вместе со всей важной
информацией. Поскольку заявки обрабатываются как обыкновенные сообщения
электронной почты - вместе с ними также будут сохранены все вложения. Также,
в качестве дополнительной информации к каждому емейлу могут прилагатся
заметки. Все заявки хранятся на жестком диске в виде файлов или в базе
данных системы. Конечно же, такая полезная информация как примечания, даты,
данные о нанятых работниках, рабочее время необходимое для работы с заявкой
и т.д также сохраняется системой. Все заявки могут быть отсортированы в
соответствующем порядке, также можно с легкостью производить поиск всей
необходимой информации.
</para>
</section>

</chapter>
