<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<!-- $Id: tts.xml,v 1.11 2011-05-11 09:54:02 mg Exp $ -->
<chapter id="tts">
<title>Системы Обработки Заявок - Основы</title>

<abstract>
<para>
В этой главе дается краткий обзор идеи заявок в целом, и систем обработки
заявок, в частности. Краткий пример иллюстрирует преимущества использования
системы обработки заявок.
</para>
</abstract>

<section id="basic-tts-example">
<title>Что такое система обработки заявок и зачем она нужна?</title>

<para>
Следующий пример показывает, что собой являет система обработки заявок и как
можно сэкономить много времени и денег, используя подобную систему в своей
компании.
</para>

<para>
Давайте представим, что Максим занимается производством
видеомагнитофонов. Максим получает много писем от клиентов, которые
нуждаются в помощи по устройству. Спустя несколько дней, у него нету
свободного времени чтобы оперативно ответить на все письма клиентов или хотя
бы просмотреть их. Некоторые клиенты не хотят долго ждать и пишут второе
письмо с тем же вопросом. Все письма, содержащие просьбы о поддержке
хранятся в одном почтовом ящике. Запросы не сортируются и Максим отвечает на
письма пользуясь обычной программой для работы с электронной почтой.
</para>

<para>
Поскольку Максим не успевает быстро дать ответ на все письма, его инженеры:
Андрей и Александр берутся помочь Максиму. Для работы с почтой Андрей и
Александр используют один и тот же почтовый ящик, который хранит все письма
клиентов. Они ничего не подозревают о том, что Максим получил два одинаковых
письма с вопросом о помощи от отчаявшегося клиента. Временами они оба
отвечают на один и тот же запрос, и клиент получает два различных
ответа. Более того, Максим не имеет представления о содержимом этих
ответов. Также он не знает подробностей большинства проблем его клиентов и о
том как они решаются, какие проблемы возникают чаще всего, а также, сколько
времени и денег он должен потратить на поддержку клиентов.
</para>

<para>
На собрании коллега рассказывает Максиму о системах обработки заявок и как
они могут решить его проблемы с поддержкой клиентов. После поиска информации
в Интернете, Максим принимает решение установить Open Ticket Request System
(OTRS) - Открытую Систему Обработки Заявок (далее просто OTRS) на
компьютере, который будет доступен из веб как для клиентов компании так и
для ее сотрудников. С этого момента, запросы клиентов больше не приходят на
частный почтовый ящик Максима, теперь они направляются на почтовый ящик,
который используется для OTRS. Система обработки заявок (OTRS) подключена к
этому почтовому ящику и автоматически сохраняет все запросы в своей базе
данных. Система генерирует авто-ответ для каждого нового запроса и
отправляет его клиенту, так что теперь клиент может быть уверен в том, что
его запрос поступил в обработку и ответ будет дан в ближайшее время. Для
каждого запроса OTRS создает прямую ссылку - номер заявки. Теперь клиенты
довольны, они получают быстрый ответ на свою заявку и им уже нет никакого
смысла писать повтороне письмо с тем же вопросом. Максим, Андрей и Александр
могут спокойно отвечать на поступившые запросы используя обычный веб-браузер
для работы с OTRS. Также, следует отметить тот факт, что ни одно сообщение
клиента не будет отредактировано дважды, поскольку система автоматически
блокирует заявку, для которой создается ответ.
</para>

<para>
Давайте представим что г-н Гришко делает запрос в компанию Максима и его
сообщение обрабатывается системой OTRS. Александр дает краткий ответ на его
вопрос. Но у г-на Гришко есть дополнительный вопрос и на следующий день он
отвечает на письмо Александра. Поскольку у Александра и своих дел хватает,
на письмо г-на Гришко отвечает Максим. Способность OTRS хранить историю
позволяет Максиму просмотреть всю цепочку переписки по этому запросу и
написать более подробный ответ г-ну Гришко. Г-н Гришко, в свою очередь, даже
не догадывается, что в процесс общения были вовлечены два разных человека,
он доволен советами относительно решения своей проблемы, которые пришли в
последнеем сообщении от Максима.
</para>

<para>
Конечно, это всего лишь краткий обзор функциональных возможностей и
особеностей систем обработки заявок. Но в случае, если в вашу компанию
приходит множество запросов от клиентов через письма электронной почты и
телефонные звонки и они должны обрабатываться в разное время, - система
обработки заявок поможет существенно сэкономить время и деньги, позволит
структурировать всю систему поддержки клиентов, сделать более прозрачным
процесс обмена информацией между клиентами и компаниями, что неотменно
приведет к повышению эффективности как для клиентов так и для обслуживающего
персонала и позитивно скажется на финансовом положении компании.
</para>

</section>

<section id="what-is-a-tt">
<title>Что такое заявка?</title>

<para>
Заявка очень похожа на медицинскую карточку пациента больницы. Медицинская
карточка создается, когда пациент посещает больницу впервые, все важные
данные о пациенте, такие как: личные данные, информация о состоянии его
здоровья, медицинском осмотре записываются в медицинскую карточку. С каждым
новым визитом пациента в больницу, каждый из лечащих врачей добавляет в
медицинскую карточку информацию о состоянии пациента, истории болезни и,
используемые для лечения лекарственные препараты. Таким образом другие
лечащие врачи и медсестры могут видеть, подробную картину состояния
пациента. Когда пациент выздоровел и выписался из больницы, медицинская
карточка закрывается и вся информация передается в архив.
</para>

<para>
Системы обработки заявок, такие как OTRS, обрабатывают заявки как
обыкновенные емейлы (email). Когда клиент посылает запрос, система создает
новую заявку, что сравнимо с открытием новой медицинской карточки пациента
больницы. Ответ в этой новой заявке можно сравнить с записью лечащего врача
в медицинской карточке, свидетельствующей о изменении состояния здоровья
пациента. Заявка считается закрытой, когда клиенту отправлен ответ или если
заявка закрыта системой автоматически. Если клиент отправляет ответ на уже
закрытую заявку, она будет заново открыта системой и в нее будет добавлена
новая информация. Чтобы сохранить целосность всех данных, хранящихся в
системе, каждая заявка хранится и архивируется вместе со всей
информацией. Поскольку заявки обрабатываются как обыкновенные сообщения
электронной почты - вместе с ними также будут сохранены все вложения и
контекстные аннотации. Конечно же, такая полезная информация как примечания,
даты, данные о нанятых работниках, рабочее время необходимое для работы с
заявкой и т.д также сохраняется системой. Все заявки могут быть
отсортированы в соответствующем порядке, также можно с легкостью производить
поиск всей необходимой информации.
</para>

</section>

</chapter>