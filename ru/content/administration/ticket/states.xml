<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="states">
<title>Состояния заявок</title>

<section id="states-predefined">
<title>Предопределенные состояния</title>

<para>
OTRS позволяет изменять предопределенные состояния заявок и их типы, а также
добавлять новые. Для состояния важны два атрибута: имя (state-name) и тип
(state-type).
</para>

<para>
Предустановленные состояния в OTRS: "закрыто успешно", "закрыто неудачно",
"обьеденено", "новая", "открытая", "в ожидании с автозакрытием+", "в
ожидании с автозакрытием-", "в ожидании с напоминанием", "удаленная".
</para>

<section id="state-new">
<title>Новая</title>
<para>
Заявки находятся в этом состоянии, когда они создаются на основе входящих
сообщений электронной почты.
</para>
</section>

<section id="state-open">
<title>Открытая</title>
<para>
Это состояние по умолчанию для заявок, которые присвоены очередям или
агентам.
</para>
</section>

<section id="state-pending-reminder">
<title>Ожидание с напоминанием</title>
<para>
После того как время ожидания истекло, владелец заявки будет получать
напоминание на электронную почту. Если заявка не закрыта, то напоминание о
заявке будет отправлено всем агентам в очереди. Напоминание о заявках будет
отправлено только в рабочее время и будет повторятся каждые 24-часа, пока
агент не изменит состояние заявки. Время, которое заявка проведет с таким
статусом будет добавлено к времени эскалации.
</para>
</section>

<section id="state-pending-autoclose-minus">
<title>Ожидание авто-закрытие -</title>
<para>
Если время ожидания вышло, заявки с этим статусом будут установлены в
"Закрытые неуспешно". Время, проведенное заявкой в этом статусе будет
добавлено к времени эскалации.
</para>
</section>

<section id="state-pending-autoclose-plus">
<title>Ожидание авто-закрытие+</title>
<para>
Если вышло время ожидания, заявки с этим статусом будут установлены в
"Закрыто Успешно". Время, проведенное заявкой в этом статусе будет добавлено
к времени эскалации.
</para>
</section>

<section id="state-merged">
<title>Обьедененные</title>
<para>
Это состояние для заявок, которые были объеденены с другими заявками.
</para>
</section>

<section id="state-removed">
<title>Removed</title>
<para>
This is the state for tickets that have been removed by the
customer. Tickets will not really be deleted, they are just no longer shown
as open. In order to enable this state in the customer interface you need to
add the state type "removed" to the sysconfig setting
"Ticket::Frontend::CustomerTicketZoom###StateType".
</para>
</section>

<section id="state-closed-successful">
<title>Закрыта Успешно</title>
<para>
Это конечное состояние для заявок, которые были решены успешно. В
зависимости от конфигурации, у вас будет или не будет возможности заново
открыть ранее закрытые заявки.
</para>
</section>

<section id="state-closed-unsuccessful">
<title>Закрыта Неудачно</title>
<para>
Это конечное состояние для заявок которые НЕ были успешно решены. В
зависимости от конфигурации, у вас будет или не будет возможности заново
открыть ранее закрытые заявки.
</para>
</section>

</section>

<section id="states-customizing">
<title>Настраиваемы состояния</title>
<para>
Every state has a name (state-name) and a type (state-type). Click on the
<link linkend="adminarea-states">States</link> link on the Admin page and
press the button "Add state" to create a new state. You can freely choose
the name of a new state. The state types can not be changed via the web
interface. The database has to be directly modified if you want to add new
types or change existing names. The default state types should typically not
be modified as this can yield unpredictable results. For instance,
escalation calculations and the unlock feature are based on specific state
types.
</para>

<para>
Имя/название уже существующего состояния может быть изменено или новые
состояния добавлены на этом экране. Если состояние "new" было изменено в
веб-интерфейсе, это состояние также должно быть настроено в
<filename>Kernel/Config.pm</filename> или через SysConfig. Параметры
заданные в сценарии приведенном ниже должны быть изменены, чтобы убедиться в
том, что OTRS работает с измененным состоянием для бывшего "new".
</para>

<para>
<programlisting>
    [...]
    # PostmasterDefaultState
    # (The default state of new tickets.) [default: new]
    $Self-&gt;{PostmasterDefaultState} = 'new';

    # CustomerDefaultState
    # (default state of new customer tickets)
    $Self-&gt;{CustomerDefaultState} = 'new';
    [...]
</programlisting>
</para>

<para>
<emphasis>Сценарий: Изменение параметров настройки в
Kernel/Config.pm.</emphasis>
</para>

<para>
Если нужно добавить новый тип состояния, то это можно сделать с помощью
клиентской программы управления базами данных, изменив таблицу
ticket_state_type базы данных OTRS, как это показано в нижеприведенном
сценарии
</para>

<para>
<screen>
linux:~# mysql -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 23 to server version: 5.0.16-Debian_1-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt; use otrs;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; insert into ticket_state_type (name,comments) values ('own','Own
state type');
Query OK, 1 row affected (0.00 sec)

mysql&gt; quit
Bye
linux:~#
</screen>
</para>

<para>
<emphasis>Script: Изменение базы данных OTRS.</emphasis>
</para>

<para>
На данный момент можно использовать новый тип состояния, который вы только
что создали. Как только состояние будет связано с этим новым типом
состояния, то чтобы убедится что новое состояние используется и работает
коректно нужно также изменить настройки OTRS. Используя SysConfig внесите
изменения в следующие опции:
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhone_StateDefault">
Frontend::Agent::Ticket::ViewPhoneNew &gt; AgentTicketPhone###StateDefault
</link> - to define the default next state for new phone tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhone_StateType">
Frontend::Agent::Ticket::ViewPhoneNew &gt; AgentTicketPhone###StateType
</link> - to define the available next states for new phone tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketEmail_StateDefault">
Frontend::Agent::Ticket::ViewEmailNew &gt; AgentTicketEmail###StateDefault
</link> - to define the default next state for new email tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketEmail_StateType">
Frontend::Agent::Ticket::ViewEmailNew &gt; AgentTicketEmail###StateType
</link> - to define the available next states for new email tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhoneOutbound_State">
Frontend::Agent::Ticket::ViewPhoneOutbound &gt;
AgentTicketPhoneOutbound###State </link> - to define the default next state
for new phone articles.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhoneOutbound_StateType">
Frontend::Agent::Ticket::ViewPhoneOutbound &gt;
AgentTicketPhoneOutbound###StateType </link> - to define the available next
states for new phone articles.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketMove_State">
Frontend::Agent::Ticket::ViewMove &gt; AgentTicketMove###State </link> - to
define the default next state for moving a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketMove_StateType">
Frontend::Agent::Ticket::ViewMove &gt; AgentTicketMove###StateType </link> -
to define the available next states for moving a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBounce_StateDefault">
Frontend::Agent::Ticket::ViewBounce &gt; StateDefault </link> - to define
the default next state after bouncing a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBounce_StateType">
Frontend::Agent::Ticket::ViewBounce &gt; StateType </link> - to define the
available next states in the bounce screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBulk_StateDefault">
Frontend::Agent::Ticket::ViewBulk &gt; StateDefault </link> - to define the
default next state in a bulk action.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBulk_StateType">
Frontend::Agent::Ticket::ViewBulk &gt; StateType </link> - to define the
available next states in the bulk action screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketClose_StateDefault">
Frontend::Agent::Ticket::ViewClose &gt; StateDefault </link> - to define the
default next state after closing a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketClose_StateType">
Frontend::Agent::Ticket::ViewClose &gt; StateType </link> - to define the
available next states in the close screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketCompose_StateDefault">
Frontend::Agent::Ticket::ViewCompose &gt; StateDefault </link> - to define
the default next state in the Compose (reply) screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketCompose_StateType">
Frontend::Agent::Ticket::ViewCompose &gt; StateType </link> - to define the
available next states in the Compose (reply) screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketForward_StateDefault">
Frontend::Agent::Ticket::ViewForward &gt; StateDefault </link> - to define
the default next state after forwarding a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketForward_StateType">
Frontend::Agent::Ticket::ViewForward &gt; StateType </link> - to define the
available next states in the Forward screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketFreeText_StateDefault">
Frontend::Agent::Ticket::ViewForward &gt; StateDefault </link> - to define
the default next state of a ticket in the free text screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketFreeText_StateType">
Frontend::Agent::Ticket::ViewForward &gt; StateType </link> - to define the
available next states in the free text screen.
</para>


<para>
<link linkend="ConfigReference_Setting_PostmasterDefaultState">
Core::PostMaster &gt; PostmasterDefaultState </link> - to define the state
of tickets created from emails.
</para>

<para>
<link linkend="ConfigReference_Setting_PostmasterFollowUpState">
Core::PostMaster &gt; PostmasterFollowUpState </link> - to define the state
of tickets after a follow-up has been received.
</para>

<para>
<link linkend="ConfigReference_Setting_PostmasterFollowUpStateClosed">
Core::PostMaster &gt; PostmasterFollowUpStateClosed </link> - to define the
state of tickets after a follow-up has been received on an already closed
ticket.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::ViewableStateType">
Core::Ticket &gt; ViewableStateType </link> - to define the state types that
are displayed at various places in the system, for example in the Queueview.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::UnlockStateType">
Core::Ticket &gt; UnlockStateType </link> - to define the state types for
unlocked tickets.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::PendingReminderStateType">
Core::Ticket &gt; PendingReminderStateType </link> - to define the state
type for reminder tickets.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::PendingAutoStateType">
Core::Ticket &gt; PendingAutoStateType </link> - to define the state type
for Pending Auto tickets.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::StateAfterPending">
Core::Ticket > StateAfterPending </link> - to define the state a ticket is
set to after the Pending Auto timer of the configured state has expired.
</para>

</section>
</section>
