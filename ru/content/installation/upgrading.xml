<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<!-- $Id: upgrading.xml,v 1.5 2012-12-10 09:02:22 mg Exp $ -->
<section id="upgrading">
<title>Обновление OTRS-фреймворка</title>
<para>
    These instructions are for people upgrading OTRS from version
<emphasis>3.1</emphasis> to <emphasis>3.2</emphasis>, and apply both for RPM
and source code (tarball) upgrades.
</para>
<para>
    If you are running a lower version of OTRS you have to follow the upgrade
path to 3.0 first (1.1->1.2->1.3->2.0->2.1->2.2->2.3->2.4->3.0->3.1->3.2
...)!
</para>
<para>
    Обратите внимание, что если вы обновляете OTRS 2.2 или выше, выдолжны
предпринять дополнительные шаги, о которых написано здесь <ulink
url="http://bugs.otrs.org/show_bug.cgi?id=6798">http://bugs.otrs.org/show_bug.cgi?id=6798</ulink>.
</para>
<para>
    Пожалуйста, обратите внимание что для обновления с версии 3.2.0.beta1,
дополнительный шаг 9 не требуется!
</para>
<para>
    Within a single minor version you can skip patch level releases if you want
to upgrade. For instance you can upgrade directly from OTRS 3.2.1 to version
3.2.4. If you need to do such a "patch level upgrade", you should skip steps
8, 12, 14 and 15.
</para>

  <orderedlist>
      <listitem>
        <para>
            Остановите все соответствующие службы.
        </para>
        <para>
            в т.ч. (зависящие от использующихся услуг): <screen>
shell&gt; /etc/init.d/cron stop
shell&gt; /etc/init.d/postfix stop
shell&gt; /etc/init.d/apache stop
            </screen>
        </para>
      </listitem>
      <listitem>
        <para>
            Сделайте резервные копии всех данных из $OTRS_HOME (по умолчанию
OTRS_HOME=/opt/otrs):
            <itemizedlist>
                <listitem><para><filename>Kernel/Config.pm</filename></para></listitem>
                <listitem><para><filename>Kernel/Config/GenericAgent.pm</filename></para></listitem>
                <listitem><para><filename>Kernel/Config/Files/ZZZAuto.pm</filename></para></listitem>
                <listitem><para><filename>var/*</filename></para></listitem>
                <listitem><para><filename>а также базу данных</filename></para></listitem>
            </itemizedlist>
        </para>
      </listitem>
      <listitem>
        <para>
            Убедитесь, что вы создали резервную копию всех данных ;-)
        </para>
      </listitem>
      <listitem>
        <para>
            Установить новую систему (опционально)
        </para>
        <para>
            Если есть возможность, сначала попробуйте произвести установку на отдельном
тестовом компьютере.
        </para>
      </listitem>
      <listitem>
        <para>
            Установка нового релиза (из tar-архива или с помощью RPM-пакетов).
        </para>
         <itemizedlist>
          <listitem>
            <para>
                С помощью тарбола (tarball):
            </para>
            <para>
                <screen>
shell&gt; cd /opt
shell&gt; tar -xzf otrs-x.x.x.tar.gz
shell&gt; ln -s otrs-x.x.x otrs
                </screen>
            </para>
            <para>
                Восстановите старые конфигурационные файлы.
                <itemizedlist>
                    <listitem><para><filename>Kernel/Config.pm</filename></para></listitem>
                    <listitem><para><filename>Kernel/Config/GenericAgent.pm</filename></para></listitem>
                    <listitem><para><filename>Kernel/Config/Files/ZZZAuto.pm</filename></para></listitem>
                </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>
                С помощью RPM-пакетов: <screen>
shell&gt; rpm -Uvh otrs-x.x.x.-01.rpm
                </screen>
            </para>
            <para>
                В этом случае обновление из RPM автоматически восстанавливает старые
конфигурационные файлы.
            </para>
          </listitem>
         </itemizedlist>
      </listitem>
      <listitem>
        <para>
            Собственные темы
        </para>
        <para>
            Примечание: Темы OTRS 3.1 и 3.2 НЕ совместимы между собой, так что не
используйте старые темы!
        </para>
        <para>
            Темы хранятся в $OTRS_HOME/Kernel/Output/HTML/*/*.dtl (default:
OTRS_HOME=/opt/otrs).
        </para>
      </listitem>
      <listitem>
        <para>
            Установка прав доступа к файлам.
        </para>
        <para>
            В случае использования тарбола (tarball), выполните <screen>
shell> cd /opt/otrs/
shell> bin/otrs.SetPermissions.pl
            </screen> с правами, необходимыми для установки системы.
        </para>
      </listitem>
      <listitem>
        <para>
            Схема обновления:
        </para>
        <para>
            <screen>
shell&gt; cd /opt/otrs/

# MySQL:
shell&gt; cat scripts/DBUpdate-to-3.2.mysql.sql | mysql -p -f -u root otrs
# PostgreSQL 8.2+:
shell&gt; cat scripts/DBUpdate-to-3.2.postgresql.sql | psql otrs
# PostgreSQL, older versions:
shell&gt; cat scripts/DBUpdate-to-3.2.postgresql_before_8_2.sql | psql otrs
            </screen> NOTE: If you use PostgreSQL 8.1 or
earlier, you need to activate the new legacy driver for these older
versions. Do this by adding a new line to your
<filename>Kernel/Config.pm</filename> like this: <screen>
$Self->{DatabasePostgresqlBefore82} = 1;
            </screen>
        </para>
        <para>
            Запустите сценарий перемещения (как пользователь 'otrs', а НЕ root):
        </para>
        <para>
            <screen>
shell&gt; scripts/DBUpdate-to-3.2.pl
            </screen> Do not continue the upgrading process if
this script did not work properly for you.  Otherwise data loss may occur.
        </para>
      </listitem>
      <listitem>
        <para>
            Обновления Базы Данных на протяжении Beta тестирования
        </para>
        <para>
            Этот шаг необходим только если вы обновляете с 3.2.0.beta1!
        </para>
        <para>
            Please apply the required database changes as follows: <screen>
MySQL:
 shell> cat scripts/DBUpdate-3.2.beta.mysql.sql | mysql -p -f -u root otrs

PostgreSQL 8.2+:
 shell> cat scripts/DBUpdate-3.2.beta.postgresql.sql | psql otrs

PostgreSQL, older versions:
 shell> cat scripts/DBUpdate-3.2.beta.postgresql_before_8_2.sql | psql otrs
            </screen>
         </para>
      </listitem>
      <listitem>
        <para>
Обновите конфигурацию системы и удалите все данные из кэша. Пожалуйста,
введите:
        </para>
        <para>
            <screen>
shell&gt; bin/otrs.RebuildConfig.pl
shell&gt; bin/otrs.DeleteCache.pl
            </screen>
        </para>
      </listitem>
      <listitem>
        <para>
            Перезапустите сервисы.
        </para>
        <para>
            в т.ч. (зависящие от использующихся услуг): <screen>
shell&gt; /etc/init.d/cron start
shell&gt; /etc/init.d/postfix start
shell&gt; /etc/init.d/apache start
            </screen> Теперь вы можете войти в систему.
        </para>
      </listitem>
      <listitem>
        <para>
            Проверьте настройки 'Cache::Module'
        </para>
        <para>
            The file cache backend 'FileRaw' was removed in favor of the faster
'FileStorable'.  The DBUpdate-to-3.2.pl automatically updates the config
setting 'Cache::Module', but you need to change it manually if you defined
this setting in Kernel/Config.pm directly.  It needs to be changed from
'Kernel::System::Cache::FileRaw' to 'Kernel::System::Cache::FileStorable'.
        </para>
      </listitem>
      <listitem>
        <para>Проверьте установленные пакеты</para>
        <para>
            Проверьте в менеджере пакетов все ли пакеты по прежнему помечены как
правильно установлены или какие либо из них требуют переустановки или же
обновления.
        </para>
      </listitem>
      <listitem>
        <para>
            Очистка метаданных  архивированных заявок
        </para>
        <para>
            Примечание: Этот шаг применяется лишь только в том случае, если вы
используете возможность OTRS по архивированию заявки.
        </para>
        <para>
            With OTRS 3.2, when tickets are archived, the information which agent read
the ticket and articles can be removed, as well as the ticket subscriptions
of agents.  This is active by default and helps reduce the amount of data in
the database on large systems with many tickets and agents.
        </para>
        <para>
            If you also want to cleanup this information for existing archived tickets,
please run this script: <screen>
shell> bin/otrs.CleanupTicketMetadata.pl --archived
            </screen> If you want to
KEEP this information instead, please set these SysConfig settings to "No":
<screen>
Ticket::ArchiveSystem::RemoveSeenFlags
Ticket::ArchiveSystem::RemoveTicketWatchers
            </screen>
        </para>
      </listitem>
      <listitem>
        <para>Обзор (Изменение) ACLs для Динамических Полей</para>
        <para>
            Примечание: Этот шаг применяется лиш в том случае, если вы используете ACL
для ограничения возможных значений Динамического Поля Dropdown или
Multiselect.
        </para>
        <para>
            Теперь в OTRS 3.2 Возможные и невозможные ACL-секции для Динамических Полей
Dropdown и Multiselect должны ссылаться на ключи (внутренние значения)
вместо их значений (отображаемых значений).
        </para>
        <para>
            Пример: <screen>
For the defined field "Dropdown1"  with possible values:
1 => 'A',
2 => 'B',
3 => 'C',

ACLs prior OTRS 3.2 should look like:

$Self->{TicketAcl}->{'Limit Dropdown1 entries'} = {
   Properties => {},
   Possible => {
       Ticket => {
           # White list entries with VALUES containing 'B' and 'C'
           DynamicField_Dropdown1 => [ 'B', 'C' ],
       },
   },
};

ACLs must be modified to:

$Self->{TicketAcl}->{'Limit Dropdown1 entries'} = {
   Properties => {},
   Possible => {
       Ticket => {
           # White list entries with VALUES containing 'B' and 'C' (now using KEYS)
           DynamicField_Dropdown1 => [ '2', '3' ],
       },
   },
};

By doing this change ACLs will look much more consistent, since Possible and PossibleDatabase
sections already use Keys instead of Values, please look at the following example:

$Self->{TicketAcl}->{'Limit Dropdown1 entries based in Dropdown2'} = {
    Properties => {
        Ticket => {
            # Match on the DeopDown2 KEY '1'
            DynamicField_Dwondown2 => ['1'],
        },
    },
    Possible => {
        Ticket => {
            # White list Dropdown1 entries with VALUES containing 'B' and 'C' (now using KEYS)
            DynamicField_Dropdown1 => ['1', '2'],
        },
    },
};
            </screen>
        </para>
      </listitem>
      <listitem>
        <para>
            Адаптация пользовательских событий к модулям обработчиков
        </para>
        <para>
            Примечание: это применяеться только в том случае, если у вас есть какие то
специально разработанные модули обработчиков событий.
        </para>
        <para>
            Начиная с OTRS 3.2 payload-данные для модулей обработчиков событий больше не
копируются в хэш %Param. К нему необходимо явно указать доступ используя
$Param{Data}. <screen>
Old:

# get ticket
my %Ticket = $Self->{TicketObject}->TicketGet(
    TicketID      => $Param{TicketID},
    UserID        => 1,
);

New:

# get ticket
my %Ticket = $Self->{TicketObject}->TicketGet(
    TicketID      => $Param{Data}->{TicketID},
    UserID        => 1,
);
            </screen>
        </para>
      </listitem>
      <listitem>
        <para>Молодцы!</para>
      </listitem>
  </orderedlist>
</section>