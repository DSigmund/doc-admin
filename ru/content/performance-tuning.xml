<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="performance-tuning">
<title>Настройка Производительности</title>

<abstract>
<para>
Presented below is a list of performance enhancing techniques for your OTRS
installation, including configuration, coding, memory use, and more.
</para>
</abstract>

<section id="performance-tuning-otrs">
<title>OTRS</title>
<para>
There are several options for improving OTRS performance.
</para>

<section id="performance-tuning-otrs-index">
<title>TicketIndexModule</title>
<para>
Есть два типа хранилища информации для хранения индексов заявок:
</para>

<para>
<itemizedlist mark='opencircle'>

<listitem>
<para>
Kernel::System::Ticket::IndexAccelerator::RuntimeDB (по умолчанию), "на
лету" генерирует из таблицы заявок шаблон просмотра для каждой очереди. Пока
в системе не больше 60, 000 открытых заявок, проблем с производительностью
не будет.
</para>
</listitem>

<listitem>
<para>
Kernel::System::Ticket::IndexAccelerator::StaticDB - один из самых мощных
модулей, его следует использовать, когда у вас еть больше 80.000 открытых
заявок. Он использует дополнительную таблицу ticket_index, которая работает
как обычный шаблон. Используйте
<filename>bin/otrs.RebuildTicketIndex.pl</filename> для получения начального
индекса после создания хранилища информации.
</para>
</listitem>

</itemizedlist>
</para>

<para>
Вы можете изменить IndexAccelerator через SysConfig.
</para>

</section>

<section id="performance-tuning-otrs-storage">
<title>TicketStorageModule</title>
<para>
Существует два различных хранилица для хранения заявок/статей:
</para>

<para>
<itemizedlist mark='opencircle'>

<listitem>
<para>
Configure Kernel::System::Ticket::ArticleStorageDB (default) to store
attachments, etc., in the database. Note: Don't use it with large set ups.
</para>
<para>
Pro: Если пользователь вашего веб-сервера не является пользователем 'otrs',
используйте этот модуль, чтобы избежать проблем с правами доступа.
</para>
<para>
Противопоказания: Не совсем целесообразно хранить вложения в базе
данных. Будьте осторожны, при храненении больших объектов. Настройте
конфигурационный параметр MySQL "set-variable=max_allowed_packet=8M"  для
хранения объектов размером 8 MB (по умолчанию это 2M).
</para>
</listitem>

<listitem>
<para>
Configure Kernel::System::Ticket::ArticleStorageFS для хранения вложений и
т.д. в локальной файловой системе. Примечание: Рекомендовано при больших
установках.
</para>
<para>
Pro: Это быстро!
</para>
<para>
Con: Your web server user should be the 'otrs' user. Also, if you have
multiple front-end servers, you should make sure the filesystem is shared
between the servers. Place it on an NFS share or preferably a SAN or similar
solution.
</para>
</listitem>

</itemizedlist>

</para>

<para>
    Note: you can switch from one back-end to the other on the fly. You can
switch the backend in the SysConfig, and then run the command line utility
<filename>otrs.ArticleStorageSwitch.pl</filename> to put the articles from
the database onto the filesystem or the other way around. You can use the
<emphasis>-s</emphasis> and <emphasis>-d</emphasis> options to specify the
source and destination back-ends. Please note that the entire process can
take considerable time to run, depending on the number of articles you have
and the available CPU power and/or network capacity.
</para>

<para>
<programlisting>
shell> bin/otrs.ArticleStorageSwitch.pl -s ArticleStorageDB -d ArticleStorageFS
</programlisting>
</para>
<para>
<emphasis>Сценарий Переключение хранилища данных с базы данных на файловую
систему.</emphasis>
</para>
</section>

<section>
    <title>Архивирование Заявок</title>

    <para>
        Поскольку OTRS может использоваться в качестве системы аудита доказательств,
то удаление закрытых заявко не очень хорошая идея. Именно по этому мы
реализовали функцию архивирования заявок.
    </para>
    <para>
        Tickets that match certain criteria can be marked as "archived" These
tickets are not accessed if you do a regular ticket search or run a Generic
Agent job. The system itself does not have to deal with a huge amount of
tickets any longer as only the "latest" tickets are taken into consideration
when using OTRS. This can result in a huge performance gain on large
systems.
    </para>
    <para>
        Для использования функции архивации выполните следующие действия:
    </para>
    <orderedlist>
        <listitem>
            <para>
                Включение архивирование системы в SysConfig
            </para>
            <para>
                В Панели Администрирования перейдите в SysConfig и выберите группу
<literal>Заявка</literal>. В <literal>Core::Ticket</literal> найдите опцию
<literal>Ticket::ArchiveSystem</literal>, по умолчанию установленную в
значение "нет". Измените значение этой настройки на "да" и сохраните
изменения.
            </para>
        </listitem>
        <listitem>
            <para>
                Определение работы GenericAgent
            </para>
            <para>
                В Панели Администратора выберите GenericAgent и добавьте новое задание
(работу). <orderedlist>
                    <listitem>
                        <para>
                            Настройки Задания
                        </para>
                        <para>
                            Введите имя для работы архивирования, и выберите надлежащие опции для
планирования этой работы.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Ticket Filter
                        </para>
                        <para>
                            Фильтр заявок производит поиск заявок, которые отвечают выбраным
критериям. Хорошей идеей будет заархивировать закрытые заявки, которые были
закрыты за несколько месяцев до этого.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Действия над заявками
                        </para>
                        <para>
                            В этой части установите поле "Архивировать выбранные заявки" в "архив
заявок".
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Сохранить работу
                        </para>
                        <para>
                            В конце страницы у вас будет возможность сохранить работу (задание).
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Обработанные заявки
                        </para>
                        <para>
                            Система отобразит все заявки, которые будут заархивированы при выполнении
задания Generic Agent-ом.
                        </para>
                    </listitem>
                </orderedlist>
            </para>
        </listitem>
        <listitem>
            <para>
                Поиск Заявок
            </para>
            <para>
                При поиске заявок, система по умолчанию производит поиск среди не
архивированных заявок. Установите критерий поиска "поиск в архивах", если
нужно чтобы поиск происходил также и в архивированых заявках.
            </para>
        </listitem>
    </orderedlist>
</section>

</section>


<section id="performance-tuning-database">
<title>База данных</title>
<para>
Решения зависят от используемой базы данных. Изучайте документацию к
используемой базе данных или же обратитесь за помощью к администратору.
</para>

<section id="performance-tuning-database-mysql">
<title>MySQL</title>
<para>
If you use the MySQL table type MyISAM (which is the default), and have
deleted a large part of a table or if you have made many changes to a table
with variable-length rows (tables that have VARCHAR, BLOB or TEXT columns),
you must defragment the datafile (tables) with the "optimize" command.
</para>
<para>
Нужно попытаться сделать это, если сервер mysqld использует много
процессорного времени. Оптимизация таблиц ticket_history и article (см
Сценарий ниже).
</para>

<para>
<programlisting>
shell$ mysql -u user -p database
mysql$ optimize table ticket;
mysql$ optimize table ticket_history;
mysql$ optimize table article;
</programlisting>
</para>

<para>
<emphasis>Сценарий: Оптимизация таблиц базы данных.</emphasis>
</para>

</section>

<section id="performance-tuning-database-postgresql">
<title>PostgreSQL</title>
<para>
PostgreSQL is best tuned by modifying the postgresql.conf file in your
PostgreSQL data directory. For advice on how to do this, reference the
following articles:
</para>

<para>
    <itemizedlist>
        <listitem>
            <para>
            <ulink url="http://www.revsys.com/writings/postgresql-performance.html">
<citetitle>http://www.revsys.com/writings/postgresql-performance.html</citetitle>
</ulink>
            </para>
        </listitem>
        <listitem>
            <para>
            <ulink url="http://varlena.com/GeneralBits/Tidbits/perf.html">
<citetitle>http://varlena.com/GeneralBits/Tidbits/perf.html</citetitle>
</ulink>
            </para>
        </listitem>
        <listitem>
            <para>
            <ulink url="http://varlena.com/GeneralBits/Tidbits/annotated_conf_e.html">
<citetitle>http://varlena.com/GeneralBits/Tidbits/annotated_conf_e.html</citetitle>
</ulink>
            </para>
        </listitem>
    </itemizedlist>
</para>

<para>
Если производительность остается на неудовлетворительном уровне, мы
предлагаем вам присоединится к спискам рассылки "PostgreSQL Performance"  (
<ulink
url="http://www.postgresql.org/community/lists/">http://www.postgresql.org/community/lists/</ulink>
) и задавать вопросы именно там. Люди в этом списке рассылке очень
дружелюбны а всегада постараются вам помочь.
</para>
</section>

</section>

<section id="performance-tuning-webserver">
<title>Веб-сервер</title>
<para>
Конечно же нужно использовать mod_perl 2.0 ( <ulink
url="http://perl.apache.org/"><citetitle>http://perl.apache.org/</citetitle></ulink>
). Он быстрее (~ * 100) чем "чистый" cgi. Но он требует больше оперативной
памяти (RAM).
</para>

<section id="performance-tuning-webserver-db">
<title>Предустановленное соединение с базой данных</title>
<para>
При запуске веб-сервера можно иметь заранее установленное соединение с базой
данных. Такой подход существенно сэкономит время (см. README.webserver).
</para>
</section>

<section id="performance-tuning-webserver-startup">
<title>Предварительно загруженные модули  - startup.pl</title>
<para>
Чтобы все работало быстрее и занимало меньше памяти используйте сценарий
запуска <filename>scripts/apache2-perl-startup.pl</filename> для
предварительной загрузки/компиляции Perl модулей на сервере с mod_perl
(см. README.webserver).
</para>
</section>
<section id="performance-tuning-webserver-reload">
<title>Перезагрузка Perl-модулей во время обновления с диска</title>
<para>
By default Apache::Reload is used in
scripts/apache2-httpd.include.conf. Disable it and you will get 8% more
speed. But remember to restart the web server if you install any modules via
the OTRS Package Manager, or any values in your SysConfig or in
Kernel/Config.pm. Important: this would also mean you can't use the OTRS
Package Manager via the web interface, you need to use the command line
variant - <filename>bin/otrs.PackageManager.pl</filename>.
</para>
</section>

<section id="performance-tuning-webserver-strategy">
<title>Выбор Правильной Стратегии</title>
<para>
If you have a larger installation, e.g. over 1,000 new tickets per day and
over 40 agents, it is a good idea to read the chapters on Performance of the
mod_perl User's Guide ( <ulink
url="http://perl.apache.org/docs/2.0/user/index.html"><citetitle>http://perl.apache.org/docs/2.0/user/index.html</citetitle></ulink>
).
</para>
</section>

<section id="performance-tuning-webserver-gzip">
<title>mod_gzip/mod_deflate</title>
<para>
Используйте mod_deflate для Apache2, если у вас "слабая" полоса пропускания
. При загрузке html-страницы размером в 45к, mod_gzip/mod_deflate сожмет ее
и страница будет занимать около 7к. Недостатком такого подхода является
дополнительная нагрузка на сервер.
</para>
</section>

</section>

</chapter>
