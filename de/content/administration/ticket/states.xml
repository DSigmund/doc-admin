<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="states">
<title>Ticket Status</title>

<section id="states-predefined">
<title>Vordefinierte Ticket-Status</title>

<para>
OTRS erlaubt es Ihnen, die Ticket-Status zu verändern oder neue Status
hinzuzufügen. Hierbei gibt es zwei wichtige Optionen: den Namen des Status
und Typ des Status.
</para>

<para>
Die standardmäßig voreingestellten Status lauten: 'neu', 'offen',
'erfolgreich geschlossen', 'erfolglos geschlossen', 'merged', 'entfernt',
'warten auf erfolgreich schließen', 'warten auf erfolglos schließen' und
'warten zur Erinnerung'. 
</para>

<section id="state-new">
<title>Neu</title>
<para>
Tickets sind normalerweise nur in diesem Status, wenn sie von eingehenden
E-Mails neu erzeugt werden.
</para>
</section>

<section id="state-open">
<title>Öffnen</title>
<para>
Der Standardstatus für Tickets, die Queues und Agents zugeordnet sind.
</para>
</section>

<section id="state-pending-reminder">
<title>Warten zur Erinnerung</title>
<para>
Nachdem die Wartezeit abgelaufen ist, erhält der Ticketbesitzer eine E-Mail
zu dem Ticket. Wenn es nicht gesperrt ist, wird die Erinnerung an alle
Agenten der Queue verschickt. Erinnerungs-Benachrichtigungen werden nur
innerhalb der Arbeitszeiten versendet, und werden alle 24 Stunden
wiederholt, bis der Status des Tickets vom Agenten verändert wird. Die Zeit,
die dieses Ticket in diesem Status verbringt, wird dennoch bei der
Berechnung der Eskalationszeiten einbezogen.
</para>
</section>

<section id="state-pending-autoclose-minus">
<title>Warten auf erfolglos schließen</title>
<para>
Wenn die Wartezeit abgelaufen ist, wird das Ticket auf "erfolglos
geschlossen" gesetzt. Die Zeit, die dieses Ticket in diesem Status
verbringt, wird dennoch bei der Berechnung der Eskalationszeiten einbezogen.
</para>
</section>

<section id="state-pending-autoclose-plus">
<title>Warten auf erfolgreich schließen</title>
<para>
Wenn die Wartezeit abgelaufen ist, wird das Ticket auf "erfolgreich
geschlossen" gesetzt. Die Zeit, die dieses Ticket in diesem Status
verbringt, wird dennoch bei der Berechnung der Eskalationszeiten einbezogen.
</para>
</section>

<section id="state-merged">
<title>Zusammengefügt</title>
<para>
Status von Tickets, die mit anderen Tickets zusammengefügt wurden.
</para>
</section>

<section id="state-removed">
<title>Removed</title>
<para>
This is the state for tickets that have been removed by the
customer. Tickets will not really be deleted, they are just no longer shown
as open. In order to enable this state in the customer interface you need to
add the state type "removed" to the sysconfig setting
"Ticket::Frontend::CustomerTicketZoom###StateType".
</para>
</section>

<section id="state-closed-successful">
<title>Erfolgreich geschlossen</title>
<para>
Endstatus für Tickets, die erfolgreich gelöst werden konnten. Je nach
Konfiguration kann es unmöglich sein, geschlossene Tickets wieder zu
eröffnen.
</para>
</section>

<section id="state-closed-unsuccessful">
<title>Erfolglos geschlossen</title>
<para>
Endstatus für Tickets, die NICHT erfolgreich gelöst werden konnten. Je nach
Konfiguration kann es unmöglich sein, geschlossene Tickets wieder zu
eröffnen.
</para>
</section>

</section>

<section id="states-customizing">
<title>Anpassen von Ticket-Status</title>
<para>
Every state has a name (state-name) and a type (state-type). Click on the
<link linkend="adminarea-states">States</link> link on the Admin page and
press the button "Add state" to create a new state. You can freely choose
the name of a new state. The state types can not be changed via the web
interface. The database has to be directly modified if you want to add new
types or change existing names. The default state types should typically not
be modified as this can yield unpredictable results. For instance,
escalation calculations and the unlock feature are based on specific state
types.
</para>

<para>
Im Admin-Interface können Sie innerhalb der Einstellungen für "Status" neue
Status für die vorhandenen Statustypen hinzufügen oder ändern. Beachten Sie,
dass Sie bei Änderungen am Status "neu - new" auch die entsprechenden
Änderungen in der Konfigurationsdatei<filename>Kernel/Config.pm</filename>
bzw. mit Hilfe des grafischen Konfigurations-Front-End vornehmen
müssen. Folgende Änderungen müssen für einen geänderten "neu"-Status
vorgenommen werden:
</para>

<para>
<programlisting>
    [...]
    # PostmasterDefaultState
    # (The default state of new tickets.) [default: new]
    $Self-&gt;{PostmasterDefaultState} = 'new';

    # CustomerDefaultState
    # (default state of new customer tickets)
    $Self-&gt;{CustomerDefaultState} = 'new';
    [...]
</programlisting>
</para>

<para>
<emphasis>Skript: Anpassung der Einstellungen von
Kernel/Config.pm.</emphasis>
</para>

<para>
Möchten Sie einen neuen Statustyp hinzufügen, müssen Sie zuerst die
ticket_status-type-Tabelle in der OTRS Datenbank mit Hilfe eines
entsprechenden Datenbankclient anpassen.
</para>

<para>
<screen>
linux:~# mysql -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 23 to server version: 5.0.16-Debian_1-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt; use otrs;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; insert into ticket_state_type (name,comments) values ('own','Own
state type');
Query OK, 1 row affected (0.00 sec)

mysql&gt; quit
Bye
linux:~#
</screen>
</para>

<para>
<emphasis>Skript: Anpassung der Statustypen.</emphasis>
</para>

<para>
Nun können Sie den neuen Statustyp verwenden. Nachdem ein Status mit diesem
Statustyp verknüpft wurde, muss auch die OTRS-Konfiguration angepasst
werden, damit der neue Status korrekt verwendet werden kann. Passen Sie die
Folgenden Optionen in der SysConfig an:
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhone_StateDefault">
Frontend::Agent::Ticket::ViewPhoneNew &gt; AgentTicketPhone###StateDefault
</link> - to define the default next state for new phone tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhone_StateType">
Frontend::Agent::Ticket::ViewPhoneNew &gt; AgentTicketPhone###StateType
</link> - to define the available next states for new phone tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketEmail_StateDefault">
Frontend::Agent::Ticket::ViewEmailNew &gt; AgentTicketEmail###StateDefault
</link> - to define the default next state for new email tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketEmail_StateType">
Frontend::Agent::Ticket::ViewEmailNew &gt; AgentTicketEmail###StateType
</link> - to define the available next states for new email tickets.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhoneOutbound_State">
Frontend::Agent::Ticket::ViewPhoneOutbound &gt;
AgentTicketPhoneOutbound###State </link> - to define the default next state
for new phone articles.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketPhoneOutbound_StateType">
Frontend::Agent::Ticket::ViewPhoneOutbound &gt;
AgentTicketPhoneOutbound###StateType </link> - to define the available next
states for new phone articles.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketMove_State">
Frontend::Agent::Ticket::ViewMove &gt; AgentTicketMove###State </link> - to
define the default next state for moving a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketMove_StateType">
Frontend::Agent::Ticket::ViewMove &gt; AgentTicketMove###StateType </link> -
to define the available next states for moving a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBounce_StateDefault">
Frontend::Agent::Ticket::ViewBounce &gt; StateDefault </link> - to define
the default next state after bouncing a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBounce_StateType">
Frontend::Agent::Ticket::ViewBounce &gt; StateType </link> - to define the
available next states in the bounce screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBulk_StateDefault">
Frontend::Agent::Ticket::ViewBulk &gt; StateDefault </link> - to define the
default next state in a bulk action.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketBulk_StateType">
Frontend::Agent::Ticket::ViewBulk &gt; StateType </link> - to define the
available next states in the bulk action screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketClose_StateDefault">
Frontend::Agent::Ticket::ViewClose &gt; StateDefault </link> - to define the
default next state after closing a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketClose_StateType">
Frontend::Agent::Ticket::ViewClose &gt; StateType </link> - to define the
available next states in the close screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketCompose_StateDefault">
Frontend::Agent::Ticket::ViewCompose &gt; StateDefault </link> - to define
the default next state in the Compose (reply) screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketCompose_StateType">
Frontend::Agent::Ticket::ViewCompose &gt; StateType </link> - to define the
available next states in the Compose (reply) screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketForward_StateDefault">
Frontend::Agent::Ticket::ViewForward &gt; StateDefault </link> - to define
the default next state after forwarding a ticket.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketForward_StateType">
Frontend::Agent::Ticket::ViewForward &gt; StateType </link> - to define the
available next states in the Forward screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketFreeText_StateDefault">
Frontend::Agent::Ticket::ViewForward &gt; StateDefault </link> - to define
the default next state of a ticket in the free text screen.
</para>

<para>
<link
linkend="ConfigReference_Setting_Ticket::Frontend::AgentTicketFreeText_StateType">
Frontend::Agent::Ticket::ViewForward &gt; StateType </link> - to define the
available next states in the free text screen.
</para>


<para>
<link linkend="ConfigReference_Setting_PostmasterDefaultState">
Core::PostMaster &gt; PostmasterDefaultState </link> - to define the state
of tickets created from emails.
</para>

<para>
<link linkend="ConfigReference_Setting_PostmasterFollowUpState">
Core::PostMaster &gt; PostmasterFollowUpState </link> - to define the state
of tickets after a follow-up has been received.
</para>

<para>
<link linkend="ConfigReference_Setting_PostmasterFollowUpStateClosed">
Core::PostMaster &gt; PostmasterFollowUpStateClosed </link> - to define the
state of tickets after a follow-up has been received on an already closed
ticket.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::ViewableStateType">
Core::Ticket &gt; ViewableStateType </link> - to define the state types that
are displayed at various places in the system, for example in the Queueview.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::UnlockStateType">
Core::Ticket &gt; UnlockStateType </link> - to define the state types for
unlocked tickets.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::PendingReminderStateType">
Core::Ticket &gt; PendingReminderStateType </link> - to define the state
type for reminder tickets.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::PendingAutoStateType">
Core::Ticket &gt; PendingAutoStateType </link> - to define the state type
for Pending Auto tickets.
</para>

<para>
<link linkend="ConfigReference_Setting_Ticket::StateAfterPending">
Core::Ticket > StateAfterPending </link> - to define the state a ticket is
set to after the Pending Auto timer of the configured state has expired.
</para>

</section>
</section>
