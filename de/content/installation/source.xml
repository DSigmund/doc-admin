<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="manual-installation-of-otrs">
<title>Manuelle Installation (Linux, Unix)</title>

<section id="preparing-manual-installation">
<title>Vorbereiten der manuellen Installation</title>

<para>
Wenn Sie OTRS manuell über die Quellen installieren möchten oder müssen,
laden Sie sich zuerst das aktuelle Archiv herunter. Sie finden die
entsprechenden .tar.gz- oder .tar.bz2-Dateien im Downloadbereich auf <ulink
url="http://www.otrs.org/downloads/"><citetitle>http://www.otrs.org/downloads</citetitle></ulink>.
</para>

<para>
Unpack the archive (for example, using <command>tar</command>) into the
directory <filename>/opt</filename>, and rename the directory from
otrs-x.x.x to otrs (see Script below).
</para>

<para>
<screen>
linux:/opt# tar xf /tmp/otrs-x.x.x.tar.gz
linux:/opt# mv otrs-x.x.x otrs
linux:/opt# ls
otrs
linux:/opt#
</screen>
</para>

<para>
<emphasis>Skript: Erste Schritte bei der Installation von OTRS.</emphasis>
</para>

<para>
OTRS should NOT be run with root rights. Next you should add a new user for
OTRS. The home directory of this new user should be
<filename>/opt/otrs</filename>. If your web server is not running with the
same user rights as the new 'otrs' user, which is the case on most systems,
you will need to add the new 'otrs' user to the group of the web server user
(see Script below).
</para>

<para>
<screen>
linux:/opt# useradd -r -d /opt/otrs/ -c 'OTRS user' otrs
linux:/opt# usermod -G nogroup otrs
linux:/opt#
</screen>
</para>

<para>
<emphasis>Skript: Anlegen eines neuen Nutzers 'otrs' und Hinzufügung zu
desselben zu einer Gruppe.</emphasis>
</para>

<para>
Im nächsten Schritt werden einige Demo-Konfigurationsdateien innerhalb der
entpackten Quelldateien bzw. innerhalb des Homeverzeichnisses des
OTRS-Benutzers kopiert. Die Dateien befinden sich in den Verzeichnissen
<filename>/opt/otrs/Kernel</filename>
bzw. <filename>/opt/otrs/Kernel/Config</filename> und haben die Endung
.dist.
</para>

<para>
<screen>
linux:/opt# cd otrs/Kernel/
linux:/opt/otrs/Kernel# cp Config.pm.dist Config.pm
linux:/opt/otrs/Kernel# cd Config
linux:/opt/otrs/Kernel/Config# cp GenericAgent.pm.dist GenericAgent.pm
</screen>
</para>

<para>
<emphasis>Skript: Kopieren von Beispieldateien.</emphasis>
</para>

<para>
Zum Abschluss der Vorbereitungen werden noch die richtigen Zugriffsrechte
für die Dateien des Ticket Systems gesetzt. Dazu kann das Skript
<command>SetPermissions.sh</command> verwendet werden, das sich im
Verzeichnis <filename>bin</filename> innerhalb des Homeverzeichnisses des
OTRS-Benutzers befindet. Das Skript kann mit folgenden Parametern aufgerufen
werden:
</para>

<para>
<cmdsynopsis>
<command>otrs.SetPermissions.pl</command>    <arg choice='req'>
<replaceable>Homedirectory des OTRS Benutzers</replaceable>    </arg>
<arg choice='req'>      <replaceable>OTRS Benutzer</replaceable>    </arg>
<arg choice='req'>      <replaceable>Webserver Benutzer</replaceable>
</arg>    <arg choice='opt'>      <replaceable>Gruppe des OTRS
Benutzers</replaceable>    </arg>    <arg choice='opt'>
<replaceable>Gruppe des Webserver Benutzers</replaceable>    </arg></cmdsynopsis>
</para>

<para>
Läuft Ihr Webserver mit den Benutzerrechten des Benutzers 'otrs', dann
lautet das Kommando also<command>otrs.SetPermissions.pl /opt/otrs
--otrs-user=otrs --web-user=otrs</command>. Unter SUSE Linux wird der
Webserver mit dem Benutzer wwwrun betrieben. Auf Debian-basierten Systemen
ist dies www-data. Geben Sie hier das Komando
<command>otrs.SetPermissions.pl /opt/otrs --otrs-user=otrs --web-user=wwwrun
--otrs-group=nogroup --web-group=www</command> ein, um die korrekten
Zugriffsrechte zu setzen.
</para>

</section>

<section id="installation-of-perl-modules">
<title>Installation der für OTRS benötigten Perl-Module</title>

<para>
OTRS requires some additional Perl modules, as described in Table 3-1. If
you install OTRS from source, you will need to install these modules
manually.  This can be done either with the package manager of your Linux
distribution (<application>yast</application>,
<application>apt-get</application>) or, as described in this section,
through the Perl shell and CPAN. If you're using ActiveState Perl, for
instance on Windows, you could use PPM, the built-in Perl Package Manager.
We recommend using your package manager if possible.
</para>

<para>
You can verify which modules you need to install with
<command>otrs.CheckModules.pl</command>.  This script is located in the
<filename>bin</filename> directory, in the home directory of the 'otrs' user
(see Script below).  Please note that some modules are optional.
<screen>
linux:~# cd /opt/otrs/bin/
linux:/opt/otrs/bin# ./otrs.CheckModules.pl
   o CGI..............................ok (v3.60)
   o Crypt::PasswdMD5.................ok (v1.3)
   o Crypt::SSLeay....................Not installed! (Optional - Required for Generic Interface SOAP SSL connections.)
   o CSS::Minifier....................ok (v0.01)
   o Date::Format.....................ok (v2.22)
   o Date::Pcalc......................ok (v1.2)

   ...

</screen>
</para>

<para>
<emphasis>Skript: Überprüfung benötigter Module.</emphasis>
</para>

<para>
You should strive to install the missing modules from your Linux
distribution's package management system. By doing so, the packages will be
automatically updated when new versions are available or when security
issues are found. Please refer to your distribution's documentation on how
to install additional packages. If the (correct version of) the module is
not available from the package repositories, you can also install from CPAN,
the Comprehensive Perl Archive Network.
</para>

<para>
Um eines der oben aufgeführten Module mit Hilfe von CPAN zu installieren,
geben Sie als root das Kommando <command>perl -e shell -MCPAN</command>
ein. Perl wird im interaktiven Modus gestartet und das CPAN Modul wird
geladen. Ist CPAN bereits ordentlich konfiguriert, können Sie die für OTRS
benötigten Module mit Hilfe des Kommandos <command>install</command> gefolgt
vom Modulnamen einrichten. CPAN weist darauf hin, wenn Abhängigkeiten
zwischen einzelnen Modulen nicht erfüllt sind und schlägt automatisch die
zusätzlich benötigten Module für die Installation vor.
</para>

<para>
    Führen Sie weiterhin die beiden Befehle <command>perl -cw
bin/cgi-bin/index.pl</command>  <command>perl -cw
bin/cgi-bin/customer.pl</command> und <command>perl -cw
bin/PostMaster.pl</command> aus, nach dem Sie in das Verzeichnis
<filename>/opt/otrs</filename> gewechselt sind. Wird bei beiden Befehlen die
Meldung "syntax OK" angezeigt, verfügt Ihre Perl-Installation über alle von
OTRS benötigten Module und Sie können im nächsten Schritt mit der
Einrichtung des Webservers beginnen.
</para>

<para>
<screen>
linux:~# cd /opt/otrs
linux:/opt/otrs# perl -cw bin/cgi-bin/index.pl
cgi-bin/installer.pl syntax OK
linux:/opt/otrs# perl -cw bin/cgi-bin/customer.pl
cgi-bin/customer.pl syntax OK
linux:/opt/otrs# perl -cw bin/otrs.PostMaster.pl
bin/otrs.PostMaster.pl syntax OK
linux:/opt/otrs#
</screen>
</para>
<para>
<emphasis>Skript: Crontab-Datei.</emphasis>
</para>

</section>

<section id="web-server-configuration">
<title>Konfiguration des Apache-Webservers</title>

<para>First of all, you should install the Apache2 web server and mod_perl; you'd
typically do this from your systems package manager.  Below you'll find the
commands needed to set up Apache on the most popular Linux distributions.
</para>

<para>
  <screen>

    # rhel / centos:
    linux:# yum install httpd mod_perl

    # suse:
    linux:# zypper install apache2-mod_perl

    # debian/ubuntu:
    linux:# apt-get install apache2 libapache-mod-perl2

  </screen>
</para>

<para>
To access the web interface of OTRS via a short URL, Alias and ScriptAlias
entries are needed. Most <application>Apache</application> installations
have a <filename>conf.d</filename> directory included. On Linux systems you
can usually find this directory under <filename>/etc/apache</filename> or
<filename>/etc/apache2</filename>. Log in as root, change to the
<filename>conf.d</filename> directory and copy the appropriate template in
<filename>/opt/otrs/scripts/apache2-httpd.include.conf</filename> to a file
called <filename>otrs.conf</filename> in the Apache configuration directory.
</para>

<para>
Starten Sie Ihren Webserver neu, um die neue Konfiguration zu laden. Auf den
meisten Systemen lässt sich der Webserver über den Befehl
<command>/etc/init.d/apache2 restart</command> neu starten (siehe skript
unten).
</para>

<para>
<screen>
linux:/etc/apache2/conf.d# /etc/init.d/apache2 restart
Forcing reload of web server: Apache2.
linux:/etc/apache2/conf.d#
</screen>
</para>

<para>
<emphasis>Skript: Neustart des Webservers.</emphasis>
</para>

<para>
Das war bereits die grundlegende Konfiguration des Webservers für OTRS.
</para>
</section>

<section id="database-configuration">
<title>Einrichten der Datenbank</title>

<section id="manual-installation-of-database">
<title>Manuelle Installation der OTRS Datenbank</title>

<para>
The recommended way to configure the database is to run the <link
linkend="web-installer">Web Installer</link>. If you can't use this for some
reason, you can also configure the database manually, as described in this
chapter.  If you can't use the web installer to setup the OTRS database, you
have to set it up manually. Scripts with the SQL statements to create and
configure the database are located in <filename>scripts/database</filename>,
in the home directory of the 'otrs' user (see Script below).
</para>

<para>
<screen>
linux:~# cd /opt/otrs/scripts/database/
linux:/opt/otrs/scripts/database# ls
otrs-initial_insert.db2.sql         otrs-schema.mysql.sql
otrs-schema.oracle.sql
otrs-initial_insert.mssql.sql       otrs-schema-post.db2.sql
otrs-initial_insert.mysql.sql       otrs-schema.postgresql.sql
otrs-initial_insert.oracle.sql
otrs-initial_insert.postgresql.sql  otrs-schema-post.mssql.sql
otrs-initial_insert.xml             otrs-schema-post.mysql.sql
otrs-schema.db2.sql                 otrs-schema-post.oracle.sql
 otrs-schema-post.postgresql.sql
otrs-schema.mssql.sql               otrs-schema.xml
linux:/opt/otrs/scripts/database#
</screen>
</para>

<para>
<emphasis>Skript: Für die Datenbankerstellung benötigte Dateien.</emphasis>
</para>

<para>
Für die verschiedenen Datenbanktypen sind mehrere .sql-Dateien vorhanden,
die nacheinander abgearbeitet werden müssen.
</para>

<para>
<orderedlist numeration="arabic">
<title>Die OTRS-Datenbank manuell Schritt für Schritt anlegen</title>
<listitem>
<para>
Anlegen der Datenbank für OTRS: Legen Sie mit Hilfe Ihres
Datenbankinterfaces bzw. Ihrer Datenbankoberfläche die Datenbank an, die
später von OTRS verwendet werden soll.
</para>
</listitem>
<listitem>
<para>
Erstellen der Tabellen: Mit Hilfe der otrs-schema.Datenbanktyp.sql-Dateien
(z. B. <filename>otrs-schema.oracle.sql</filename>,
<filename>otrs-schema.postgresql.sql</filename>, usw.) können Sie die
Tabellen innerhalb der OTRS Datenbank erzeugen.
</para>
</listitem>
<listitem>
<para>
Inserting the initial system data: OTRS needs some initial system data to
work properly (e.g. the different ticket states, ticket and notification
types). Depending on the type of database that you are using, you will need
to use one of the following files:
<filename>otrs-initial_insert.mysql.sql</filename>,
<filename>otrs-initial_insert.oracle.sql</filename>,
<filename>otrs-initial_insert.postgresql.sql</filename> or
<filename>otrs-initial_insert.mssql.sql </filename>.
</para>
</listitem>
<listitem>
<para>
Erzeugen von "foreign keys" auf andere Tabellen: Abschließend müssen noch
die "foreign keys" erstellt werden, über die die verschiedenen Tabellen in
der OTRS Datenbank voneinander abhängen. Dies kann mit Hilfe der
otrs-schema-post.Datenbanktyp.sql-Dateien erreicht werden
(z. B. <filename>otrs-schema-oracle.post.sql</filename>,
<filename>otrs-schema-post.postgresql.sql</filename>, usw.).
</para>
</listitem>
</orderedlist>
</para>

<para>
Nachdem Sie die Datenbank angelegt haben, sollten Sie die Zugriffsrechte
dafür setzen und z. B. sicherstellen, dass nur ein bestimmter Benutzer ohne
Datenbank-Administrationsrechte Zugriff auf die OTRS Datenbank hat. Je
nachdem, welche Datenbank Sie einsetzen, unterscheiden sich hier die
Vorgehensweisen, es sollte jedoch möglich sein dies mit Hilfe Ihres
Datenbankinterfaces bzw. Ihrer Datenbankoberfläche zu erledigen.
</para>

<para>
Wurden die nötigen Einstellungen für die Datenbank vorgenommen, muss nun
noch dem Ticket-System mitgeteilt werden, welche Datenbank es verwenden
soll. Öffnen Sie die Datei <filename>Kernel/Config.pm</filename> innerhalb
des Homeverzeichnisses des OTRS Benutzers und passen Sie die dafür
vorgesehenen Parameter an.
</para>

<para>
<programlisting>

    # DatabaseHost
    # (The database host.)
    $Self->{'DatabaseHost'} = 'localhost';

    # Database
    # (The database name.)
    $Self->{Database} = 'otrs';

    # DatabaseUser
    # (The database user.)
    $Self->{DatabaseUser} = 'otrs';

    # DatabasePw
    # (The password of database user.)
    $Self->{DatabasePw} = 'some-pass';

</programlisting>
</para>

<para>
<emphasis>Skript: Anzupassende Einstellungen.</emphasis>
</para>

</section>

</section>

<section id="cronjobs">
<title>Einrichten der von OTRS benötigten cron-Jobs</title>

<para>
Damit OTRS voll funktioniert, werden einige cron-Jobs benötigt. Die
cron-Jobs sollten mit denselben Benutzerrechten ausgeführt werden, die auch
für die restlichen OTRS-Skripte vergeben wurden, d.h. die cron-Jobs sollten
in die crontab des Benutzers 'otrs' eingetragen werden.
</para>

<para>
Alle Skripte für die verschiedenen cron-Jobs befinden sich im Verzeichnis
<filename>var/cron</filename> innerhalb des Homeverzeichnisses des Benutzers
'otrs'.
</para>

<para>
<screen>
linux:~# cd /opt/otrs/var/cron
linux:/opt/otrs/var/cron# ls
aaa_base.dist                generic_agent.dist       rebuild_ticket_index.dist
cache.dist                   pending_jobs.dist        session.dist
fetchmail.dist               postmaster.dist          unlock.dist
generic_agent-database.dist  postmaster_mailbox.dist
linux:/opt/otrs/var/cron#
</screen>
</para>

<para>
<emphasis>Skript: Für die Erstellung der Cronjobs benötigte
Dateien.</emphasis>
</para>

<para>
Alle Skripte tragen die Endung .dist und sollten zunächst so umkopiert
werden, dass keine Endung mehr vorhanden ist.
</para>

<para>
<screen>
linux:/opt/otrs/var/cron# for foo in *.dist; do cp $foo `basename $foo .dist`; done
linux:/opt/otrs/var/cron# ls
aaa_base                generic_agent-database.dist  rebuild_ticket_index
aaa_base.dist           generic_agent.dist           rebuild_ticket_index.dist
cache                   pending_jobs                 session
cache.dist              pending_jobs.dist            session.dist
fetchmail               postmaster                   unlock
fetchmail.dist          postmaster.dist              unlock.dist
generic_agent           postmaster_mailbox
generic_agent-database  postmaster_mailbox.dist
linux:/opt/otrs/var/cron#
</screen>
</para>

<para>
<emphasis> Skript: Kopieren und Umbenennen der für die Erstellung der
Cronjobs benötigten Dateien. </emphasis>
</para>

<para>
Die folgende Tabelle gibt eine kurze Übersicht über die Aufgabe der
verschiedenen Skripte.
</para>

<para>
<table id="table-of-cronjobs-for-otrs">
<title>Die verschiedenen Skripte für die cron-Jobs von OTRS.</title>
  <tgroup cols="2">
    <thead>
      <row>
        <entry>
          Skript
        </entry>
        <entry>
          Funktion
        </entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>
          aaa_base
        </entry>
        <entry>
          Über dieses Skript werden die grundlegenden Einstellungen für die crontab
des Benutzers 'otrs' festgelegt.
        </entry>
      </row>
      <row>
        <entry>
          cache
        </entry>
        <entry>
          Löscht abgelaufene Cache-Einträge von der Festplatte. Leert den Cache von
CSS- und JavaScript-Dateien.
        </entry>
      </row>
      <row>
        <entry>
          fetchmail
        </entry>
        <entry>
          Falls Nachrichten mit Hilfe von fetchmail in das System eingespeist werden
sollen, kann dieses Skript verwendet werden.
        </entry>
      </row>
      <row>
        <entry>
          generic_agent
        </entry>
        <entry>
          Mit Hilfe dieses Skripts werden die Jobs des GenericAgents ausgeführt, die
über eigene Konfigurationsdateien festgelegt wurden.
        </entry>
      </row>
      <row>
        <entry>
          generic_agent-database
        </entry>
        <entry>
          Mit Hilfe dieses Skripts werden die Jobs des GenericAgents ausgeführt, die
über dem Administrations-Bereich innerhalb von "GenericAgent" angelegt
wurden.
        </entry>
      </row>
      <row>
        <entry>
          pending_jobs
        </entry>
        <entry>
          Mit Hilfe dieses Skripts wird das System auf "wartende" (pending) Tickets
überprüft.
        </entry>
      </row>
      <row>
        <entry>
          postmaster
        </entry>
        <entry>
          Mit Hilfe dieses Skripts wird die Nachrichten-Warteschlange von OTRS
überprüft und noch nicht verarbeitete Nachrichten werden im System
gespeichert bzw. zugestellt.
        </entry>
      </row>
      <row>
        <entry>
          postmaster_mailbox
        </entry>
        <entry>
          Mit Hilfe dieses Skripts werden die verschiedenen pop3-Konten abgefragt, die
im Administrations-Bereich innerhalb von "PostMaster POP3 Account"
eingerichtet wurden.
        </entry>
      </row>
      <row>
        <entry>
          rebuild_ticket_index
        </entry>
        <entry>
          Mit Hilfe dieses Skripts wird der Ticket-Index für die Queue-Ansicht neu
erzeugt, wodurch die Anzeige beschleunigt wird.
        </entry>
      </row>
      <row>
        <entry>
          session
        </entry>
        <entry>
          Über dieses Skript werden alte und nicht mehr gültige Session-IDs entfernt.
        </entry>
      </row>
      <row>
        <entry>
          unlock
        </entry>
        <entry>
          Mit Hilfe dieses Skripts wird die Freigabe von Tickets innerhalb des Systems
ermöglicht.
        </entry>
      </row>
    </tbody>
  </tgroup>
</table>
</para>

<para>
To setup all cron jobs, the script <filename>bin/Cron.sh</filename> located
in the home directory of the 'otrs' user can be used. When this script is
executed, it needs a parameter to specify whether you want to install,
remove, or reinstall the cron jobs. The following parameters can be used:
</para>

<para>
<cmdsynopsis>
  <command>Cron.sh</command>    <arg choice='req'>
<replaceable>start</replaceable>    </arg>    <arg choice='req'>
<replaceable>stop</replaceable>    </arg>    <arg choice='req'>
<replaceable>restart</replaceable>    </arg>    <arg choice='opt'>
<replaceable>OTRS-Benutzer</replaceable>    </arg></cmdsynopsis>
</para>

<para>
Da die cron-Jobs für den Benutzer 'otrs' angelegt werden sollen, muss das
Skript von diesem Benutzer ausgeführt werden. Sind Sie z. B. als Benutzer
root am System angemeldet, können Sie mit Hilfe des Kommandos <command>su
otrs</command> zum OTRS-Benutzer wechseln. Nehmen Sie also die Installation
wie folgt vor.
</para>

<warning>
<para>
Bitte beachten Sie, dass durch die Verwendung von
<filename>Cron.sh</filename> evtl. andere Cron-Jobs des OTRS-Benutzers
überschrieben bzw. gelöscht werden. Um weitere, nicht von OTRS benötigte
Cron-Jobs für den OTRS-Benutzer zu installieren, erweitern Sie bitte
<filename>Cron.sh</filename> dementsprechend.
</para>
</warning>

<para>
<screen>
linux:/opt/otrs/var/cron# cd /opt/otrs/bin/
linux:/opt/otrs/bin# su otrs
linux:~/bin$ ./Cron.sh start
/opt/otrs/bin
Cron.sh - start/stop OTRS cronjobs
Copyright (C) 2001-2009 OTRS AG, http://otrs.org/
(using /opt/otrs) done
linux:~/bin$ exit
exit
linux:/opt/otrs/bin#
</screen>
</para>

<para>
<emphasis>Skript: Installation der Cronjobs.</emphasis>
</para>

<para>
Mit Hilfe des Kommandos <command>crontab -l -u otrs</command>, das Sie als
root ausführen können, wird die crontab-Datei des Benutzers 'otrs' angezeigt
und Sie können überprüfen, ob alle Einträge vorhanden sind.
</para>

<para>
<screen>
linux:/opt/otrs/bin# crontab -l -u otrs
# --
# cron/aaa_base - base crontab package
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# Who gets the cron emails?
MAILTO="root@localhost"

# --
# cron/cache - delete expired cache
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# delete expired cache weekly (Sunday mornings)
20 0 * * 0  $HOME/bin/otrs.CacheDelete.pl --expired >> /dev/null
30 0 * * 0  $HOME/bin/otrs.LoaderCache.pl -o delete >> /dev/null

# --
# cron/fetchmail - fetchmail cron of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# fetch every 5 minutes emails via fetchmail
#*/5 * * * * /usr/bin/fetchmail -a &gt;&gt; /dev/null

# --
# cron/generic_agent - otrs.GenericAgent.pl cron of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# start generic agent every 20 minutes
*/20 * * * * $HOME/bin/GenericAgent.pl &gt;&gt; /dev/null
# example to execute GenericAgent.pl on 23:00 with
# Kernel::Config::GenericAgentMove job file
#0 23 * * * $HOME/bin/otrs.GenericAgent.pl -c "Kernel::Config::GenericAgentMove" &gt;&gt; /dev/null
# --
# cron/generic_agent - GenericAgent.pl cron of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# start generic agent every 10 minutes
*/10 * * * * $HOME/bin/otrs.GenericAgent.pl -c db &gt;&gt; /dev/null
# --
# cron/pending_jobs - pending_jobs cron of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# check every 120 min the pending jobs
45 */2 * * * $HOME/bin/otrs.PendingJobs.pl &gt;&gt; /dev/null
# --
# cron/postmaster - postmaster cron of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# check daily the spool directory of OTRS
#10 0 * * * * test -e /etc/init.d/otrs &amp; /etc/init.d/otrs cleanup &gt;&gt; /dev/null; test -e /etc/rc.d/init.d/otrs &amp;&amp; /etc/rc.d/init.d/otrs cleanup &gt;&gt; /dev/null
10 0 * * * $HOME/bin/otrs.CleanUp.pl &gt;&gt; /dev/null
# --
# cron/postmaster_mailbox - postmaster_mailbox cron of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# fetch emails every 10 minutes
*/10 * * * * $HOME/bin/otrs.PostMasterMailbox.pl &gt;&gt; /dev/null
# --
# cron/rebuild_ticket_index - rebuild ticket index for OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# just every day
01 01 * * * $HOME/bin/otrs.RebuildTicketIndex.pl &gt;&gt; /dev/null

# --
# cron/session - delete old session ids of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# delete every 120 minutes old/idle session ids
55 */2 * * * $HOME/bin/otrs.DeleteSessionIDs.pl --expired &gt;&gt; /dev/null

# --
# cron/unlock - unlock old locked ticket of the OTRS
# Copyright (C) 2001-2013 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# unlock every hour old locked tickets
35 * * * * $HOME/bin/otrs.UnlockTickets.pl --timeout &gt;&gt; /dev/null

linux:/opt/otrs/bin#
</screen>
</para>

<para>
<emphasis>Skript: Crontab-Datei.</emphasis>
</para>

</section>

</section>
