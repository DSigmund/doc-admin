<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="performance-tuning">
<title>Leistungsverbesserung</title>

<abstract>
<para>
Presented below is a list of performance enhancing techniques for your OTRS
installation, including configuration, coding, memory use, and more.
</para>
</abstract>

<section id="performance-tuning-otrs">
<title>OTRS</title>
<para>
There are several options for improving OTRS performance.
</para>

<section id="performance-tuning-otrs-index">
<title>TicketIndexModule</title>
<para>
Zur Verfügung stehen zwei Backend-Module für den Ticket Index:
</para>

<para>
<itemizedlist mark='opencircle'>

<listitem>
<para>
Kernel::System::Ticket::IndexAccelerator::RuntimeDB (Standard), generiere
jede Queue-Ansicht dynamisch aus der Ticket Tabelle. Sie werden keine
Probleme mit der Leistung bekommen bis zu etwa 60.000 Tickets (oder 6000
offenen) in Ihrem System.
</para>
</listitem>

<listitem>
<para>
Kernel::System::Ticket::IndexAccelerator::StaticDB, das leistungsfähigste
Modul. Es sollte ab 80.000 Tickets oder mehr als 6000 offenen eingesetzt
werden. Benutzt eine extra ticket_index Tabelle, arbeitet wie eine Ansicht
(View). Führen Sie <filename>bin/otrs.RebuildTicketIndex.pl</filename> zum
erstmaligen Aufbau des Index aus.
</para>
</listitem>

</itemizedlist>
</para>

<para>
Sie können den IndexAccelerator per SysConfig einstellen.
</para>

</section>

<section id="performance-tuning-otrs-storage">
<title>TicketStorageModule</title>
<para>
Es stehen zwei Module für das Speichern der Tickets und Artikel bereit:
</para>

<para>
<itemizedlist mark='opencircle'>

<listitem>
<para>
Configure Kernel::System::Ticket::ArticleStorageDB (default) to store
attachments, etc., in the database. Note: Don't use it with large set ups.
</para>
<para>
Pro: Ist der Benutzer, unter dem der Webserver läuft, nicht der Benutzer
'otrs', können Sie mit diesem Modul Dateiberechtigungsprobleme vermeiden.
</para>
<para>
Contra: Es ist nicht wirklich ratsa,, Anhänge in Ihrer Datenbank zu
speichern. Achten Sie darauf, dass Ihre Datenbank das kann. Für MySQL setzen
Sie in dessen Konfiguration bspw. "set-variable = max_allowed_packet=8M", um
8 MB große Objekte zu speichern (Standard ist 2M).
</para>
</listitem>

<listitem>
<para>
Kernel::System::Ticket::ArticleStorageFS, speichert Anhänge u. A. im lokalen
Filesystem ab. Merke: Benutzen Sie dies für große Installationen.
</para>
<para>
Pro: Schneller!
</para>
<para>
Con: Your web server user should be the 'otrs' user. Also, if you have
multiple front-end servers, you should make sure the filesystem is shared
between the servers. Place it on an NFS share or preferably a SAN or similar
solution.
</para>
</listitem>

</itemizedlist>

</para>

<para>
    Note: you can switch from one back-end to the other on the fly. You can
switch the backend in the SysConfig, and then run the command line utility
<filename>otrs.ArticleStorageSwitch.pl</filename> to put the articles from
the database onto the filesystem or the other way around. You can use the
<emphasis>-s</emphasis> and <emphasis>-d</emphasis> options to specify the
source and destination back-ends. Please note that the entire process can
take considerable time to run, depending on the number of articles you have
and the available CPU power and/or network capacity.
</para>

<para>
<programlisting>
shell> bin/otrs.ArticleStorageSwitch.pl -s ArticleStorageDB -d ArticleStorageFS
</programlisting>
</para>
<para>
<emphasis>Skript: Wechsel des TicketStorage-Backends von Datenbank zu
Dateisystem.</emphasis>
</para>
</section>

<section>
    <title>Tickets archivieren</title>

    <para>
        Da OTRS als revisionssicheres System betrieben werden kann, ist das Löschen
von geschlossenen Tickets möglicherweise nicht empfehlenswert. Daher haben
wir eine Funktion implementiert, mit der Sie Tickets archivieren können.
    </para>
    <para>
        Tickets that match certain criteria can be marked as "archived" These
tickets are not accessed if you do a regular ticket search or run a Generic
Agent job. The system itself does not have to deal with a huge amount of
tickets any longer as only the "latest" tickets are taken into consideration
when using OTRS. This can result in a huge performance gain on large
systems.
    </para>
    <para>
        Befolgen Sie folgende Schritte, um die Archivierungsfunktion zu nutzen:
    </para>
    <orderedlist>
        <listitem>
            <para>
                Archivsystem in der SysConfig aktivieren
            </para>
            <para>
                Wählen Sie in der SysConfig die Gruppe <literal>Ticket</literal> aus.  In
<literal>Core::Ticket</literal> finden Sie die Option
<literal>Ticket::ArchiveSystem</literal>, die standardmäßig auf "Nein"
steht. Ändern Sie diese auf "Ja" und speichern Sie die Änderung ab.
            </para>
        </listitem>
        <listitem>
            <para>
                Anlegen eines GenericAgent-Jobs
            </para>
            <para>
                Wählen Sie im Administrationsbereich den "GenericAgent" aus und legen Sie
dort einen neuen Job an. <orderedlist>
                    <listitem>
                        <para>
                            Job-Einstellungen
                        </para>
                        <para>
                            Geben Sie dem Job einen geeigneten Namen und angemessene Optionen.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Ticket-Filter
                        </para>
                        <para>
                            Der Ticketfilter ist eine Ticketsuche, die Tickets nach bestimmten Kriterien
auswählt. Es könnte empfehlenswert sein, nur Tickets zu archivieren, die
seit einigen Monaten im Status "geschlossen" sind.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Ticket-Aktion
                        </para>
                        <para>
                            Im Abschnitt "Ticket-Aktion" werden Sie eine Aktion "Ausgewählte Tickets
archivieren" finden. Wählen Sie dort "Tickets archivieren" aus.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Job speichern
                        </para>
                        <para>
                            Am Ende der Seite finden Sie einen Knopf zum Speichern des Jobs.
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            Betroffene Tickets
                        </para>
                        <para>
                            Das System wird dann alle Tickets anzeigen, die beim Ausführen des
GenericAgent-Jobs archiviert werden.
                        </para>
                    </listitem>
                </orderedlist>
            </para>
        </listitem>
        <listitem>
            <para>
                Ticketsuche
            </para>
            <para>
                Wenn Sie nun nach Tickets suchen, werden standardmäßig nur Tickets gefunden,
die nicht archiviert sind. Wenn Sie auch in archivierten Tickets suchen
wollen, fügen Sie "Archivsuche" zu Ihren Suchkriterien hinzu.
            </para>
        </listitem>
    </orderedlist>
</section>

</section>


<section id="performance-tuning-database">
<title>Datenbank</title>
<para>
Einstellungen sind immer spezifisch für die jeweils eingesetzte
Datenbank. Bei Problemen lesen Sie die Dokumentation und fragen Sie Ihren
Datenbankadministrator.
</para>

<section id="performance-tuning-database-mysql">
<title>MySQL</title>
<para>
If you use the MySQL table type MyISAM (which is the default), and have
deleted a large part of a table or if you have made many changes to a table
with variable-length rows (tables that have VARCHAR, BLOB or TEXT columns),
you must defragment the datafile (tables) with the "optimize" command.
</para>
<para>
Dies bietet sich an, wenn MySQL viel CPU Zeit braucht. Optimieren Sie die
Tabellen ticket, ticket_history und article.
</para>

<para>
<programlisting>
shell$ mysql -u user -p database
mysql$ optimize table ticket;
mysql$ optimize table ticket_history;
mysql$ optimize table article;
</programlisting>
</para>

<para>
<emphasis>Skript: Optimierung von Datenbanktabellen.</emphasis>
</para>

</section>

<section id="performance-tuning-database-postgresql">
<title>PostgreSQL</title>
<para>
PostgreSQL is best tuned by modifying the postgresql.conf file in your
PostgreSQL data directory. For advice on how to do this, reference the
following articles:
</para>

<para>
    <itemizedlist>
        <listitem>
            <para>
            <ulink url="http://www.revsys.com/writings/postgresql-performance.html">
<citetitle>http://www.revsys.com/writings/postgresql-performance.html</citetitle>
</ulink>
            </para>
        </listitem>
        <listitem>
            <para>
            <ulink url="http://varlena.com/GeneralBits/Tidbits/perf.html">
<citetitle>http://varlena.com/GeneralBits/Tidbits/perf.html</citetitle>
</ulink>
            </para>
        </listitem>
        <listitem>
            <para>
            <ulink url="http://varlena.com/GeneralBits/Tidbits/annotated_conf_e.html">
<citetitle>http://varlena.com/GeneralBits/Tidbits/annotated_conf_e.html</citetitle>
</ulink>
            </para>
        </listitem>
    </itemizedlist>
</para>

<para>
Ist die Leistung immer noch nicht genügend, empfehlen wir, Fragen auf der
"PostgreSQL Performance Mailing Liste" ( <ulink
url="http://www.postgresql.org/community/lists/">
http://www.postgresql.org/community/lists/ </ulink> )  zu stellen. Die
Teilnehmer der PostgreSQL Liste sind sehr freundlich und können
wahrscheinlich helfen.
</para>
</section>

</section>

<section id="performance-tuning-webserver">
<title>Webserver</title>
<para>
Natürlich empfehlen wir mod_perl 2.0 (<ulink
url="http://perl.apache.org/">http://perl.apache.org/</ulink>). Es ist sehr
viel schneller (etwa um den Faktor 100) als pures CGI, braucht aber auch
mehr Speicher. Ihr httpd wird mit mod_perl also größer sein.
</para>

<section id="performance-tuning-webserver-db">
<title>Persistente Datenbankverbindungen</title>
<para>
Sie können die Datenbankverbindung bereits beim Start des Webservers
herstellen lassen. Dies spart ebenso Zeit (siehe auch README.webserver).
</para>
</section>

<section id="performance-tuning-webserver-startup">
<title>Vorgeladene Module - startup.pl</title>
<para>
Nutzen Sie das Start Skript
<filename>scripts/apache2-perl-startup.pl</filename>, um die Perl Module
vorzuladen (siehe README.webserver). Dadurch wird der Webserver schneller
und braucht weniger Speicher.
</para>
</section>
<section id="performance-tuning-webserver-reload">
<title>Perl Module bei Änderung neu laden</title>
<para>
By default Apache::Reload is used in
scripts/apache2-httpd.include.conf. Disable it and you will get 8% more
speed. But remember to restart the web server if you install any modules via
the OTRS Package Manager, or any values in your SysConfig or in
Kernel/Config.pm. Important: this would also mean you can't use the OTRS
Package Manager via the web interface, you need to use the command line
variant - <filename>bin/otrs.PackageManager.pl</filename>.
</para>
</section>

<section id="performance-tuning-webserver-strategy">
<title>Die richtige Strategie wählen</title>
<para>
If you have a larger installation, e.g. over 1,000 new tickets per day and
over 40 agents, it is a good idea to read the chapters on Performance of the
mod_perl User's Guide ( <ulink
url="http://perl.apache.org/docs/2.0/user/index.html"><citetitle>http://perl.apache.org/docs/2.0/user/index.html</citetitle></ulink>
).
</para>
</section>

<section id="performance-tuning-webserver-gzip">
<title>mod_gzip/mod_deflate</title>
<para>
Falls Ihre Bandbreite ein wenig schmal sein sollte, benutzen Sie mod_deflate
für Apache2. Eine HTML-Seite von 45k wird mod_gzip/mod_deflate auf etwa 7k
zusammendrücken. Allerdings wird dadurch die Last auf dem Server erhöht.
</para>
</section>

</section>

</chapter>
