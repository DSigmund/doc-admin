<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">


<!-- $Id: states.xml,v 1.2 2010-12-01 11:02:21 mg Exp $ -->
<chapter id="states">
<title>States</title>

<section id="states-predefined">
<title>Predefined states</title>

<para>
In OTRS, it is possible to change the predefined ticket states and their
types, or even add new ones. Two attributes are important for a state: the
name (state-name)  and type (state-type).
</para>

<para>
The default states of OTRS are: 'closed successful', 'closed unsuccessful',
'merged', 'new', 'open', 'pending auto close+', 'pending auto close-',
'pending reminder' and 'removed'.
</para>

<section id="state-new">
<title>New</title>
<para>
Tickets are usually only in this state when they are created from incoming
e-mails.
</para>
</section>

<section id="state-open">
<title>Open</title>
<para>
The default state for tickets assigned to queues and agents.
</para>
</section>

<section id="state-pending-reminder">
<title>Pending reminder</title>
<para>
After the pending time has expired, the bug owner will receive a reminder
email concerning the ticket. If the ticket is not locked, the reminder will
be sent to all agents in the queue. Reminder tickets will only be sent out
within business hours, and are repeated every 24 hours until the state of
the ticket is changed by the agent. Time spent by the ticket in this status
will still add towards the escalation time calculations.
</para>
</section>

<section id="state-pending-autoclose-minus">
<title>Pending auto close-</title>
<para>
Tickets in this status will be set to Closed Unsuccessful if the pending
time has expired. Time spent by the ticket in this status will still add
towards the escalation time calculations.
</para>
</section>

<section id="state-pending-autoclose-plus">
<title>Pending auto close+</title>
<para>
Tickets in this status will be set to Closed Successful if the pending time
has expired. Time spent by the ticket in this status will still add towards
the escalation time calculations.
</para>
</section>

<section id="state-merged">
<title>Merged</title>
<para>
State for tickets that have been merged with other tickets.
</para>
</section>

<section id="state-closed-successful">
<title>Closed Successful</title>
<para>
End state for tickets that have been successfully resolved. Depending on
your configuration, you might not be able to reopen closed tickets.
</para>
</section>

<section id="state-closed-unsuccessful">
<title>Closed Unsuccessful</title>
<para>
End state for tickets that have not been successfully resolved. Depending on
your configuration, you might not be able to reopen closed tickets.
</para>
</section>

</section>


<section id="states-customizing">
<title>Customizing states</title>
<para>
Every state has a name (state-name) and a type (state-type). You can freely
choose the name of a state, via the admin area of OTRS, in the section for
<link linkend="adminarea-status">states</link>. The state types can not be
changed in the web interface, but the database has to be modified if you
want to add new types or change existing names. We would generally recommend
not to modify the default state types, as this can cause unexpected
results. For instance, escalation calculations and the unlock feature are
based on certain state types.
</para>

<para>
In the section for states, in the admin area of OTRS, the name of already
existing states can be changed or new states can be added. If the state
"new" has been changed via the web interface, this change also has to be
configured via the config file <filename>Kernel/Config.pm</filename> or via
the SysConfig interface. The settings specified in the Script 12.1 have to
be modified to ensure that OTRS works with the changed state for "new".
</para>

<para>
<programlisting>
    [...]
    # PostmasterDefaultState
    # (The default state of new tickets.) [default: new]
    $Self-&gt;{PostmasterDefaultState} = 'new';

    # CustomerDefaultState
    # (default state of new customer tickets)
    $Self-&gt;{CustomerDefaultState} = 'new';
    [...]
</programlisting>
</para>

<para>
    <emphasis>Script 12.1. Modifying the Kernel/Config.pm settings.</emphasis>
</para>

<para>
If a new state type should be added, the ticket_state_type table in the OTRS
database needs to be modified with a database client program, as shown in
the Script 12.2.
</para>

<para>
<screen>
linux:~# mysql -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 23 to server version: 5.0.16-Debian_1-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt; use otrs;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; insert into ticket_state_type (name,comments) values ('own','Own
state type');
Query OK, 1 row affected (0.00 sec)

mysql&gt; quit
Bye
linux:~#
</screen>
</para>

<para>
    <emphasis>Script 12.2. Modifying the OTRS database.</emphasis>
</para>

<para>
Now it is possible to use the new state type you just created in the section
for states, in the admin area. After a state has been linked with this new
state type, also the configuration of OTRS has to be changed, to ensure that
the new state is used. Just modify the following options via SysConfig:
</para>



<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewPhoneNew:Ticket::Frontend::AgentTicketPhone_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewPhoneNew &gt;
AgentTicketPhone###StateDefault </link> - to define the default next state
for new phone tickets.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewPhoneNew:Ticket::Frontend::AgentTicketPhone_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewPhoneNew &gt;
AgentTicketPhone###StateType </link> - to define the available next states
for new phone tickets.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewEmailNew:Ticket::Frontend::AgentTicketEmail_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewEmailNew &gt;
AgentTicketEmail###StateDefault </link> - to define the default next state
for new email tickets.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewEmailNew:Ticket::Frontend::AgentTicketEmail_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewEmailNew &gt;
AgentTicketEmail###StateType </link> - to define the available next states
for new email tickets.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewPhoneOutbound:Ticket::Frontend::AgentTicketPhoneOutbound_State">
Ticket -&gt; Frontend::Agent::Ticket::ViewPhoneOutbound &gt;
AgentTicketPhoneOutbound###State </link> - to define the default next state
for new phone articles.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewPhoneOutbound:Ticket::Frontend::AgentTicketPhoneOutbound_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewPhoneOutbound &gt;
AgentTicketPhoneOutbound###StateType </link> - to define the available next
states for new phone articles.
</para>


<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewMove:Ticket::DefaultNextMoveStateType">
Ticket:Frontend::Agent::Ticket::ViewMove:Ticket::DefaultNextMoveStateType
</link> - to define the default next state after moving a ticket.
</para>


<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewBounce:Ticket::Frontend::AgentTicketBounce_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewBounce &gt; StateDefault </link> -
to define the default next state after bouncing a ticket.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewBounce:Ticket::Frontend::AgentTicketBounce_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewBounce &gt; StateType </link> - to
define the available next states in the bounce screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewBulk:Ticket::Frontend::AgentTicketBulk_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewBulk &gt; StateDefault </link> -
to define the default next state in a bulk action.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewBulk:Ticket::Frontend::AgentTicketBulk_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewBulk &gt; StateType </link> - to
define the available next states in the bulk action screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewClose:Ticket::Frontend::AgentTicketClose_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewClose &gt; StateDefault </link> -
to define the default next state after closing a ticket.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewClose:Ticket::Frontend::AgentTicketClose_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewClose &gt; StateType </link> - to
define the available next states in the close screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewCompose:Ticket::Frontend::AgentTicketCompose_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewCompose &gt; StateDefault </link>
- to define the default next state in the Compose (reply) screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewCompose:Ticket::Frontend::AgentTicketCompose_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewCompose &gt; StateType </link> -
to define the available next states in the Compose (reply) screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewForward:Ticket::Frontend::AgentTicketForward_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewForward &gt; StateDefault </link>
- to define the default next state after forwarding a ticket.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewForward:Ticket::Frontend::AgentTicketForward_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewForward &gt; StateType </link> -
to define the available next states in the Forward screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewFreeText:Ticket::Frontend::AgentTicketFreeText_StateDefault">
Ticket -&gt; Frontend::Agent::Ticket::ViewForward &gt; StateDefault </link>
- to define the default next state of a ticket in the free text screen.
</para>

<para>
<link
linkend="Ticket:Frontend::Agent::Ticket::ViewFreeText:Ticket::Frontend::AgentTicketFreeText_StateType">
Ticket -&gt; Frontend::Agent::Ticket::ViewForward &gt; StateType </link> -
to define the available next states in the free text screen.
</para>


<para>
<link linkend="Ticket:Core::PostMaster:PostmasterDefaultState"> Ticket -&gt;
Core::PostMaster &gt; PostmasterDefaultState </link> - to define the state
of tickets created from emails.
</para>

<para>
<link linkend="Ticket:Core::PostMaster:PostmasterFollowUpState"> Ticket
-&gt; Core::PostMaster &gt; PostmasterFollowUpState </link> - to define the
state of tickets after a follow-up has been received.
</para>

<para>
<link linkend="Ticket:Core::PostMaster:PostmasterFollowUpStateClosed">
Ticket -&gt; Core::PostMaster &gt; PostmasterFollowUpStateClosed </link> -
to define the state of tickets after a follow-up has been received and the
ticket was already closed.
</para>

<para>
<link linkend="Ticket:Core::Ticket:Ticket::ViewableStateType"> Ticket -&gt;
Core::Ticket &gt; ViewableStateType </link> - to define the state types that
are displayed at various places in the system, for example in the Queueview.
</para>

<para>
<link linkend="Ticket:Core::Ticket:Ticket::UnlockStateType"> Ticket -&gt;
Core::Ticket &gt; UnlockStateType </link> - to define the state types for
unlocked tickets.
</para>

<para>
<link linkend="Ticket:Core::Ticket:Ticket::PendingReminderStateType"> Ticket
-&gt; Core::Ticket &gt; PendingReminderStateType </link> - to define the
state type for reminder tickets.
</para>

<para>
<link linkend="Ticket:Core::Ticket:Ticket::PendingAutoStateType"> Ticket
-&gt; Core::Ticket &gt; PendingAutoStateType </link> - to define the state
type for Pending Auto tickets.
</para>

<para>
<link linkend="Ticket:Core::Ticket:Ticket::StateAfterPending"> Ticket ->
Core::Ticket > StateAfterPending </link> - to define the state a ticket is
set to after the Pending Auto timer of the configured state has expired.
</para>

</section>
</chapter>
