<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- $Id: acl.xml,v 1.13 2010-12-16 15:02:55 mg Exp $ -->
<chapter id="acl" >
<title>Access Control Lists (ACLs)</title>

<para>
Seit OTRS 2.0 können Access Control Lists (ACLs) verwendet werden, um den
Zugriff auf Tickets, Module, Queues, usw. zu steuern bzw. um in bestimmten
Situationen Aktionen auf Tickets (schließen, verschieben, usw.) zu
beeinflussen. ACLs können als Ergänzung zum bestehenden Berechtigungssystem
der <link linkend="adminarea-roles">Rollen</link> und <link
linkend="adminarea-groups">Gruppen</link> verwendet werden. Mit ACLs lassen
sich, basierend auf Ticket-Attributen, rudimentäre Workflows innerhalb des
Systems abbilden.
</para>

<para>
ACLs können noch nicht über das <link
linkend="adminarea-sysconfig">SysConfig-Interface</link> erstellt werden,
sie müssen direkt in die Datei <filename>Kernel/Config.pm</filename>
eingetragen werden. Im folgenden einige Beispiele:
</para>

<para>
<example id="acl-move">
<title>ACL, die das Verschieben von Tickets in eine Queue nur bei einer
Ticket-Priorität von 5 erlaubt.</title>

<programlisting>
    # ticket acl
    $Self->{TicketAcl}->{'ACL-Name-2'} = {
        # match properties
        Properties => {
            # current ticket match properties
            Ticket => {
                Queue => ['Raw'],
                Priority => ['5 very high'],
            }
        },
        # return possible options (white list)
        Possible => {
            # possible ticket options (white list)
            Ticket => {
                Queue => ['Alert'],
            },
        },
    };
</programlisting></example>
</para>

<para>
<example id="acl-close" >
<title>ACL, die das Schließen von Tickets in der raw-Queue verbietet und den
Schließen-Schalter ausblendet.</title>

<programlisting>
    $Self->{TicketAcl}->{'ACL-Name-1'} = {
        # match properties
        Properties => {
            # current ticket match properties
            Ticket => {
                Queue => ['Raw'],
            }
        },
        # return possible options (white list)
        Possible => {
            # possible ticket options (white list)
            Ticket => {
                State => ['new', 'open', 'pending reminder'],
            },
            # possible action options
            Action => {
                AgentTicketLock => 1,
                AgentTicketZoom => 1,
                AgentTicketClose => 0,
                AgentTicketPending => 1,
                AgentTicketNote => 1,
                AgentTicketHistory => 1,
                AgentTicketPriority => 1,
                AgentTicketFreeText => 1,
                AgentTicketHistory => 1,
                AgentTicketCompose => 1,
                AgentTicketBounce => 1,
                AgentTicketTicketPrint => 1,
                AgentTicketForward => 1,
                AgentTicketTicketLink => 1,
                AgentTicketPrint => 1,
                AgentTicketPhone => 1,
                AgentTicketCustomer => 1,
                AgentTicketOwner => 1,
            },
        },
    };
</programlisting></example>
</para>

<para>
<example id="acl-state" >
<title>ACL, die den Status für alle Agenten entfernt und Ihn nur noch für eine
Gruppe zur Verfügung stellt.</title>

<programlisting>
    $Self->{TicketAcl}->{'ACL-Name-5'} = {
        # match properties
        Properties => {
            # current ticket match properties (match always)
        },
        # return possible options
        PossibleNot => {
            # possible ticket options
            Ticket => {
                State => ['closed successful'],
            },
        },
    };
</programlisting></example>
</para>

<para>
In Skritp 18.1 finden Sie eine Liste aller Parameter, die für ACLs verwendet
werden können.
</para>

<para>
<programlisting>
    # ticket acl
    $Self->{TicketAcl}->{'ACL-Name-Test'} = {
        # match properties
        Properties => {
            # current action match properties
            Frontend => {
                Action => ['AgentTicketPhone', 'AgentTicketEmail'],
            },
            # current user match properties
            User => {
                Group_rw => [
                    'hotline',
                ],
            },
            # current user match properties
            Ticket => {
                Queue => ['Raw'],
                State => ['new', 'open'],
                Priority => ['some priority'],
                Lock => ['lock'],
                CustomerID => ['some id'],
                CustomerUserID => ['some id'],
                TicketFreeKey1 => ['some key'],
                TicketFreeKey2 => ['some key'],
                # ...
                TicketFreeKey8 => ['some key'],
                TicketFreeText1 => ['some value'],
                TicketFreeText2 => ['some value'],
                # ...
                TicketFreeText8 => ['some value'],
            }
        },
        # return possible options (white list)
        Possible => {
            # possible ticket options (white list)
            Ticket => {
                Queue => ['Hotline', 'Koordination'],
                State => => ['some state'],
                Priority => ['5 very high'],
                TicketFreeKey1 => ['some key'],
                TicketFreeKey2 => ['some key'],
                # ...
                TicketFreeKey8 => ['some key'],
                TicketFreeText1 => ['some value'],
                TicketFreeText2 => ['some value'],
                # ...
                TicketFreeText8 => ['some value'],
            },
            # possible action options (white list)
            Action => {
                AgentTicketLock => 1,
                AgentTicketZoom => 1,
                AgentTicketClose => 1,
                AgentTicketPending => 0,
                AgentTicketNote => 1,
                AgentTicketHistory => 0,
                AgentTicketPriority => 1,
                AgentTicketFreeText => 0,
                AgentTicketHistory => 1,
                AgentTicketCompose => 1,
                AgentTicketBounce => 1,
                AgentTicketTicketPrint => 0,
                AgentTicketForward => 1,
                AgentTicketTicketLink => 1,
                AgentTicketPrint => 1,
                AgentTicketPhone => 1,
                AgentTicketCustomer => 1,
                AgentTicketOwner => 0,
            },
        },
        # remove options (black list)
        PossibleNot => {
            # possible ticket options (black list)
            Ticket => {
                Queue => ['Hotline', 'Koordination'],
                State => ['closed', 'removed'],
            },
        },
    };
</programlisting>
</para>

<para>
    <emphasis>Skript 18.1. Verwendbare Parameter für ACLs.</emphasis>
</para>

</chapter>
