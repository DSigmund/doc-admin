<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<!-- $Id: status.xml,v 1.1 2006-01-09 21:11:05 cs Exp $ -->

<chapter id="status">
<title>Anpassen der Ticket Status und Ticketstatustypen</title>

<para>
OTRS erlaubt es Ihnen, die Ticket-Status zu verändern oder neue Status
hinzuzufügen. Hierbei gibt es zwei wichtige Optionen. Zum Einen den Namen
des Status "state-name" und zum Zweiten den Type des Status "state-type".
</para>

<para>
<itemizedlist>
<listitem>
    <para>
    Die standardmäßig voreingestellten Status lauten: 'neu', 'offen',
    'erfolgreich geschlossen', 'erfolglos geschlossen', 'merged',
    'entfernt', 'warten auf erfolgreich schließen', 'warten auf erfolglos
    schließen' und 'warten zur Erinnerung'.
    </para>
</listitem>
<listitem>
    <para>
    Jeder Status besteht aus einem Namen ("state-name") und einem Typen
    ("state-type"). Der Name ist frei wählbar und kann über das
    Admin-Interface von OTRS angepasst werden, die Statustypen müssen
    direkt in der Datenbank geändert werden.
    </para>
</listitem>
</itemizedlist>
</para>

<para>
Im Admin-Interface können Sie innerhalb der Einstellungen für "Status" neue
Status für die vorhandenen Statustypen hinzufügen oder ändern.
</para>

<para>
Beachten Sie, dass Sie bei Änderungen am Status "neu - new" auch die
entsprechenden Änderungen in der Konfigurationsdatei
<filename>Kernel/Config.pm</filename> bzw. mit Hilfe des
grafischen Konfigurations-Front-End vornehmen müssen.
</para>

<para>
<programlisting>
    [...]
    # PostmasterDefaultState
    # (The default state of new tickets.) [default: new]
    $Self-&gt;{PostmasterDefaultState} = 'new';

    # CustomerDefaultState
    # (default state of new customer tickets)
    $Self-&gt;{CustomerDefaultState} = 'new';
    [...]
</programlisting>
</para>

<para>
Auch bei Änderungen am Status "offen - open" sind Änderungen in
<filename>Kernel/Config.pm</filename> bzw. mit Hilfe des grafischen
Konfigurations-Front-End von Nöten!
</para>

<para>
<programlisting>
    [...]
    # default phone new state
    $Self-&gt;{'Ticket::Frontend::PhoneNextState'} = 'open';

    # PostmasterFollowUpState
    # (The state if a ticket got a follow up.) [default: open]
    $Self-&gt;{PostmasterFollowUpState} = 'open';
    [...]
</programlisting>
</para>

<para>
Möchten Sie einen neuen Statustyp hinzufügen, müssen Sie zuerst die
ticket_status-type-Tabelle in der OTRS Datenbank mit Hilfe eines
entsprechenden Datenbankclient anpassen.
</para>

<para>
<screen>
linux:~# mysql -p
Enter password:
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 23 to server version: 5.0.16-Debian_1-log

Type 'help;' or '\h' for help. Type '\c' to clear the buffer.

mysql&gt; use otrs;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; insert into ticket_state_type (name,comments) values ('own','Own
state type');
Query OK, 1 row affected (0.00 sec)

mysql&gt; quit
Bye
linux:~#
</screen>
</para>

<para>
Nun können Sie über das Admin-Interface innerhalb der Einstellungen für
"Status" neue Ticketstatus hinzufügen, die als Statustyp "own"
enthalten. Anschließend müssen Sie noch in
<filename>Kernel/Config.pm</filename> oder über das grafische
Konfigurations-Front-end einstellen, an welchen Stellen im System der neue
Status verwendet werden soll, z.B.:
</para>

<para>
<programlisting>
    [...]
    # Ticket::DefaultNextMoveStateType
    # default move next state
    $Self-&gt;{'Ticket::DefaultNextMoveStateType'} = ['open', 'closed'];

    # next possible states after phone
    $Self-&gt;{'Ticket::PhoneDefaultNextStateType'} = ['open', 'pending auto', 'pending reminder', 'closed'];

    # default next state
    $Self-&gt;{'Ticket::Frontend::PhoneNextState'} = 'closed successful';

    # default next state [default: open]
    $Self-&gt;{'Ticket::Frontend::PhoneNewNextState'} = 'open';

    # next possible states after email
    $Self-&gt;{'Ticket::EmailDefaultNextStateType'} = ['own-state', 'open', 'pending auto', 'pending reminder', 'closed'];

    # default next state
    $Self-&gt;{'Ticket::Frontend::EmailNewNextState'} = 'open';

    # (default note next state)
    $Self-&gt;{'Ticket::DefaultNextNoteStateType'} = ['new', 'open', 'closed'];

    # Ticket::DefaultNextOwnerStateType
    # (default note next state)
   $Self-&gt;{'Ticket::DefaultNextOwnerStateType'} = ['open', 'closed'];

    # default compose next state
    $Self-&gt;{'Ticket::DefaultNextComposeType'} = 'open';

    # next possible states for compose message
    $Self-&gt;{'Ticket::DefaultNextComposeStateType'} = ['open', 'closed', 'pending auto', 'pending reminder'];

    # default bounce next state
    $Self-&gt;{'Ticket::Frontend::BounceState'} = 'closed successful';

    # next possible states for bounce message
    $Self-&gt;{'Ticket::DefaultNextBounceStateType'} = ['open', 'closed'];

    # next possible states for forward message
    $Self-&gt;{'Ticket::DefaultNextForwardStateType'} = ['open', 'closed'];

    # Ticket::ViewableStateType
    # (see http://yourhost/otrs/index.pl?Action=AdminState -&gt; StateType)
    $Self-&gt;{'Ticket::ViewableStateType'} = ['new', 'open', 'pending reminder', 'pending auto'];

    # Ticket::UnlockStateType
    # (Tickets which can be unlocked by bin/UnlockTickets.pl
    # (see http://yourhost/otrs/index.pl?Action=AdminState -&gt; StateType)
    $Self-&gt;{'Ticket::UnlockStateType'} = ['open', 'new'];
    [...]
</programlisting>
</para>

<para>
Fügen Sie einfach bei den Konfigurationsparametern, bei denen Ihr neuer
Statustyp mit aufgeführt werden soll, Ihren neuen Statustyp mit hinzu.
</para>
</chapter>
