<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="manual-installation-of-otrs">
<title>ソース（Linux,Unix)からのインストレーション</title>

<section id="preparing-manual-installation">
<title>ソースからのインストレーションの準備</title>

<para>
ソースからOTRSをインストールしたければ、まず.tar.gz, .tar.bz2, or .zip file <ulink
url="http://www.otrs.com/try/">
<citetitle>http://www.otrs.com/try/</citetitle>
</ulink>といったソース・アーカイブからダウンロードして下さい。
</para>

<para>
アーカイブをディレクトリー<filename>/opt</filename>へ解凍して(例えば、<command>tar</command>を使用して)、ディレクトリーを
otrs-x.x.x から otrs へ改名してください(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:/opt# tar xf /tmp/otrs-x.x.x.tar.gz
linux:/opt# mv otrs-x.x.x otrs
linux:/opt# ls
otrs
linux:/opt#
</screen>
</para>

<para>
<emphasis>スクリプト：OTRSをインストールするファースト・ステップ</emphasis>
</para>

<para>
OTRSは、root権限で実行されるべきではありません。今直ぐOTRSのための新規のユーザを追加すべきです。この新規ユーザのホームディレクトリーは<filename>/opt/otrs</filename>にあるべきです。ウェブサーバが新規の「otrs」ユーザ(それはほとんどのシステム上の場合である)と同じユーザー権利で作動していなければ、新規の「otrs」ユーザをウェブサーバ・ユーザのグループに追加する必要があります(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:/opt# useradd -r -d /opt/otrs/ -c 'OTRS user' otrs
linux:/opt# usermod -G www otrs
linux:/opt#
</screen> (SUSE=www, Red Hat/CentOS/Fedora=apache,
Debian/Ubuntu=www-data)
</para>

<para>
<emphasis>スクリプト：新規 'OTRS' ユーザの追加とグループへの追加</emphasis>
</para>

<para>
次に、いくつかのサンプル構成ファイルをコピーしなければなりません。システムは後でコピーされたファイルを使用します。ファイルは、<filename>/opt/otrs/Kernel</filename>
and <filename>/opt/otrs/Kernel/Config</filename>
にあり、接尾辞.distがあります(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:/opt# cd otrs/Kernel/
linux:/opt/otrs/Kernel# cp Config.pm.dist Config.pm
linux:/opt/otrs/Kernel# cd Config
linux:/opt/otrs/Kernel/Config# cp GenericAgent.pm.dist GenericAgent.pm
</screen>
</para>

<para>
<emphasis>スクリプト：いくつかのサンプルファイルのコピー</emphasis>
</para>

<para>
OTRSのインストレーションを準備する最後のステップは、ファイル用に適切なアクセス権を設定することです。「otrs」ユーザのホームディレクトリーの中で、スクリプト<command>otrs.SetPermissions.pl</command>(それは<filename>bin</filename>ディレクトリーに位置する)を使用することができます。次のパラメーターを備えたスクリプトを実行することができます:
</para>

<para>
<cmdsynopsis>
<command>otrs.SetPermissions.pl</command> <arg choice='req'>
<replaceable>Home directory of the OTRS user</replaceable> </arg> <arg
choice='req'> --otrs-user= <replaceable>OTRS user</replaceable> </arg> <arg
choice='req'> --web-user= <replaceable>Web server user</replaceable> </arg>
<arg choice='opt'> --otrs-group= <replaceable>Group of the OTRS
user</replaceable> </arg> <arg choice='opt'> --web-group= <replaceable>Group
of the web server user</replaceable> </arg></cmdsynopsis>
</para>

<para>
ウェブサーバがユーザ「otrs」と同じユーザー権限で作動している場合、適切なアクセス権を設定するコマンドは<command>otrs.SetPermissions.pl
/opt/otrs --otrs-user=otrs
--web-user=otrs</command>。SUSEシステムにおいては、ウェブサーバが「wwwrun」のユーザー権限で作動しています。Debianベースのシステムにおいては、これが「www-data」です。適切なアクセス権限を設定するためにコマンド<command>otrs.SetPermissions.pl
/opt/otrs --otrs-user=otrs --web-user=wwwrun --otrs-group=nogroup
--web-group=www</command>を使います。
</para>

</section>

<section id="installation-of-perl-modules">
<title>Perlモジュールのインストレーション</title>

<para>
テーブル3-1に述べられているように、OTRSはいくつかの追加のパール・モジュールを必要とします。ソースからOTRSをインストールすれば、これらのモジュールを手動でインストールする必要があります。これは、Linuxディストリビューション(<application>yast</application>、<application>apt-get</application>)のパッケージ・マネージャーを、あるいはPerlシェルおよびCPANによって(このセクションに述べられていたように)やめることができます。ActiveState
Perlを使用していれば、例えば、ウィンドウズにおいては、PPM(内蔵のPerl・パッケージ・マネージャー)を使用するかもしれませんが、私たちはできればパッケージ・マネージャーを使用することを推奨します。
</para>

<para>
<command>otrs.CheckModules.pl</command>でどのモジュールをインストールする必要があるか確認することができます。このスクリプトは「otrs」ユーザのホームディレクトリーに、<filename>bin</filename>ディレクトリーに位置します(下記のスクリプトを参照)。いくつかのモジュールはオプションであることに注意してください。<screen>
linux:~# cd /opt/otrs/bin/
linux:/opt/otrs/bin# ./otrs.CheckModules.pl
   o CGI..............................ok (v3.60)
   o Crypt::PasswdMD5.................ok (v1.3)
   o Crypt::SSLeay....................Not installed! (Optional - Required for Generic Interface SOAP SSL connections.)
   o CSS::Minifier....................ok (v0.01)
   o Date::Format.....................ok (v2.22)
   o Date::Pcalc......................ok (v1.2)

   ...

</screen>
</para>

<para>
<emphasis>スクリプト：必要なモジュールのチェック</emphasis>
</para>

<para>
Linuxディストリビューションのパッケージ管理システムから不足しているモジュールをインストールするために努力するべきです。そうすることによって、新バージョンが利用可能な場合、あるいはセキュリティ問題が見つかった時、パッケージは自動的に更新されます。追加のパッケージをインストールする方法についての配布ドキュメンテーションを参照してください。（正しいバージョンの）モジュールがパッケージ・リポジトリから利用可能でない場合、CPAN、包括的なPerl・アーカイブ・ネットワークからもインストールすることができます。
</para>

<para>
上記のCPAN経由でモジュールのうちの1つをインストールするために、コマンド<command>perl -e shell
-MCPAN</command>を実行しなければなりません。Perlシェルは会話型の中で開始され、CPANモジュールがロードされます。CPANが既に構成されている場合、モジュールの名前に続いて、コマンド<command>install</command>でモジュールをインストールすることができます。CPANは、他のPerl・モジュールにモジュールの依存性に気を配り、他のモジュールが必要かどうかを知らせます。
</para>

<para>
    ディレクトリー<filename>/opt/otrs</filename>に変更後、コマンド<command>perl -cw
bin/cgi-bin/index.pl</command> <command>perl -cw
bin/cgi-bin/customer.pl</command> と <command>perl -cw
bin/otrs.PostMaster.pl</command>を実行もします。両方のコマンドの出力が "syntax
OK"ならばPerlは適切に設定されています。（以下のスクリプトを参照）。
</para>

<para>
<screen>
linux:~# cd /opt/otrs
linux:/opt/otrs# perl -cw bin/cgi-bin/index.pl
cgi-bin/installer.pl syntax OK
linux:/opt/otrs# perl -cw bin/cgi-bin/customer.pl
cgi-bin/customer.pl syntax OK
linux:/opt/otrs# perl -cw bin/otrs.PostMaster.pl
bin/otrs.PostMaster.pl syntax OK
linux:/opt/otrs#
</screen>
</para>
<para>
<emphasis>スクリプト：シンタックス・チェック</emphasis>
</para>

</section>

<section id="web-server-configuration">
<title>Apacheウェブサーバの構成</title>

<para>第一に、Apache2ウェブサーバおよびmod_perlをインストールするべきです;典型的にはシステム・パッケージ・マネージャーからこれをします。以下の、最も人気のあるLinuxディストリビューション上でApacheを設定するために必要なコマンドをご覧ください。
</para>

<para>
  <screen>

    # rhel / centos:
    linux:# yum install httpd mod_perl

    # suse:
    linux:# zypper install apache2-mod_perl

    # debian/ubuntu:
    linux:# apt-get install apache2 libapache-mod-perl2

  </screen>
</para>

<para>
短いURL、エイリアスおよびScriptAliasエントリー経由でOTRSのウェブ・インターフェースにアクセスすることは必要です。ほとんどの<application>Apache</application>インストレーションは<filename>conf.d</filename>ディレクトリを含みます。Linuxシステムにおいては、通常<filename>/etc/apache</filename>あるいは<filename>/etc/apache2</filename>の下にこのディレクトリーを見つけることができます。rootとしてログインして、<filename>conf.d</filename>ディレクトリーを変更して、アパッチ構成ディレクトリー中の<filename>otrs.conf</filename>と呼ばれるファイルに<filename>/opt/otrs/scripts/apache2-httpd.include.conf</filename>の中の適切なテンプレートをコピーしてください。
</para>

<para>
新しい構成設定をロードするためにウェブサーバを再起動してください。ほとんどのシステムにおいては、コマンド<command>/etc/init.d/apache2
restart</command> でウェブサーバを開始/再起動することができます(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:/etc/apache2/conf.d# /etc/init.d/apache2 restart
Forcing reload of web server: Apache2.
linux:/etc/apache2/conf.d#
</screen>
</para>

<para>
<emphasis>スクリプト：ウェブサーバの再起動</emphasis>
</para>

<para>
ここで、ウェブサーバはOTRS用に構成されるべきです。
</para>
</section>

<section id="database-configuration">
<title>データベースの構成</title>

<section id="manual-installation-of-database">
<title>OTRSデータベースのマニュアル・インストール</title>

<para>
データベースを構成する推奨方法は、<link linkend="web-installer">Web
Installer</link>を走らせることです。何らかの理由でこれを使用することができなければ、本章に述べられているように、データベースを手動で構成することもできます。OTRSデータベースをセットアップするためのウェブ・インストーラーを使用することができない場合、それを手動でセット・アップしなければなりません。データベースを作成し構成するSQLステートメントを備えたスクリプトは「otrs」ユーザのホームディレクトリーに、<filename>scripts/database</filename>に位置します(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:~# cd /opt/otrs/scripts/database/
linux:/opt/otrs/scripts/database# ls
otrs-initial_insert.db2.sql         otrs-schema.mysql.sql
otrs-schema.oracle.sql
otrs-initial_insert.mssql.sql       otrs-schema-post.db2.sql
otrs-initial_insert.mysql.sql       otrs-schema.postgresql.sql
otrs-initial_insert.oracle.sql
otrs-initial_insert.postgresql.sql  otrs-schema-post.mssql.sql
otrs-initial_insert.xml             otrs-schema-post.mysql.sql
otrs-schema.db2.sql                 otrs-schema-post.oracle.sql
 otrs-schema-post.postgresql.sql
otrs-schema.mssql.sql               otrs-schema.xml
linux:/opt/otrs/scripts/database#
</screen>
</para>

<para>
<emphasis>スクリプト：データベースを作成し構成するために必要なファイル</emphasis>
</para>

<para>
異なるデータベースバックエンド用にデータベースをセットアップするために、.sqlファイルは特殊な順番で処理されなければなりません。
</para>

<para>
<orderedlist numeration="arabic">
<title>OTRSデータベースを手動でステップバイステプで作成します</title>
<listitem>
<para>
DBの作成:データベース・クライアントあるいはデータベース・インターフェースで、OTRSのために使用したいデータベースを作成してください。
</para>
</listitem>
<listitem>
<para>
テーブルの作成:
otrs-schema.DatabaseType.sqlファイル(例えば<filename>otrs-schema.oracle.sql</filename>,
<filename>otrs-schema.postgresql.sql</filename>)で、OTRSデータベースにテーブルを作成することができます。
</para>
</listitem>
<listitem>
<para>
初回のシステムデータの挿入:
OTRSは、適切に稼働するためにある初回のシステムデータ（例えば異なるチケット状態、チケットとその通知タイプ)を必要とします。使用しているデータベースのタイプによって、次のファイルのうちの1つを使用する必要があります:<filename>otrs-initial_insert.mysql.sql</filename>,
<filename>otrs-initial_insert.oracle.sql</filename>,
<filename>otrs-initial_insert.postgresql.sql</filename> あるいは
<filename>otrs-initial_insert.mssql.sql </filename>。
</para>
</listitem>
<listitem>
<para>
テーブル間の参照の作成:
最後のステップは、OTRSデータベースに異なるテーブル間の参照を作成することです。これらを作成するためにotrs-schema-post.DatabaseType.sql
ファイルを使用します。(例えば.  <filename>otrs-schema-oracle.post.sql</filename>,
<filename>otrs-schema-post.postgresql.sql</filename>)。
</para>
</listitem>
</orderedlist>
</para>

<para>
データベース・セットアップを終了後、OTRSデータベース用の適切なアクセス権をチェックし設定するべきです。1人のユーザにアクセスを許可することで十分です。使用しているデータベース・サーバによって、アクセス権の設定は異なります。しかし、それは、データベース・クライアントあるいはグラフィカルなデータベースのフロントエンドのいずれかで可能であるべきです。
</para>

<para>
データベースとアクセス権が適切に構成される場合、どのデータベース・バックエンドを使用したいか、また、チケット・システムがどのようにデータベースに接続することができるかOTRSに伝えなければなりません。「otrs」ユーザのホームディレクトリにあるファイル<filename>Kernel/Config.pm</filename>を開き、必要に応じてスクリプトの中で下に示されるパラメーターを変更してください。
</para>

<para>
<programlisting>

    # DatabaseHost
    # (データベースホスト.)
    $Self->{'DatabaseHost'} = 'localhost';

    # Database
    # (データベース名.)
    $Self->{Database} = 'otrs';

    # DatabaseUser
    # (データベースユーザ.)
    $Self->{DatabaseUser} = 'otrs';

    # DatabasePw
    # (データベースユーザのパスワード.)
    $Self->{DatabasePw} = 'some-pass';

</programlisting>
</para>

<para>
<emphasis>スクリプト：カスタマイズ用パラメタ</emphasis>
</para>

</section>

</section>

<section id="cronjobs">
<title>OTRS用cronジョブのセットアップ</title>

<para>
OTRSは、適切に稼働するいくつかのcronジョブを必要とします。cronジョブは、OTRSモジュール用に指定されたのと同じユーザー権利で実行されるべきです。それは、cronジョブが「otrs」ユーザのcrontabファイルに挿入されなければならないことを意味します。
</para>

<para>
cronジョブを備えたスクリプトはすべて「otrs」ユーザのホームディレクトリーに、<filename>var/cron</filename>にあります(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:~# cd /opt/otrs/var/cron
linux:/opt/otrs/var/cron# ls
aaa_base.dist                generic_agent.dist       rebuild_ticket_index.dist
cache.dist                   pending_jobs.dist        session.dist
fetchmail.dist               postmaster.dist          unlock.dist
generic_agent-database.dist  postmaster_mailbox.dist
linux:/opt/otrs/var/cron#
</screen>
</para>

<para>
<emphasis>スクリプト：cronジョブを作成する必要のあるファイル</emphasis>
</para>

<para>
これらのスクリプトには「．dist」の接尾辞があります。接尾辞を削除して、ファイルにそれらをコピーするべきです。bashを使用すれば、以下のスクリプトにリストされたコマンドを使用したいと思うかもしれません。
</para>

<para>
<screen>
linux:/opt/otrs/var/cron# for foo in *.dist; do cp $foo `basename $foo .dist`; done
linux:/opt/otrs/var/cron# ls
aaa_base                generic_agent-database.dist  rebuild_ticket_index
aaa_base.dist           generic_agent.dist           rebuild_ticket_index.dist
cache                   pending_jobs                 session
cache.dist              pending_jobs.dist            session.dist
fetchmail               postmaster                   unlock
fetchmail.dist          postmaster.dist              unlock.dist
generic_agent           postmaster_mailbox
generic_agent-database  postmaster_mailbox.dist
linux:/opt/otrs/var/cron#
</screen>
</para>

<para>
<emphasis>スクリプト：cronジョブを作成する必要のある全てのファイルをコピーして改名する</emphasis>
</para>

<para>
テーブル 3-2 は異なるcronジョブを記述しています。
</para>

<para>
<table id="table-of-cronjobs-for-otrs">
<title>いくつかのcronジョブ・スクリプトの記述</title>
  <tgroup cols="2">
    <thead>
      <row>
        <entry>
          Script
        </entry>
        <entry>
          Function
        </entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>
          aaa_base
        </entry>
        <entry>
          「otrs」ユーザのcrontab用基本を設定します。
        </entry>
      </row>
      <row>
        <entry>
          cache
        </entry>
        <entry>
          ディスクから失効したキャッシュを削除します。CCS及びJavaScript用ローダー・キャッシュをクリアします
        </entry>
      </row>
      <row>
        <entry>
          fetchmail
        </entry>
        <entry>
          新しいメールがチケット・システムの中へのfetchmailで取って来られる場合のみ使用されます。
        </entry>
      </row>
      <row>
        <entry>
          generic_agent
        </entry>
        <entry>
          データベースに格納されず、自身のconfigファイルにあるGenericAgentのジョブを実行します。
        </entry>
      </row>
      <row>
        <entry>
          generic_agent-database
        </entry>
        <entry>
          データベースに格納されるGenericAgentのジョブを実行します。
        </entry>
      </row>
      <row>
        <entry>
          pending_jobs
        </entry>
        <entry>
          保留チケット用システムをチェックし、それらを完了します。あるいは必要ならばリマインダを送信します。
        </entry>
      </row>
      <row>
        <entry>
          postmaster
        </entry>
        <entry>
          チケット・システムのメッセージ・キューをチェックし、キューにまだあるメッセージを配布します。
        </entry>
      </row>
      <row>
        <entry>
          postmaster_mailbox
        </entry>
        <entry>
          「PostMasterメールアカウント」用セクションの管理者エリアで指定されたPOP3アカウントからメールを取ってきます。
        </entry>
      </row>
      <row>
        <entry>
          rebuild_ticket_index
        </entry>
        <entry>
          キュー・ビューの速度を改善するチケット・インデックスを再構築します。
        </entry>
      </row>
      <row>
        <entry>
          session
        </entry>
        <entry>
          古くもう必要のないセクションIDを削除します。
        </entry>
      </row>
      <row>
        <entry>
          unlock
        </entry>
        <entry>
          システムのチケットをアンロック
        </entry>
      </row>
    </tbody>
  </tgroup>
</table>
</para>

<para>
セットアップに、すべてのcronジョブ、「otrs」ユーザのホームディレクトリーにあるスクリプト<filename>bin/Cron.sh</filename>は使用することができます。このスクリプトを実行する場合、cronジョブをインストールするか、削除するか、再インストールするかどうかを明示するためにパラメーターを必要とします。次のパラメーターを使用することができます:
</para>

<para>
<cmdsynopsis>
<command>Cron.sh</command> <arg choice='req'>
<replaceable>start</replaceable> </arg> <arg choice='req'>
<replaceable>stop</replaceable> </arg> <arg choice='req'>
<replaceable>restart</replaceable> </arg> <arg choice='opt'>
<replaceable>OTRS user</replaceable> </arg></cmdsynopsis>
</para>

<para>
cronジョブは「otrs」ユーザのcrontabファイルにインストールする必要があるので、「otrs」としてログインする必要があります。rootとしてログインする場合は、<command>su
otrs</command>で「otrs」に変わることができます。cronジョブをインストールするために下記スクリプト中で指定されたコマンドを実行してください。
</para>

<warning>
<para>
「otrs」ユーザの他のcrontabエントリーが<filename>Cron.sh</filename>スクリプトによって上書きされるか削除されるだろうことに注意してください。必要な他のcrontabエントリーを保持するために<filename>Cron.sh</filename>スクリプトを変更してください。
</para>
</warning>

<para>
<screen>
linux:/opt/otrs/var/cron# cd /opt/otrs/bin/
linux:/opt/otrs/bin# su otrs
linux:~/bin$ ./Cron.sh start
/opt/otrs/bin
Cron.sh - start/stop OTRS cronjobs
Copyright (C) 2001-2009 OTRS AG, http://otrs.org/
(using /opt/otrs) done
linux:~/bin$ exit
exit
linux:/opt/otrs/bin#
</screen>
</para>

<para>
<emphasis>スクリプト：cronジョブのインストール</emphasis>
</para>

<para>
rootとして実行可能なコマンド<command>crontab -l -u
otrs</command>は、「otrs」ユーザのcrontabファイルを示します。また、全てのエントリーが正確に置かれるかどうかをチェックすることができます(下記のスクリプトを参照)。
</para>

<para>
<screen>
linux:/opt/otrs/bin# crontab -l -u otrs
# --
# cron/aaa_base - base crontab package
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# Who gets the cron emails?
MAILTO="root@localhost"

# --
# cron/cache - delete expired cache
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# delete expired cache weekly (Sunday mornings)
20 0 * * 0  $HOME/bin/otrs.CacheDelete.pl --expired >> /dev/null
30 0 * * 0  $HOME/bin/otrs.LoaderCache.pl -o delete >> /dev/null

# --
# cron/fetchmail - fetchmail cron of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# fetch every 5 minutes emails via fetchmail
#*/5 * * * * /usr/bin/fetchmail -a &gt;&gt; /dev/null

# --
# cron/generic_agent - otrs.GenericAgent.pl cron of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# start generic agent every 20 minutes
*/20 * * * * $HOME/bin/GenericAgent.pl &gt;&gt; /dev/null
# example to execute GenericAgent.pl on 23:00 with
# Kernel::Config::GenericAgentMove job file
#0 23 * * * $HOME/bin/otrs.GenericAgent.pl -c "Kernel::Config::GenericAgentMove" &gt;&gt; /dev/null
# --
# cron/generic_agent - GenericAgent.pl cron of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# start generic agent every 10 minutes
*/10 * * * * $HOME/bin/otrs.GenericAgent.pl -c db &gt;&gt; /dev/null
# --
# cron/pending_jobs - pending_jobs cron of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# check every 120 min the pending jobs
45 */2 * * * $HOME/bin/otrs.PendingJobs.pl &gt;&gt; /dev/null
# --
# cron/postmaster - postmaster cron of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# check daily the spool directory of OTRS
10 0 * * *  $HOME/bin/otrs.ReprocessMails.pl >> /dev/null
# --
# cron/postmaster_mailbox - postmaster_mailbox cron of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# fetch emails every 10 minutes
*/10 * * * * $HOME/bin/otrs.PostMasterMailbox.pl &gt;&gt; /dev/null
# --
# cron/rebuild_ticket_index - rebuild ticket index for OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# just every day
01 01 * * * $HOME/bin/otrs.RebuildTicketIndex.pl &gt;&gt; /dev/null

# --
# cron/session - delete old session ids of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# delete every 120 minutes old/idle session ids
55 */2 * * * $HOME/bin/otrs.DeleteSessionIDs.pl --expired &gt;&gt; /dev/null

# --
# cron/unlock - unlock old locked ticket of the OTRS
# Copyright (C) 2001-2014 OTRS AG, http://otrs.com/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# unlock every hour old locked tickets
35 * * * * $HOME/bin/otrs.UnlockTickets.pl --timeout &gt;&gt; /dev/null

linux:/opt/otrs/bin#
</screen>
</para>

<para>
<emphasis>スクリプト：Cronタブ・ファイル</emphasis>
</para>

</section>
<section id="installation-scheduler">

    <title>OTRSスケジューラ・サービス</title>
    <para>
        OTRSには、非同期タスクを行なうために利用されるスケジューラ・サービスが付属しています。
    </para>
    <para>
        OTRS
RPMはスケジューラ・サービスを自動的にセット・アップします。ソースからインストールすれば、<filename>/etc/init.d</filename>に<filename>scripts/otrs-scheduler-linux</filename>ファイルをコピーしそれに適切なアクセス許可を与えることにより、サービスをインストールすることができます。これで、システム開始時には必ずスケジューラ・サービスが開始するようになります。
    </para>
</section>

</section>
