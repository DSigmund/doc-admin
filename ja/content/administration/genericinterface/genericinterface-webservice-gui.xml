<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="webservice_gui">
    <title>ウェブサービス・グラフィカル・インターフェース</title>
    <para>
        ウェブサービスGUI(GUI)は、ユーザー・フレンドリーで便利なインターフェースで複雑なウェブサービス構成を構築することを可能にするツールです。それは次のものに許可します:
    </para>
    <para>
        <itemizedlist>
            <listitem>
                <para>
                    ウェブサービスを作成および削除します。
                </para>
            </listitem>
            <listitem>
                <para>
                    既存のウェブサービスのためのエクスポート/インポート構成(YAMLファイルフォーマット中の)。
                </para>
            </listitem>
            <listitem>
                <para>
                    ビュー、ウェブサービスで既存のウェブサービス用の復旧と旧構成のエクスポート
                </para>
            </listitem>
            <listitem>
                <para>
                    デバッガ画面中の各ウェブサービスのすべてのコミュニケーション・ログを追跡してください。
                </para>
            </listitem>
        </itemizedlist>
    </para>

    <section id="webservice_gui_overview">
        <title>ウェブサービス概要</title>
        <para>
            The <emphasis>Web Services</emphasis> link in the main screen of Admin
Interface (in the System Administration box) leads to the web services
overview screen, where you are able to manage your web service
configurations. You can add new web services or change the configuration of
the existing ones from this screen.
        </para>
        <para>
            Every web service configuration screen has in the upper part of the screen a
<emphasis>bread crumbs</emphasis> style navigation path. This navigation
path is useful to know exactly in which part of the web service
configuration we are, and also enables the user to jump back to any part of
the configuration process at any time (this action will not save any
changes).
        </para>
        <note>
            <para>
                To create a new web service, press the button <emphasis>Add web
service</emphasis>, and provide the required information.
            </para>
        </note>
        <para>
            <figure>
                <title>Web services overview</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-overview.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
        </para>
    </section>

    <section id="webservice_gui_add">
        <title>ウェブサービスの追加</title>
        <para>
            The only required field in this part is the web service
<emphasis>Name</emphasis> that needs to be unique in the system and can not
be left empty. Other fields are also necessary for the configuration like
the <emphasis>Debug Threshold</emphasis> and <emphasis>Validity</emphasis>
but these fields are already populated with the default value for each list.
        </para>
        <para>
            The default value for <emphasis>Debug Threshold</emphasis> is
<emphasis>debug</emphasis>. When configured in this manner all communication
logs are registered in the database. Each subsequent <emphasis>Debug
Threshold</emphasis> value is more restrictive and discards communication
logs of lower order than the one set in the system.
        </para>
        <para>
            <itemizedlist>
                <title>デバッグ閾値レベル（下から上へ）</title>
                <listitem>
                    <para>
                        Debug
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Info
                    </para>
                </listitem>
                <listitem>
                    <para>
                        通知
                    </para>
                </listitem>
                <listitem>
                    <para>
                        Error
                    </para>
                </listitem>
            </itemizedlist>
        </para>
        <para>
            It is also possible to define the network transport protocol for
<emphasis>OTRS as Provider</emphasis> and <emphasis>OTRS as
requester</emphasis>.
        </para>
        <para>
            Click on the <emphasis>Save</emphasis> button to register the new web
service in the database or click <emphasis>Cancel</emphasis> to discard this
operation. You will now be returned to the web service overview screen.
        </para>
        <para>
            If you already have a web service configuration file in YAML format you can
click on the <emphasis>Import web service</emphasis> button on the left side
of the screen. For more information on importing web services please check
the next section <emphasis>Web Service Change</emphasis>.
        </para>
        <note>
            <para>
                ウェブサービスに、より多くの詳細を変更・追加するためには、ウェブサービス概要画面中のウェブサービス名をクリックしてください。
            </para>
        </note>
        <para>
            <figure>
                <title>Web services add</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-add.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
        </para>
    </section>

    <section id="webservice_gui_examples">
        <title>Web Service Example Import</title>
        <para>
            Did you know there are example web services available in the <ulink
url="http://otrs.github.io/doc/manual/otrs-business-solution/stable/en/html/import-example-web-service.html">OTRS
Business Solution™</ulink>?
        </para>
    </section>

    <section id="webservice_gui_change">
        <title>ウェブサービス変更</title>
        <para>
            この画面においては、ウェブサービスのすべての部分を扱う機能の完全セットを持っています。アクション・カラムの左側に　いくつかのボタンがあります。それによりウェブサービス上で全ての可能なアクションを実行できます。
        </para>
        <para>
        <itemizedlist>
            <listitem>
                <para>
                    Clone web service.(クローン・ウェブサービス)
                </para>
            </listitem>
            <listitem>
                <para>
                    Export web service.(エクスポート・ウェブサービス)
                </para>
            </listitem>
            <listitem>
                <para>
                    Import web service.(インポート・ウェブサービス)
                </para>
            </listitem>
            <listitem>
                <para>
                    Configuration History.(構成履歴)
                </para>
            </listitem>
            <listitem>
                <para>
                    Delete web service.(ウェブサービスの削除)
                </para>
            </listitem>
            <listitem>
                <para>
                    Debugger.(デバッガ)
                </para>
            </listitem>
        </itemizedlist>
        </para>
        <note>
            <para>
                <emphasis>Configuration history</emphasis> and <emphasis>Debugger</emphasis>
will lead you to different screens.
            </para>
        </note>

        <section id="webservice-clone">
            <title>ウェブサービスのクローン</title>
            <para>
                To clone a web service, you need to click on the <emphasis>Clone web
service</emphasis> button. A dialog will be shown where you can use the
default name or set a new name for the (cloned) web service.
            </para>
            <note>
                <para>
                    <emphasis>Remember</emphasis> that the name of the web service must be
unique within the system.
                </para>
            </note>
            <para>Click on <emphasis>Clone</emphasis> button to create the web service clone
or <emphasis>Cancel</emphasis> to close the dialog.</para>
            <para>
                <figure>
                    <title>ウェブサービス・クローン</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-clone.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-export">
            <title>ウェブサービスのエクスポート</title>
            <para>
                The <emphasis>Export web service</emphasis> button gives you the opportunity
to dump the configuration of the current web service into a YAML file, to
download it and to store it on your file system. This can be specially
useful if you want to migrate the web service from one server to another,
for example from a testing environment to a production system.
            </para>
            <warning>
                <para>
                    ウェブサービス構成中の格納されたパスワードはすべて、プレインテキスト・フォーマットでエクスポートされます。
                </para>
            </warning>
            <para>
                Right after clicking the <emphasis>Export web service</emphasis> button a
save dialog of your browser will appear, just like when you click on a file
download link on a web page.
            </para>
            <note>
                <para>
                    各オペレーティング・システム上のブラウザにはそれぞれそれ自身の保存ダイアログ画面およびスタイルがあります。ブラウザとその構成によってはダイアログが示されないことはありえます。また、ファイルはデフォルト・ディレクトリにあなたのファイルシステム上に保存されます。必要な場合はより特殊な指示があるかブラウザ・ドキュメンテーションをチェックしてください。
                </para>
            </note>
            <para>
                <figure>
                    <title>Web services export</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-export.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-import">
            <title>ウェブサービスのインポート</title>
            <para>
                A valid web service configuration YAML file is required to use the import
web service feature. Click on the <emphasis>Import web service</emphasis>
button, browse for the configuration file or provide the complete path in
the input box.
            </para>
            <para>
                Click <emphasis>Import</emphasis> button to create a new web service from a
file or "Cancel" to close the dialog.
            </para>
            <note>
                <para>
                    The web service name will be taken from the configuration file name (e.g. if
the file name is <filename>MyWebservice.yml</filename> the resulting web
service will be named <emphasis>MyWebservice</emphasis>). If a web service
is registered in the system with the same name as the web service that you
want to import, the system will lead you to the web service change screen to
let you change the name of the imported web service.
                </para>
            </note>
            <para>
                <figure>
                    <title>Web services import</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-import.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-history">
            <title>ウェブサービス履歴</title>
            <para>
                Every change to the web service configuration creates a new entry in the web
service history (as a journal). The web service history screen displays a
list of all configuration versions for a web service. Each row (version) in
the <emphasis>Configuration History List</emphasis> represents a single
revision in the web service history.
            </para>
            <para>
                Click on one of the rows to show the whole configuration as it was on that
particular date / time. The configuration will be shown in the
<emphasis>History details</emphasis> section of this screen. Here you are
also able to export the selected web service configuration version or to
restore that version into the current web service configuration.
            </para>
            <para>
                The <emphasis>Export web service configuration</emphasis> behaves exactly as
the "Export web service" feature in the web service change screen. For more
information refer to that section.
            </para>
            <para>
                If changes to the current web service configuration do not work as expected
and it is not easy to revert the changes manually, you can click on the
<emphasis>Revert web service configuration</emphasis> button. This will open
a dialog to ask you if you are sure to revert the web service
configuration. Click <emphasis>Revert web service configuration</emphasis>
in this dialog to replace the current configuration with the selected
version, or click <emphasis>Cancel</emphasis> to close the dialog.
            </para>
            <warning>
                <para>
                    ウェブサービス構成に格納されたどんなパスワードもプレインテキスト・フォーマットでエクスポートされるだろうということを覚えておいてください。
                </para>
                <para>
                    Please be careful when you restore a configuration because this process is
irreversible.
                </para>
            </warning>
            <para>
                <figure>
                    <title>Web service history</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-history.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-delete">
            <title>ウェブサービスの削除</title>
            <para>
                Sometimes it is necessary to delete a web service completely.  To do this
you can press on the <emphasis>Delete web service</emphasis> button and a
new dialog will appear asking for confirmation.
            </para>
            <para>
                Click on <emphasis>Delete</emphasis> to confirm the removal of the web
service or on <emphasis>Cancel</emphasis> to close the dialog.
            </para>
            <warning>
                <para>
                    ウェブサービスの削除はやり直しがききません。ウェブサービスを削除する場合、注意してください。
                </para>
             </warning>
            <para>
                <figure>
                    <title>ウェブサービスの削除</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-delete.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-debugger">
            <title>ウェブサービス・デバッガ</title>
            <para>
                デバッガは、ウェブサービスのログを格納します。デバッガ画面では、供給者あるいは依頼者タイプのいずれかのためのウェブサービス・コミュニケーションをすべて追跡することができます。
            </para>
            <para>
                この画面が示される場合、依頼リストがロードし始めます。リストが完全に満たされた後、その詳細をチェックするために列のうちの1つを選ぶことができます。(列とはコミュニケーション・シーケンスを意味します)これは詳述します、下のボックスに現われます。
            </para>
            <para>
                画面の右側ではフィルタを使用して、コミュニケーション・リストを狭くすることができます。次のものによってフィルタすることができます：
            </para>
            <itemizedlist>
                <listitem>
                    <para>
                        コミュニケーション・タイプ(供給者または依頼者)
                    </para>
                </listitem>
                <listitem>
                    <para>
                        日付:前、及び/または特定の日付の後
                    </para>
                </listitem>
                <listitem>
                    <para>
                        リモートのIPアドレス
                    </para>
                </listitem>
                <listitem>
                    <para>
                        すべての組み合わせ
                    </para>
                </listitem>
            </itemizedlist>
            <para>
                After filter settings are set, push the <emphasis>Refresh</emphasis> button
and a new list will be displayed meeting your search criteria.
            </para>
            <note>
                <para>
                    フィルターの検索基準に依存しますが、新規リストが結果を返さないこともあり得ます。
                </para>
            </note>
            <para>
                On the left part of the screen under the action column you can select
<emphasis>Go back to the web service</emphasis> or clear the debugger log by
pushing the <emphasis>Clear</emphasis> button.  This will open a dialog that
ask you to confirm erasing of the log. Click <emphasis>Clear</emphasis> in
the dialog button to perform the action or click on
<emphasis>Cancel</emphasis> to close this dialog.
            </para>
            <para>
                In the <emphasis>Request details</emphasis> section you can see all the
details for the selected communication. Here you can track the complete flow
and check for possible errors or confirm success responses.
            </para>
            <para>
                <figure>
                    <title>Web service debugger</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-debugger.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
        </section>

        <section id="webservice-configuration-change">
            <title>ウェブサービス構成変更</title>
            <para>
                Returning to the web service change screen, now we are going to review the
right side of it. Here we have the possibility to modify all the general
data for a web service such as name, description, debug threshold, etc. Also
there are two more sections below that allows us to modify specific
parameters for communication types <emphasis>OTRS as Provider</emphasis> and
<emphasis>OTRS as Requester</emphasis>.
            </para>
            <para>
                ウェブサービス構成は各レベル上に保存する必要があります。このことは設定が変われば、現在の構成レベルを保存してしまうことで、他へのリンクや構成の深い部分が無効にしてしまうことを意味します。保存後に、無効となったリンクは　再び構成を継続することを可能にすることで、再度可能にできます。
            </para>
            <para>
                On the <emphasis>OTRS as provider</emphasis> section it is possible to set
or configure the network transport protocol. Only network transport
back-ends that are registered are shown on the list. To configure the
network transport click on the <emphasis>Configure</emphasis> button.  It is
also possible to add new operations in this box. To do this select one of
the available operations from the <emphasis>Add Operation</emphasis>
list. This will lead you to the operation configuration screen. After saving
the new operation it will be listed in the table above.
            </para>
            <para>
                <emphasis>OTRS as requester</emphasis> is very similar to the previous one,
but instead of <emphasis>operations</emphasis> you can add invokers here.
            </para>
            <para>
                Click the <emphasis>Save</emphasis> button to save and continue configuring
the web service, <emphasis>Save and finish</emphasis> to save and return to
the web service overview screen, or <emphasis>Cancel</emphasis> to discard
current configuration level changes and return to web service overview
screen.
            </para>
            <para>
                <figure>
                    <title>Web services change</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-change.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
            </para>
            <note>
                <para>
                    Like the other Generic Interface configuration screens such as Network
Transport, Operation, Invoker and Mapping, the initial configuration (add)
screen will only present two options: <emphasis>Save</emphasis> and
<emphasis>Cancel</emphasis>. If the configuration is re-visited, a new
option <emphasis>Save and Finish</emphasis> will appear.  The behavior of
this feature is defined below.
                </para>
                <para>
                    <emphasis>Save</emphasis> will store the current configuration level in the
database and it will return to the previous screen to review your changes or
to configure deeper settings.
                </para>
                <para>
                    <emphasis>Save and Finish</emphasis> will store the current configuration
level in the database and it will return to the previous screen in the
configuration hierarchy (to the immediate upper configuration level).
                </para>
                <para>
                    <emphasis>Cancel</emphasis> will discard any configuration change to the
current configuration level and will return to the previous screen in the
configuration hierarchy.
                </para>
            </note>

            <section id="webservice-provider-network-transport">
                <title>ウェブサービス供給者のネットワーク・トランスポート</title>
                <para>
                    In future the list of available network transports will be
increased. Currently only <emphasis>HTTP::SOAP</emphasis> and
<emphasis>HTTP::REST</emphasis> transports are available. Each transport has
different configuration options to setup and they might use different
frontend modules to configure them.
                </para>
                <para>
                    It is quite simple to configure the <emphasis>HTTP::SOAP</emphasis> protocol
as provider.  There are only two settings: <emphasis>Namespace</emphasis>
and <emphasis>Maximum message length</emphasis>. These fields are
required. The first one is a URI to give SOAP methods a context, reducing
ambiguities, and the second one is a field where you can specify the maximum
size (in bytes) for SOAP messages that OTRS will process.
                </para>
                <para>
                    <figure>
                        <title>Web service provider network transport (HTTP::SOAP)</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-soap.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
                <para>
                    Optionally, you may want to define additional response headers. These may be
used to add static header values to every response. Just click on Add
response header and fill both key and value fields. There is no limit in
number of additional header lines.
                </para>
                <para>
                    For <emphasis>HTTP::REST</emphasis> the configuration might be a bit more
complicated, as it grows dynamically for each configured operation by
adding: <emphasis>Route mapping for Operation
'&lt;OperationName&gt;':</emphasis> and <emphasis>Valid request methods for
Operation '&lt;OperationName&gt;':</emphasis> settings to the default
transport settings <emphasis>Maximum message length:</emphasis> and
<emphasis>Send Keep-Alive:</emphasis>
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Route mapping for Operation '&lt;OperationName&gt;':</para>
                        <para>
                            In this setting a resource path is set. This path must be defined according
to the needs of the web service considering that the path in conjunction
with the HTTP request method determines the Generic Interface operation to
be executed.
                        </para>
                        <para>
                            Path can contain variables in the form of ':&lt;VariableName&gt;' each path
string that fits on the position of the variable name will be added to the
request payload using the variable name defined in this setting.
                        </para>
                        <para>
                            サンプル:
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                Route mapping: /Resource
                            </para>
                            <listitem>
                                <para>Valid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                            <listitem>
                                <para>Invalid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                Route mapping: /Resource/:ID
                            </para>
                            <listitem>
                                <para>Valid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1?Param1=One
                                </para>
                                <para>
                                    In both cases ID = 1 will be sent to the operation as part of the
payload. In the second case also Param1 = One will be added, depending on
the HTTP request method other parameters will be added if they come as a
JSON string in the request header.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Invalid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource?Param1=One
                                </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                Route mapping: /Resource/OtherResource/:ID/:Color
                            </para>
                            <listitem>
                                <para>Valid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1/Red
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherReosurce/123/Blue?Param1=One
                                </para>
                                <para>
                                    In the first example ID = 1 and Color = Red, while in the second ID = 123
and Color = Blue.
                                </para>
                            </listitem>
                            <listitem>
                                <para>Invalid requests:</para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1
                                </para>
                                <para>
                                    http://localhost/otrs/nph-genericinterface.pl/Webservice/Test/Resource/OtherResource/1?Param1=One
                                </para>
                                <para>
                                    In the first example the part of the path '/OtherResource' is missing as
well as the :Color variable, on the second example just :Color variable is
missing.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Valid request methods for Operation '&lt;OperationName&gt;':</para>
                        <para>
                            The HTTP request methods to determine the operation to use together with the
route mapping, possible options: CONNECT, DELETE, GET, HEAD, OPTIONS, PATCH,
POST, PUT and TRACE.
                        </para>
                        <para>
                            Totally different operations can share exactly the same mapping path, but
the request method must be unique for each operation, in order to determine
correctly the operation to use on each request.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>Web service provider network transport (HTTP::REST)</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-provider-transport-rest.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-operation">
                <title>ウェブサービス・オペレーション</title>
                <para>
                    The actions that can be performed when you are using OTRS as a provider are
called <emphasis>Operations</emphasis>. Each operation belongs to a
controller. Controllers are collections of operations or invokers, normally
operations from the same controller need similar settings and share the same
configuration dialog. But each operation can have independent configuration
dialogs if needed.
                </para>
                <para>
                    <emphasis>Name</emphasis>, <emphasis>Description</emphasis>,
<emphasis>Backend</emphasis> and <emphasis>Mappings</emphasis> are fields
that normally appear on every operation, other special fields can appear in
non default configuration dialogs to fulfill specific needs of the
operation.
                </para>
                <para>
                    通常は、各オペレーションに2つのマッピングする構成セクションがあります。一つは入信データ、もう一つは発信データです。各マッピング指示のために異なるマッピングするタイプ(バックエンド)を選ぶことができます。なぜなら、それらの構成が互いから独立して、さらにオペレーション・バックエンドから独立しているからです。正常で、最も一般的な実行は、両方のケースに（逆の構成を持つ）同じマッピングタイプを使うオペレーションです。完全なマッピング構成は、マッピングタイプに依存して個別の画面の中で行われます。
                </para>
                <para>
                    オペレーション・バックエンドは事前に投入されており編集可能ではありません。ウェブサービス編集画面に対するオペレーションを選択する時、このパラメタを見るでしょう。フィールドは参考に過ぎません。
                </para>
                <para>
                    In the left part of the screen on the action column you have the options:
<emphasis>Go back to web service</emphasis> (discarding all changes since
the last save) and <emphasis>Delete</emphasis>.  If you click on the last
one, a dialog will open and ask you if you like to remove the
operation. Click on <emphasis>Delete</emphasis> button to confirm the
removal of the operation and its configuration or
<emphasis>Cancel</emphasis> to close the delete dialog.
                </para>
                <para>
                    <figure>
                        <title>Web service operation</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-operation.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-requester-transport">
                <title>ウェブサービス依頼者ネットワーク・トランスポート</title>
                <para>
                    The network transport configuration for the requester is similar to the
configuration for the provider. For the Requester
<emphasis>HTTP::SOAP</emphasis> network transport there are more fields to
be set.
                </para>
                <para>
                    Apart from the <emphasis>Endpoint</emphasis> (URI of the Remote System web
service interface to accept requests) and <emphasis>Namespace</emphasis>
which are required fields, you can also specify:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            SOAPメッセージのための符号化(utf-8, latin1, iso-8859-1, cp1250など)
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            SOAPAction Header: you can use this to send an empty or filled SOAPAction
header. Set to <emphasis>No</emphasis> and the SOAPAction header on the SOAP
message will be an empty string, or set to <emphasis>Yes</emphasis> to send
the SOAP action in Namespace#Action format and define the separator
(typically "/" for .Net web services and "#" for the REST).
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            認証:
認証機構をセットするためには、いかなる認証も使わないか、またはリストからひとつを選択するために、「-」をセットします。そうすればフィールド詳細が現れるでしょう。
                        </para>
                    </listitem>
                </itemizedlist>
                <note>
                    <para>
                        Currently only the <emphasis>BasicAuth</emphasis> (HTTP) authentication
mechanism is implemented. You can decide whether or not to use it depending
on the Remote System configuration. If used, you must provide the User Name
and the Password to access the remote system.
                    </para>
                </note>
                <warning>
                    <para>
                        認証用パスワードを供給しそのあとでYAMLファイルをウェブサービスへエクスポートするならば、このパスワードは暴露され、TYAMLファイルの内部のプレインテキスト文字列に書き込まれるでしょう。必要に応じて予防措置を講じてください。
                    </para>
                </warning>
                <para>
                    <figure>
                        <title>Web service requester network transport (HTTP::SOAP)</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-soap.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
                <para>
                    In the case of HTTP::REST, this configuration also grows dynamically
depending on the configured invokers by adding <emphasis>Controller mapping
for Invoker '&lt;InvokerName&gt;':</emphasis> and <emphasis>Valid request
command for Invoker '&lt;InvokerName&gt;':</emphasis> for each
invoke. Authentication and SSL options are similar to the ones in HTTP::SOAP
                </para>
                <itemizedlist mark="round">
                    <listitem>
                        <para>ホスト</para>
                        <para>
                            The host name or IP Address and port of the remote system, if no port is
specified, port 80 is used by default.
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Controller mapping for Invoker '&lt;InvokerName&gt;':</para>
                        <para>
                            In this setting a resource path is set. This path must be defined according
to the needs of the remote web service and following its definition.
                        </para>
                        <para>
                            Path can contain variables in the form of ':&lt;VariableName&gt;' for each
variable name that matches the current data (to be sent), will be replaced
by the corresponding data value. This matched variable names and values will
be removed from the current data. Depending on the HTTP request command the
remaining data could be sent as a JSON string in the request body or as
query parameters within the URI.
                        </para>
                        <para>
                            サンプル:
                        </para>
                        <para>
                            For data: Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four.
                        </para>
                        <itemizedlist mark="round">
                            <para>
                                Controller mapping: /Resource
                            </para>
                            <listitem>
                                <para>After Replacements:</para>
                                <para>/Resource</para>
                            </listitem>
                            <listitem>
                                <para>Remaining Data:</para>
                                <para> Var1 = One, Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist mark="round">
                            <para>
                                Controller mapping: /Resource/:Var1
                            </para>
                            <listitem>
                                <para>After Replacements:</para>
                                <para>/Resource/One</para>
                            </listitem>
                            <listitem>
                                <para>Remaining Data:</para>
                                <para> Var2 = Two, Var3 = Three and Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                       <itemizedlist mark="round">
                            <para>
                                Controller mapping: /Resource/:Var1?Param1=:Var2&amp;Var3=:Var3
                            </para>
                            <listitem>
                                <para>After Replacements:</para>
                                <para>/Resource/One?Param1=Two&amp;Var3=Three</para>
                            </listitem>
                            <listitem>
                                <para>Remaining Data:</para>
                                <para>Var4 = Four</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>Valid request command for Invoker '&lt;InvokerName&gt;':</para>
                        <para>
                            This determine the HTTP request method to use, possible options: CONNECT,
DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT and TRACE. If no command is
selected, Default command is used.
                        </para>
                    </listitem>
                </itemizedlist>
                <itemizedlist mark="round">
                    <listitem>
                        <para>デフォルトコマンド</para>
                        <para>
                            Used as a fall-back for all Invokers without a defined request command.
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    <figure>
                        <title>Web service requester network transport (HTTP::REST)</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-requester-transport-rest.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-invoker">
                <title>ウェブサービス依頼アクション(Invokers)</title>
                <para>
                    The actions that can be performed when you are using OTRS as a requester are
called <emphasis>Invokers</emphasis>. Each invoker belongs to a controller
(controllers are collections of operations or invokers). Usually invokers
from the same controller need similar settings and share the same
configuration dialogs.  Each invoker can have independent configuration
dialogs if needed.
                </para>
                <para>
                    <emphasis>Name</emphasis>, <emphasis>Description</emphasis>,
<emphasis>Backend</emphasis> and <emphasis>Mappings</emphasis> are fields
that normally appear on every invoker. Additionally the list of event
triggers and other special fields can appear on non default configuration
dialogs to fulfill special needs of the invoker.
                </para>
                <para>
                    通常は、各依頼アクション(Invokers)につき2つのマッピング構成セクションがあります。ひとつは入信データでもう一方は発信データです。それらの構成が相互に独立して、さらに依頼アクション(Invokers)バックエンドから独立しているので、各マッピング指示のために異なるマッピングするタイプ(バックエンド)を選ぶことができます。正常で、最も一般的な実行は、依頼アクション(Invokers)が逆の構成で、両方の場合の中で同じマッピングタイプを使用するということです。完全なマッピング構成は個別の画面の中で行われます。それはマッピングタイプに依存します。
                </para>
                <para>
                    依頼アクション(Invokers)バックエンドは事前に投入されており編集可能ではありません。ウェブサービス編集画面に対する依頼アクション(Invokers)を選択する時、このパラメタを見るでしょう。フィールドは参考に過ぎません。
                </para>
                <para>
                    Event triggers are events within OTRS such as
<literal>TicketCreate</literal>, <literal>ArticleSend</literal>, etc. These
can act as triggers to execute the invoker. Each invoker needs to have at
least one event trigger registered, or the invoker will be useless, because
it will never be called. Additionally a set of rules (conditions) for each
event can be defined to have more control over the triggering of the
events.  These rules depend on the data of the object associated with the
event.  The asynchronous property of the event triggers define if the OTRS
process will handle the invoker or if it will be delegated to the OTRS
Daemon.
                </para>
                <note>
                    <para>
                        The OTRS Daemon is a separate set of process that executes tasks in the
background. Using this the OTRS process itself will not be affected if the
Remote System takes a long time to respond, if it is not available or if
there are network problems. If you don't use the OTRS Daemons using web
services can make OTRS slow or non-responsive. Therefore it is highly
recommend to use asynchronous event triggers as often as possible.
                    </para>
                </note>
                <para>
                    To add an Event trigger, first select the event family from the first list,
then the event name from the second list, then set the asynchronous property
(if unchecked means that the event trigger will not be asynchronous) and
finally click on the plus button. A new event trigger will be created and it
will be listed on the invoker <emphasis>Event Triggers</emphasis> list.
                </para>
                <para>
                    From the <emphasis>Event Triggers</emphasis> list each events shows if it
contains conditions or not.  The edit button next to the condition property
allows to add or edit the current conditions of the event.
                </para>
                <para>
                    To delete an Event trigger, simply locate the event trigger to be deleted in
the <emphasis>Event Triggers</emphasis> list and click on the trash icon at
the end of the row. This will open a dialog that asks you if you are sure to
delete the event trigger.  Click <emphasis>Delete</emphasis> to remove the
event trigger from the list, or <emphasis>Cancel</emphasis> to close the
dialog.
                </para>
                <para>
                    In the left part of the screen on the action column you have the options:
<emphasis>Go back to web service</emphasis> (discarding all changes since
the last save) and "Delete".  If you click on the last one, a dialog will
emerge and ask you if you like to remove the invoker. Click on the
<emphasis>Delete</emphasis> button to confirm the removal of the invoker and
its configuration or <emphasis>Cancel</emphasis> to close the delete dialog.
                </para>
                <para>
                    <figure>
                        <title>Web service invoker</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-invoker.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-invoker-event">
                <title>Web Service Invoker Event</title>
                <para>
                    Sometimes defining an event to trigger an invoker could result in many
unnecessary or wrong request to a remote server. Event conditions could be
set to restrict the triggering of the invoker in such cases.
                </para>
                <para>
                    To access the event settings screen where the conditions can be defined is
necessary to be in the invoker screen and from there click on the edit icon
next to the condition status on the event where this condition should take
effect.
                </para>
                <para>
                    Within the event settings screen in the action bar there is a button to go
back to the invoker screen as well as a button to remove all the event
conditions.  By default the screen is pre-populated with the first
condition. Update the Type of linkings between conditions if more than one
condition is planned, then change the Type of linking from
<emphasis>Condition 1</emphasis> if more than one field is planned. Both
linking fields accept <emphasis>and</emphasis>, <emphasis>or</emphasis> or
<emphasis>xor</emphasis> as values.
                </para>
                <para>
                    Fill the <emphasis>Field</emphasis> name, set the matching type
(<emphasis>String</emphasis> for exact match, <emphasis>Regexp</emphasis>
for regular expression or <emphasis>Validation Module</emphasis>) and set
Value to match (in case of <emphasis>Validation Module</emphasis> the full
class name like:
<literal>Kernel::GenericInterface::Event::Validation::ValidateDemo</literal>).
                </para>
                <para>
                    To add more fields to the condition, click on the <emphasis>+</emphasis>
button in the fields header. To remove a field, click on the
<emphasis>-</emphasis> button in the field row. It is necessary to keep at
least one field per condition.
                </para>
                <para>
                    To add more conditions click on the button below the last condition box.  To
remove a condition, click on the <emphasis>-</emphasis> button in the
condition header.  It is necessary to keep at least one condition in the
set. To remove all conditions use the button in the sidebar.
                </para>
                <para>
                    <figure>
                        <title>Web service invoker event</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-invoker-event.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>

            <section id="webservice-mapping">
                <title>ウェブサービスマッピング</title>
                <para>
                    There are cases where you need to transform the data from one format to
another (map or change data structure), because normally a web service is
used to interact with a Remote System, that is highly probable that is not
another OTRS system and / or could not understand the OTRS data structures
and values. In these cases some or all values have to be changed, and
sometimes even the names of the values (keys) or even the complete
structure, in order to match with the expected data on the other end.  To
accomplish this task the Generic Interface Mapping Layer exists.
                </para>
                <para>
                    Each Remote System has it own data structures and it is possible to create
new mapping modules for each case (e.g. there is a customized mapping module
for SAP Solution Manager shipped with OTRS), but it is not always
necessary.  The module <literal>Mapping::Simple</literal> should cover most
of the mapping needs.
                </para>
                <note>
                    <para>
                        When <literal>Mapping::Simple</literal> does not cover all mapping needs for
a web service, a new mapping module should be created. To learn more about
how to create new mapping modules please consult the OTRS Development
Manual.
                    </para>
                </note>
                <para>
                    このモジュールは、デフォルト値をマッピングさせる機会を与えます。各キーあるいは全体のコミュニケーション・データに見合う値のために。
                </para>
                <para>
                    画面の初めに、あなたがデフォルトルールをセットできる一般的なセクションを見ます。そのルールは全てのマップされていないキーや値に適用します。利用可能な3つのオプションがあり、これらのオプションは下のようにリストされます:
                </para>
                <itemizedlist>
                    <listitem>
                        <para>
                            保持（変更しないままにして）：キーや値をとにかく触りません。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            無視（キー/値ペアを捨てます):これがキーに適用されれば、それはキーと値を削除します。なぜならキーが削除されると続いてその関連値も削除されるからです。これが値に適用されれば、値だけが削除され、キーは保持されます。この時それは空の値に関連付けられます。
                        </para>
                    </listitem>
                    <listitem>
                        <para>
                            MapTo（デフォルトとして供給されたキーまたは値の使用）：定義されたマップルールのない全てのキーとまたは値は、デフォルトとしてこれを使います。このオプションを選択するとき、新規のテキストフィールドがこのデフォルトをセットするために現れます。
                        </para>
                    </listitem>
                </itemizedlist>
                <para>
                    Clicking on the <emphasis>+</emphasis> button for new key map, will display
a new box for a single mapping configuration. You can add as many key
mappings as needed. Just click on the <emphasis>+</emphasis> button again
and a new mapping box will appear below the existing one. From this mapping
boxes you can define a map for a single key, with the next options:
                </para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>
                                正確な値(s):古いキーが正確に一致すれば、古い重要な文字列は新規ものに変更されます。
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                Regular expression: the key string will be replaced following a regular
expression rule.
                            </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    Pressing the new value map <emphasis>+</emphasis> button will display a new
row for a value map.  Here it is also possible to define rules for each
value to be mapped with the same options as for the key map (Exact value and
Regular expression). You can add as many values to map as needed, and if you
want to delete one of them, just click on the <emphasis>-</emphasis> button
for each mapping value row.
                </para>
                <para>
                    Deleting the complete key mapping section (box) is possible, just push on
the <emphasis>-</emphasis> button located on the up right corner of each box
that you want to delete.
                </para>
                <para>
                    If you need to delete a complete mapping configuration: go back to the
corresponding operation or invoker screen, look for the mapping direction
that you select before and set its value to <emphasis>-</emphasis>, and save
the configuration to apply changes.
                </para>
                <para>
                    <figure>
                        <title>Web service mapping</title>
<screenshot>
<graphic
fileref="screenshots/administration/genericinterface/genericinterface-webservice-mapping.png"
scalefit="1" width="100%" contentdepth="100%"></graphic></screenshot></figure>
                </para>
            </section>
        </section>
    </section>
</section>
