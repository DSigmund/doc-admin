<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="smime">
<title>Secure Email with S/MIME</title>

<para>
Kwa muonekano wa kwanza, usimbaji fiche kwa S/MIME unaonekana mgumu
kulinganisha na PGP. Kwanza inabidi uanzishe Mamlaka ya Uhalalishaji (CA)
kwa ajili ya mfumo wa OTRS. Hatua zinazofuata ni kama zile zinazohitajika na
PGP: sanidi OTRS, sakinisha hati yako mwenyewe, agiza hati nyingine za umma
kama zinavyohitajika, na kadh.
</para>

<para>
Usanidi wa S/MIME unafanyika nje ya kiolesura cha tovuti cha OTRS kwa
asilimia kubwa, na unatakiwa ufanyike kwenye sheli na mtumiaji wa
'otrs'. Usanidi wa MIME chini ya Linux unajikita katika SSL
(OpenSSL). Kwahiyo kwanza kabisa kagua kama kifurudhi cha OpenSSL
kimesakinishwa kwenye mfumo wako. Kifurushi cha OpenSSL kinajumuisha hati
iitwayo CA.pl, ambamo ndani yake hatua za muhimu za utengenezaji wa hati
zinaweza kufanyika. Kurahisisha mchakato, tafuta wapi kwenye mfumo wa
mafaili hati ya CA.pl imehifadhiwa na ingiza mahali inapopatikana katika
kishika nafasi NJIA cha sheli (ona Hati chini).
</para>

<para>
<screen>
otrs@linux:~&gt; rpm -ql openssl | grep CA
/usr/share/ssl/misc/CA.pl
otrs@linux:~&gt; export PATH=$PATH:/usr/share/ssl/misc
otrs@linux:~&gt; which CA.pl
/usr/share/ssl/misc/CA.pl
otrs@linux:~&gt; mkdir tmp; cd tmp
otrs@linux:~/tmp&gt;
</screen>
</para>

<para>
<emphasis>Hati: Usanidi wa S/MIME.</emphasis>
</para>

<para>
Hati hapo juu inaonyesha kwamba mpangilio orodha mpya wa muda ~/tmp
umetengenezwa, ambapo ndani yake hati itazalishwa.
</para>

<para>
Kutengeneza hati, fanya operesheni zifuatazo katika tungo amri (tunaamini
msimamizi wa OTRS inabidi atengeneze hati ya SSL kwa ajili ya kujaribisha na
kujifunza. Kama tayari una hati ya SL iliyothibitishwa kwa ajili ya usimbaji
fiche, itumie na ruka hizi hatua):
</para>

<para>
<orderedlist numeration="arabic">
<listitem>
    <para>
    Anzisha Mamlaka yako ya Uhalalishaji kwa ajili ya SSL. unahitaji
kuthibitisha maombi ya hati yako ya SSL (ona Hati chini).
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -newca
CA certificate filename (or enter to create)

Making CA certificate ...
Generating a 1024 bit RSA private key
...++++++
......++++++
writing new private key to './demoCA/private/cakey.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:DE
State or Province Name (full name) [Some-State]:OTRS-state
Locality Name (eg, city) []:OTRS-town
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Your company
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:OTRS Admin
Email Address []:otrs@your-domain.tld
otrs@linux:~/tmp&gt; ls -la demoCA/
total 8
-rw-r--r--  1 otrs otrs 1330 2006-01-08 17:54 cacert.pem
drwxr-xr-x  2 otrs otrs   48 2006-01-08 17:53 certs
drwxr-xr-x  2 otrs otrs   48 2006-01-08 17:53 crl
-rw-r--r--  1 otrs otrs    0 2006-01-08 17:53 index.txt
drwxr-xr-x  2 otrs otrs   48 2006-01-08 17:53 newcerts
drwxr-xr-x  2 otrs otrs   80 2006-01-08 17:54 private
-rw-r--r--  1 otrs otrs   17 2006-01-08 17:54 serial
otrs@linux:~/tmp&gt;
    </screen>
    </para>

    <para>
    <emphasis>Hati: Kuweka Mamlaka ya Uhalalishaji kwa ajili ya SSL.</emphasis>
    </para>

</listitem>
<listitem>
    <para>
    Zalisha maombi ya cheti (ona Hati chini).
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -newreq
Generating a 1024 bit RSA private key
..........................................++++++
....++++++
writing new private key to 'newreq.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:DE\keyreturn
State or Province Name (full name) [Some-State]:OTRS-state
Locality Name (eg, city) []:OTRS-town
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Your company
Organizational Unit Name (eg, section) []:
Common Name (eg, YOUR name) []:OTRS admin
Email Address []:otrs@your-domain.tld

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
Request (and private key) is in newreq.pem
otrs@linux:~/tmp&gt; ls -la
total 4
drwxr-xr-x  6 otrs otrs  232 2006-01-08 17:54 demoCA
-rw-r--r--  1 otrs otrs 1708 2006-01-08 18:04 newreq.pem
otrs@linux:~/tmp&gt;
    </screen>
    </para>

    <para>
    <emphasis>Hati: Kutengeneza maombi ya cheti.</emphasis>
    </para>
</listitem>
<listitem>
    <para>
    Kusaini maombi ya hati. Maombi ya hati yanaweza kusainiwa na kuthibitishwa
na Mamlaka yako ya Uhalalishaji, au ili kuaminika zaidi kwa kusainiwa na
Mamlaka nyingine ya Uhalalishaji iliyothibitishwa. (ona chini).
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -signreq
Using configuration from /etc/ssl/openssl.cnf
Enter pass phrase for ./demoCA/private/cakey.pem:
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number:
            fd:85:f6:9f:14:07:16:c8
        Validity
            Not Before: Jan  8 17:04:37 2006 GMT
            Not After : Jan  8 17:04:37 2007 GMT
        Subject:
            countryName               = DE
            stateOrProvinceName       = OTRS-state
            localityName              = OTRS-town
            organizationName          = Your Company
            commonName                = OTRS administrator
            emailAddress              = otrs@your-domain.tld
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            Netscape Comment:
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier:
                01:D9:1E:58:C0:6D:BF:27:ED:37:34:14:D6:04:AC:C4:64:98:7A:22
            X509v3 Authority Key Identifier:
                keyid:10:4D:8D:4C:93:FD:2C:AA:9A:B3:26:80:6B:F5:D5:31:E2:8E:DB:A8
                DirName:/C=DE/ST=OTRS-state/L=OTRS-town/O=Your Company/
                CN=OTRS admin/emailAddress=otrs@your-domain.tld
                serial:FD:85:F6:9F:14:07:16:C7

Certificate is to be certified until Jan  8 17:04:37 2007 GMT (365 days)
Sign the certificate? [y/n]:y

1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated
Signed certificate is in newcert.pem
otrs@linux:~/tmp&gt;
    </screen>
    </para>
    <para>
    <emphasis>Hati: Kusaini maombi ya cheti.</emphasis>
    </para>
</listitem>
<listitem>
    <para>
    Zalisha hati yako mwenyewe, na data zote zinaoendana nazo, kwa kutumia
maombi ya hati yaliyosainiwa (ona Hati chini).
    </para>

    <para>
    <screen>
otrs@linux:~/tmp&gt; CA.pl -pkcs12 "OTRS Certificate"
Enter pass phrase for newreq.pem:
Enter Export Password:
Verifying - Enter Export Password:
otrs@linux:~/tmp&gt; ls -la
total 12
drwxr-xr-x  6 otrs otrs  328 2006-01-08 18:04 demoCA
-rw-r--r--  1 otrs otrs 3090 2006-01-08 18:13 newcert.p12
-rw-r--r--  1 otrs otrs 3791 2006-01-08 18:04 newcert.pem
-rw-r--r--  1 otrs otrs 1708 2006-01-08 18:04 newreq.pem
otrs@linux:~/tmp&gt;
    </screen>
    </para>
    <para>
    <emphasis>Hati: Kuzalisha cheti kipya.</emphasis>
    </para>
</listitem>
</orderedlist>
</para>

<para>
Sasa kwa kuwa hizi operesheni zimefanyika, kuseti S/MIME lazima kukamilike
katika OTRS.
</para>

<para>
hiki kipande cha kuseti kinafanyika katika ukurasa wa Msimamizi, kuchagua
kiungo <link linkend="adminarea-smime">"SMIME"</link>. Ikiwa msaada wa
S/MIME wa kawaida kwenye OTRS haujawezeshwa, barakoa itanbainisha hii kwa
msimamizi na kutoa kiungo cha kuiwezesha.
</para>

<para>
With the SysConfig group <link
linkend="ConfigReference_Section_Core_Crypt_SMIME">"Crypt::SMIME"</link>,
you can also enable and configure the general S/MIME support.
</para>

<para>
Hana unweza kuamilisha msaada wa S/MIME, na kufafanua njia za anri ya
OpenSSL na mpangilio orodha wa hati. Faili la ufunguo lililo tengnezwa hapo
juu lazima lihifadhiwe kwenye mpangilio orodha ulioonyeshwa hapa. La sivyo
OpenSSL haiwezi kulitumia.
</para>

<para>
Hatua inayofwata inafanywa kwenye <link linkend="adminarea-smime"> usanidi
wa S/MIME katika ukurasa wa Msimamizi wa OTRS</link>. Hapa unaweza kuagiza
ufunguo binafsi wa (za) mfumo wa OTRS na funguo za umma za mawasiliano ya
wabia wengine. Ingiza ufunguo wa umma ambao umetengenezwa mwanzoni mwa
kifungu hiki na kuongezwa kwenye OTRS.
</para>

<para>
Obviously, all public S/MIME keys of communication partners can be imported
using the <link linkend="adminarea-customer-users">customer user
administration tool</link> as well.
</para>

<section id="SMIMEFetchFromCustomer">
    <title>Fetch S/MIME Certificates from Customer User Backends</title>
    <para>
        It is possible to use a Customer User Backed (such as LDAP) as the source of
public S/MIME certificates. This certificates could be imported into the
system and be displayed in <link linkend="adminarea-smime">S/MIME
configuration on the OTRS Admin page</link> and they can be used from OTRS
to send encrypted emails to the customers.
    </para>
    <para>
        In order to enable this feature is needed to:
    </para>
    <para>
        <orderedlist numeration="arabic">
            <listitem><para>Enable <literal>SMIME</literal> in SysConfig</para></listitem>
            <listitem><para>Enable <literal>SMIME::FetchFromCustomer</literal> in SysConfig</para></listitem>
            <listitem>
                <para>
                    Configure a customer user backend to provide the attribute
<literal>UserSMIMECertificate</literal> with the customer user S/MIME
certificate (there is an example for LDAP customer user mapping in
<filename>$OTRS_HOME/Kernel/Config/Defaults.pm</filename>).
                </para>
            </listitem>
        </orderedlist>
    </para>
    <para>
        This feature can be used in three different ways:
    </para>
    <para>
        <orderedlist numeration="arabic">
            <listitem>
                <para>
                    Incoming Emails:
                </para>
                <para>
                    A dedicated Postmaster filter
(<literal>PostMaster::PreFilterModule###000-SMIMEFetchFromCustomer</literal>
in SysConfig) will extract the email address of each incoming email and will
try to find the email address is the list of customers. If found it will try
get the S/MIME certificate from customer user attributes. If a certificate
is found it will try to import it (unless it was already imported).
                </para>
            </listitem>
            <listitem>
                <para>
                    Specific email address or all customers:
                </para>
                <para>
                    The console command
<literal>Maint::SMIME::CustomerCertificate::Fetch</literal> can be used to
import the S/MIME certificate of one customer email address as:
                </para>
                <para>
                    <screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.Console.pl Maint::SMIME::CustomerCertificate::Fetch --email customer@example.com
                    ]]></screen>
                </para>
                <para>
                    In this case the console command will try to match the supplied email
address with one of the customer users. If found it will try add to the
system the S/MIME certificate found in customer user properties (if the
certificate is not already added).
                </para>
                <para>
                    The same console command can be used to import the S/MIME certificates of
all customer users (limited to
<literal>CustomerUserSearchListLimit</literal> property from the customer
user backend). This option is discouraged specially for systems with a large
number of customer users as it might require too much time to execute and
depending on the limit it might be possible that not all customer
certificates will be fetch. Execute the console command in this mode as:
<screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.Console.pl Maint::SMIME::CustomerCertificate::Fetch --add-all
                    ]]></screen>
                </para>
                <para>
                    For this option the console command will query the customer user backends to
get all possible customers and for each it will check if there is a S/MIME
certificate. If a certificate is found, it will try to add it to the system
(if the certificate is not already added).
                </para>
            </listitem>
            <listitem>
                <para>
                    Renew existing certificates:
                </para>
                <para>
                    Another console command
<literal>Maint::SMIME::CustomerCertificate::Renew</literal> can be used to
check for all existing certificates in the system. This verifies that the
existing certificates from customer users matches the ones that are
retrieved by the customer user properties. Any new certificate in the
customer user backend will be added into the system (no certificates are
deleted in this process).
                </para>
                <para>
                    This console command is executed once a day by the OTRS daemon automatically
with the task
<literal>Daemon::SchedulerCronTaskManager::Task###RenewCustomerSMIMECertificates</literal>
(as seen in SysConfig), but it can be also executed manually on demand as:
                </para>
                <para>
                    <screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.Console.pl Maint::SMIME::CustomerCertificate::Renew
                    ]]></screen>
                </para>
            </listitem>
        </orderedlist>
    </para>
</section>

</section>
