<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="upgrading">
    <title>Upgrading OTRS from 3.3 to 4</title>

    <para>
    These instructions are for people upgrading OTRS from
<emphasis>3.3</emphasis> to <emphasis>4</emphasis> or from a
<emphasis>4</emphasis> to a later patchlevel release <emphasis>4</emphasis>
and applies both for RPM and source code (tarball) upgrades.
    </para>

    <para>
    If you are running a lower version of OTRS you have to follow the upgrade
path to 3.3 first
(1.1->1.2->1.3->2.0->2.1->2.2->2.3->2.4->3.0->3.1->3.2->3.3)! You need to
perform a full upgrade to every version in between, including database
changes and the upgrading perl script.
    </para>

    <para>
    Please note that if you upgrade from OTRS 2.2 or earlier, you have to take
<ulink url="http://bugs.otrs.org/show_bug.cgi?id=6798">an extra
step</ulink>.
    </para>

    <para>
    Within a single minor version you can skip patch level releases if you want
to upgrade. For instance you can upgrade directly from OTRS 4 patchlevel 2
to version 4 patchlevel 6. If you need to do such a "patch level upgrade",
you should skip steps 6, 11, 13 and 14.
    </para>

    <para>
    It is highly recommended to perform a test update on a separate testing
machine first.
    </para>

    <section role="NotInToc">
        <title>Step 1: Stop all relevant services</title>

        <para>
        Please make sure there are no more running services or cronjobs that try to
access OTRS.  This will depend on your service configuration, here is an
example: <screen><![CDATA[
shell> /etc/init.d/cron stop
shell> /etc/init.d/postfix stop
shell> /etc/init.d/apache stop
            ]]></screen> Stop OTRS cronjobs and the
scheduler (in this order): <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/Cron.sh stop
shell> bin/otrs.Scheduler.pl -a stop
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 2: Backup everything below <filename>/opt/otrs/</filename></title>

        <para>
            <itemizedlist>
                <listitem><para><filename>Kernel/Config.pm</filename></para></listitem>
                <listitem><para><filename>Kernel/Config/GenericAgent.pm</filename></para></listitem>
                <listitem><para><filename>Kernel/Config/Files/ZZZAuto.pm</filename></para></listitem>
                <listitem><para><filename>var/*</filename></para></listitem>
                <listitem><para>as well as the database</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 3: Make sure that you have backed up everything ;-)</title>
        <para></para>
    </section>

    <section role="NotInToc">
    <title>Step 4: Install the new release (tar or RPM)</title>

        <section role="NotInToc">
        <title>Step 4.1: With the tarball:</title>

            <screen><![CDATA[
shell> cd /opt
shell> mv otrs otrs-old
shell> tar -xzf otrs-x.x.x.tar.gz
shell> mv otrs-x.x.x otrs
            ]]></screen>

            <section role="NotInToc">
            <title>Rejesha usanidi wa ma faili ya zamani</title>

                <para>
                    <itemizedlist>
                        <listitem><para><filename>Kernel/Config.pm</filename></para></listitem>
                        <listitem><para><filename>Kernel/Config/GenericAgent.pm</filename></para></listitem>
                        <listitem><para><filename>Kernel/Config/Files/ZZZAuto.pm</filename></para></listitem>
                    </itemizedlist>
                </para>
            </section>

            <section role="NotInToc">
                <title>Rudisha TicketCounter.log</title>

                <para>
                    In order to let OTRS continue with the correct ticket number, restore the
<filename>TicketCounter.log</filename> to
<filename>/opt/otrs/var/log/</filename>. This is especially important if you
use incremental ticketnumbers.
                </para>
            </section>

            <section role="NotInToc">
                <title>Rejesha data za makala</title>

                <para>
                    If you configured OTRS to store article data in the filesystem you have to
restore the <filename>article</filename> folder to
<filename>/opt/otrs/var/</filename>.
                </para>
            </section>

            <section role="NotInToc">
                <title>Set file permissions</title>

                <para>
                Please execute <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/otrs.SetPermissions.pl
                ]]></screen> with the permissions
needed for your system setup. For example:

                <itemizedlist>
                <listitem>
                    <para>Web server which runs as the OTRS user: <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=otrs
                ]]></screen>
                    </para>
                </listitem>


                <listitem>
                    <para>Webserver with wwwrun user (e. g. SUSE): <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=wwwrun
                ]]></screen>
                    </para>
                </listitem>


                <listitem>
                    <para>Webserver with apache user (e. g. Red Hat, CentOS): <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=apache
                ]]></screen>
                    </para>
                </listitem>


                <listitem>
                    <para>Webserver with www-data user (e. g. Debian, Ubuntu): <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=www-data
                ]]></screen>
                    </para>
                </listitem>
                </itemizedlist>

                </para>
            </section>
        </section>

        <section role="NotInToc">
            <title>Step 4.2: With the RPM:</title>
            <para>
            <screen><![CDATA[
shell> rpm -Uvh otrs-x.x.x.-01.rpm
            ]]></screen> In this case the RPM update
automatically restores the old configuration files and sets file
permissions.
            </para>
        </section>
    </section>

    <section role="NotInToc">
        <title>Step 5: Check needed Perl modules</title>

        <para>
        Hakikisha kwamba moduli zote za perl zinazohitajika zimesakinishwa kwenye
mfumo wako na sakinisha moduli zozote ambazo zinakosekana.  <screen><![CDATA[
shell> /opt/otrs/bin/otrs.CheckModules.pl
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 6: Apply the database changes</title>

        <section role="NotInToc">
            <title>Step 6.1: Database schema update</title>

            <section role="NotInToc">
            <title>MySQL:</title>

                <para>
                Note: new tables created in the MySQL UPGRADING process will be created with
the default table storage engine set in your MySQL server.  In MySQL 5.5 the
new default type is <code>InnoDB</code>.  If existing tables, e.g. "users",
have the table storage engine e.g. <code>MyISAM</code>, then an error will
be displayed when creating the foreign key constraints.
                </para>

                <para>
                You have two options: you can change the default storage engine of MySQL
back to <code>MyISAM</code> so that new tables will have the same engine as
the existing tables, or change the existing tables to use InnoDB as storage
engine.
                </para>

                <para>
                Any problems with regards to the storage engine will be reported by the
<filename>otrs.CheckDB.pl</filename> script, so please run it to check for
possible issues.  <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/otrs.CheckDB.pl
shell> cat scripts/DBUpdate-to-4.mysql.sql | mysql -p -f -u root otrs
                ]]></screen>

                </para>

            </section>
            <section role="NotInToc">
                <title>PostgreSQL:</title>

                <para>
                <screen><![CDATA[
shell> cd /opt/otrs/
shell> cat scripts/DBUpdate-to-4.postgresql.sql | psql --set ON_ERROR_STOP=on --single-transaction otrs otrs
                ]]></screen>
                </para>
            </section>
        </section>

        <section role="NotInToc">
            <title>Step 6.2: Database migration script</title>

            <para>
            Run the migration script (as user <code>otrs</code>, NOT as
<code>root</code>): <screen><![CDATA[
shell> scripts/DBUpdate-to-4.pl
            ]]></screen> Do not continue the
upgrading process if this script did not work properly for you.  Otherwise
data loss may occur.
            </para>
        </section>
    </section>

    <section role="NotInToc">
        <title>Step 7: Own themes</title>

        <para>
        Note: The OTRS themes of 3.3 are NOT compatible with OTRS 4, so don't use
your old themes!
        </para>

        <para>
        Themes are located under
<filename>/opt/otrs/Kernel/Output/HTML/*/*.tt</filename>.
        </para>

        <para>
        Please note that OTRS 4 comes with a new templating engine based on <ulink
url="http://www.template-toolkit.org">Template::Toolkit</ulink>. All
customized templates must be converted from DTL to the new format. Please
see <ulink
url="http://otrs.github.io/doc/manual/developer/4.0/en/html/package-porting.html#package-porting-template-engine">the
development manual</ulink> for detailed instructions.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 8: Refresh the configuration cache and delete caches</title>

        <para>
        Please run (as user <code>otrs</code>, <emphasis>not</emphasis> as
<code>root</code>): <screen><![CDATA[
shell> bin/otrs.RebuildConfig.pl
shell> bin/otrs.DeleteCache.pl
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 9: Restart your services</title>

        <para>
        mf. (inategemeana na huduma zilizotumika): <screen><![CDATA[
shell> /etc/init.d/apache start
shell> /etc/init.d/postfix start
shell> /etc/init.d/cron start
        ]]></screen> Sasa unaweza kuingia kwenye mfumo wako.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 10: Check installed packages</title>

        <note>
            <para>
                The OTRS packages of 3.3 are NOT compatible with OTRS 4, so you have to
perform a package upgrade!
            </para>
        </note>

        <para>
        Vifurushi vifuatavyo vinasakinushwa kiotomatiki baada ya mchakato wa
uboreshaji (kama zilisakinishwa kabla):

            <itemizedlist>
                <listitem><para>OTRSGenericInterfaceREST</para></listitem>
                <listitem><para>OTRSMyServices</para></listitem>
                <listitem><para>OTRSStatsRestrictionByDateTimeDF</para></listitem>
                <listitem><para>Support</para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 11: Check GenericAgent jobs</title>

        <para>
            If you have any GenericAgent jobs (or even any custom developments)  that
automatically set ProcessID or ActivityID dynamic fields, you need to update
these to set the fields to the new long EntityIDs that were generated by
<filename>DBUpdate-to-4.pl</filename>.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 12: Update and activate cronjobs</title>

        <para>
            There are several OTRS default cronjobs in
<filename>/opt/otrs/var/cron/*.dist</filename>.  They can be activated by
copying them without the ".dist" filename extension.  Do this to make sure
you get the latest versions of the cronjobs and new cronjobs as well.
<screen><![CDATA[
shell> cd /opt/otrs/var/cron
shell> for foo in *.dist; do cp $foo `basename $foo .dist`; done
            ]]></screen> Please check the copied files and
re-apply any customizations that you might have made.  To schedule these
cronjobs on your system, you can use the script
<filename>Cron.sh</filename>.  Make sure to execute it as the
<code>otrs</code> user! <screen><![CDATA[
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>
        <para>
            This will also cause the OTRS Scheduler to be started.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 13: Update Customer database configuration</title>

        <para>
        If you're using an external customer database and this database does NOT
provide the OTRS specific fields create_time, create_by, change_time and
change_by, please set <code>ForeignDB => 1</code> for
<code>$Self->{CustomerUser}</code> and <code>$Self->{CustomerCompany}</code>
(see <filename>Kernel/Config/Defaults.pm</filename>).
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 14: Rebuild Ticket index</title>

        <para>
        Please run <filename>bin/otrs.RebuildTicketIndex.pl</filename> to regenerate
the ticket index.  This can be done in the background to calculate the
ticket numbers for the queue view screens.  You can already use your system.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 14: Well done!</title>
        <para></para>
    </section>

</section>
