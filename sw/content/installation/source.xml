<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="manual-installation-of-otrs">

    <title>Installation From Source (Linux, Unix)</title>

    <section role="NotInToc" id="installation-disable-selinux">
        <title>Preparation: Disable SELinux</title>
        <note>
            <para>
                If your system uses SELinux, you should disable it, otherwise OTRS will not
work correctly.
            </para>
        </note>
        <para>
            Here's how to disable SELinux for RHEL/CentOS/Fedora:
            <itemizedlist>
                <listitem>
                    <para>
                        Configure SELINUX=disabled in the /etc/selinux/config file:
                    </para>
                    <para>
                        <screen><![CDATA[
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
SELINUX=disabled
# SELINUXTYPE= can take one of these two values:
#       targeted - Targeted processes are protected,
#       mls - Multi Level Security protection.
SELINUXTYPE=targeted
                        ]]></screen>
                    </para>
                </listitem>
                <listitem>
                    <para>
            Reboot your system. After reboot, confirm that the getenforce command
returns <literal>Disabled</literal>:
                    </para>
                    <para>
                    <screen><![CDATA[
shell> getenforce
Disabled
                        ]]></screen>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 1: Install .tar.gz</title>
        <para>
        If you want to install OTRS from source, first download the source archive
as .tar.gz, .tar.bz2, or .zip file from <ulink
url="https://www.otrs.com/download-open-source-help-desk-software-otrs-free/">https://www.otrs.com/download-open-source-help-desk-software-otrs-free/</ulink>
        </para>

        <para>
        Pakua nyaraka (kwa mfano, kwa kutumia <command>tar</command>) kwenda kwenye
mpangilio orodha <filename>/opt</filename>, na upa mpangilio orodha jina
jipya kutoka otrs-x.x.x kuwa otrs (ona Hati chini).
        </para>

        <para>
        <screen><![CDATA[
shell> tar xzf /tmp/otrs-x.x.x.tar.gz
shell> mv otrs-x.x.x /opt/otrs
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="installation-of-perl-modules">
        <title>Step 2: Install Additional Perl Modules</title>
        <para>
            Use the following script to get an overview of all installed and required
CPAN modules.
        </para>

        <para>
            <screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.CheckModules.pl
o CGI..............................ok (v3.60)
o Crypt::PasswdMD5.................ok (v1.3)
o Crypt::SSLeay....................Not installed! (Optional - Required for Generic Interface SOAP SSL connections.)
o CSS::Minifier....................ok (v0.01)
o Date::Format.....................ok (v2.22)
o Date::Pcalc......................ok (v1.2)
...
            ]]></screen>
        </para>

        <note>
            <para>
                Please note that OTRS requires a working Perl installation with all "core"
modules such as the module <literal>version</literal>. These modules are not
explicitly checked by the script.  You may need to install a
<literal>perl-core</literal> package on some systems like RHEL that do not
install the Perl core packages by default.
            </para>
        </note>

        <para>
            To install missing Perl modules, you can:
        </para>

        <section role="NotInToc">
            <title>a) Install the packages via the package manager of your Linux distribution</title>

            <itemizedlist>
                <listitem>
                    <para>
                        For Red Hat, CentOS, Fedora or compatible systems:
                    </para>
                    <para>
                        <screen><![CDATA[
shell> yum install "perl(Digest::MD5)"
                        ]]></screen>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For SUSE Linux Enterprise Server, openSUSE or compatible systems: first
determine the name of the package the module is shipped in.  Usually the
package for My::Module would be called "perl-My-Module".
                    </para>
                    <para>
                        <screen><![CDATA[
shell> zypper search Digest::MD5
                        ]]></screen>
                    </para>
                    <para>
                        Then install:
                    </para>
                    <para>
                        <screen><![CDATA[
shell> zypper install perl-Digest-MD5
                        ]]></screen>
                    </para>
                </listitem>
                <listitem>
                    <para>
                        For Debian, Ubuntu or compatible systems first determine the name of the
package the module is shipped in.  Usually the package for My::Module would
be called "libmy-module-perl".
                    </para>
                    <para>
                        <screen><![CDATA[
shell> apt-cache search Digest::MD5
                        ]]></screen>
                    </para>
                    <para>
                        Then install:
                    </para>
                    <para>
                        <screen><![CDATA[
shell> apt-get install libdigest-md5-perl
                        ]]></screen>
                    </para>
                    <para>
                        Please note that it might be that you can't find all modules or their
required versions in your distribution repository, in that case you might
choose to install those modules via CPAN (see below).
                    </para>
                </listitem>
            </itemizedlist>
        </section>
        <section role="NotInToc">
            <title>b) Install the required modules via the CPAN shell</title>
            <para>
                Note that when you're on Linux you should run CPAN as your superuser account
because the modules should be accessible both by the OTRS account and the
account under which the web server is running.
            </para>
            <para>
                <screen><![CDATA[
shell> perl -MCPAN -e shell;
...
install Digest::MD5
install Crypt::PasswdMD5
...
                ]]></screen>
            </para>
            <para>
                Any optional modules listed by the script should be installed depending on
the special requirements of the target system.
            </para>
        </section>

    </section>

    <section role="NotInToc">
        <title>Step 3: Create OTRS User</title>
        <para>
            Create user:
        </para>
        <para>
            <screen><![CDATA[
shell> useradd -d /opt/otrs -c 'OTRS user' otrs
            ]]></screen>
        </para>
        <para>
            Add user to webserver group (if the webserver is not running as the OTRS
user):
        </para>
        <para>
            <screen><![CDATA[
shell> usermod -G www otrs
(SUSE=www, Red Hat/CentOS/Fedora=apache, Debian/Ubuntu=www-data)
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 4: Activate Default Config Files</title>
        <para>
            There are two OTRS config files bundled in $OTRS_HOME/Kernel/*.dist and
$OTRS_HOME/Kernel/Config/*.dist. You must activate them by copying them
without the ".dist" filename extension.
        </para>
        <para>
            <screen><![CDATA[
shell> cd /opt/otrs/
shell> cp Kernel/Config.pm.dist Kernel/Config.pm
    ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 5: Check if all needed modules are installed</title>
        <para>
            <screen><![CDATA[
shell> perl -cw /opt/otrs/bin/cgi-bin/index.pl
/opt/otrs/bin/cgi-bin/index.pl syntax OK

shell> perl -cw /opt/otrs/bin/cgi-bin/customer.pl
/opt/otrs/bin/cgi-bin/customer.pl syntax OK

shell> perl -cw /opt/otrs/bin/otrs.Console.pl
/opt/otrs/bin/otrs.Console.pl syntax OK
            ]]></screen>
        </para>
        <para>
            "syntax OK" tells you all mandatory Perl modules are installed.
        </para>
    </section>

    <section role="NotInToc" id="web-server-configuration">
        <title>Step 6: Configuring the Apache web server</title>

        <para>
            Kwanza kabisa, unatakiwa kusanidi seva ya wavuti ya Apache2 na mod_perl;
utafanya hivi kutoka kwenye meneja kifurushi. Hapa chini utakuta amri
zinazohitajika kuseti Apache kwenye usambazaji wa Linux maarufu.
        </para>

        <para>
            <screen><![CDATA[
# rhel / centos:
shell> yum install httpd mod_perl

# suse:
shell> zypper install apache2-mod_perl

# debian/ubuntu:
shell> apt-get install apache2 libapache2-mod-perl2
        ]]></screen>
        </para>

        <para>
            Most <application>Apache</application> installations have a
<filename>conf.d</filename> directory included.  On Linux systems you can
usually find this directory under <filename>/etc/apache</filename> or
<filename>/etc/apache2</filename>.  Log in as root, change to the
<filename>conf.d</filename> directory and link the appropriate template in
<filename>/opt/otrs/scripts/apache2-httpd.include.conf</filename> to a file
called <filename>zzz_otrs.conf</filename> in the Apache configuration
directory (to make sure it is loaded after the other configurations).
        </para>

        <para>
            OTRS requires a few Apache modules to be active for optimal operation. On
most platforms you can make sure they are active via the tool
<filename>a2enmod</filename>.
        </para>

        <para>
            <screen><![CDATA[
shell> a2enmod perl
shell> a2enmod version
shell> a2enmod deflate
shell> a2enmod filter
shell> a2enmod headers
        ]]></screen>
        </para>

        <para>
            Now you can restart your web server to load the new configuration settings.
On most systems you can do that with the command <command>systemctl restart
apache2.service</command>.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 7: File Permissions</title>
        <para>
            File permissions need to be adjusted to allow OTRS to read and write files:
        </para>

        <para>
            <cmdsynopsis>
<command>otrs.SetPermissions.pl</command> <arg choice='opt'> --otrs-user=
<replaceable>OTRS user, defaults to 'otrs'</replaceable> </arg> <arg
choice='req'> --web-group= <replaceable>group of the web server
user</replaceable> </arg></cmdsynopsis>
        </para>

        <para>
            For example:
        </para>

        <para>
            <itemizedlist>
                <listitem><para>Web server which runs as the OTRS user:</para>
                <para>
                <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-user=otrs
                ]]></screen>
                </para></listitem>

                <listitem><para>Webserver with wwwrun user (e. g. SUSE):</para>
                <para>
                <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=wwwrun
                ]]></screen>
                </para></listitem>

                <listitem><para>Webserver with apache user (e. g. Red Hat, CentOS):</para>
                <para>
                <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=apache
                ]]></screen>
                </para></listitem>

                <listitem><para>Webserver with www-data user (e. g. Debian, Ubuntu):</para>
                <para>
                <screen><![CDATA[
shell> bin/otrs.SetPermissions.pl --web-group=www-data
                ]]></screen>
                </para></listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc" id="database-configuration">
        <title>Step 8: Database Setup and Basic System Configuration</title>
        <para>
            Please use the web installer at <ulink
url="http://localhost/otrs/installer.pl">http://localhost/otrs/installer.pl</ulink>
(replace "localhost" with your OTRS hostname) to setup your database and
basic system settings such as email accounts.
        </para>
        <note>
            <para>
                The following configuration settings are recommended for MySQL
setups. Please add the following lines to <filename>/etc/my.cnf</filename>
under the [mysqld] section:
            </para>
            <para>
                <screen><![CDATA[
max_allowed_packet   = 20M
query_cache_size     = 32M
innodb_log_file_size = 256M
                ]]></screen>
            </para>
        </note>
    </section>

    <section role="NotInToc">
        <title>Step 9: First login</title>
        <para>
            Now you are ready to login to your system at <ulink
url="http://localhost/otrs/index.pl">http://localhost/otrs/index.pl</ulink>
with the credentials you configured in the web installer (User:
root@localhost).
        </para>
        <para>
            With this step, the basic system setup is finished.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 10: Start the OTRS Daemon</title>

        <para>
            The new OTRS daemon is responsible for handling any asynchronous and
recurring tasks in OTRS.  What has been in cron file definitions previously
is now handled by the OTRS daemon, which is now required to operate
OTRS. The daemon also handles all GenericAgent jobs and must be started from
the <literal>otrs</literal> user.
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 11: Cron jobs for the OTRS user</title>
        <para>
            There are two default OTRS cron files in
<filename>/opt/otrs/var/cron/*.dist</filename>, and their purpose is to make
sure that the OTRS Daemon is running.  They need to be be activated by
copying them without the ".dist" filename extension.
        </para>

        <para>
            <screen><![CDATA[
shell> cd /opt/otrs/var/cron
shell> for foo in *.dist; do cp $foo `basename $foo .dist`; done
            ]]></screen>
        </para>

        <para>
            To schedule these cron jobs on your system, you can use the script
<filename>Cron.sh</filename> with the <literal>otrs</literal> user.
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>

        <para>
            Stopping the cron jobs is also possible (useful for maintenance):
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/Cron.sh stop
    ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 12: Setup bash autocompletion (optional)</title>
        <para>
            All regular OTRS commandline operations happen via the otrs Console
interface <filename>bin/otrs.Console.pl</filename>. This provides an auto
completion for the bash shell which makes finding the right command and
options much easier.
        </para>
        <para>
            You can activate the bash autocompletion by installing the package
<literal>bash-completion</literal>.  It will automatically detect and load
the file <filename>/opt/otrs/.bash_completion</filename> for the
<literal>otrs</literal> user.
        </para>
        <para>
            After restarting your shell, you can just type
<filename>bin/otrs.Console.pl</filename> followed by TAB, and it will list
all available commands. If you type a few characters of the command name,
TAB will show all matching commands. After typing a complete command, all
possible options and arguments will be shown by pressing TAB.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 13: Further Information</title>
        <para>
            We advise you to read the OTRS <link
linkend="performance-tuning">performance tuning chapter</link>.
        </para>
        <para>
            If you encounter problems with the installation, you can send a message to
our mailing list otrs@otrs.org (<ulink
url="http://lists.otrs.org/">http://lists.otrs.org/</ulink>).
        </para>
        <para>
            You can also ask the OTRS Group to either help you in planning or deploying
OTRS, or review your installed OTRS system. Our <ulink
url="http://www.otrs.com/en/services/">professional services</ulink> are
designed to help you deploy OTRS faster and to get the most benefit out of
OTRS.
        </para>
    </section>

</section>
