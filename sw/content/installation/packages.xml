<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="installation-of-prepared-packages">
<title>The Simple Way - Installation of Pre-Built Packages</title>

<para>
    If available for your platform you should use pre-built packages to install
OTRS, since it is the simplest and most convenient method.  You can find
them in the download area at <ulink
url="https://www.otrs.com/download-open-source-help-desk-software-otrs-free/">www.otrs.com</ulink>.
The following sections describe the installation of OTRS with a pre-built or
binary package on SUSE and Red Hat systems.  Only if you are unable to use
the pre-built packages for some reason should you follow the manual process.
</para>

<section id="installation-on-suse">
    <title>Kusakinisha RPM katika seva ya Linux ya SUSE</title>

    <para>
    This section describes the installation of our RPM package on a SUSE Linux
server.
    </para>

    <section id="suse-preparing-database-mysql">
    <title>Kuandaa hifadhidata kwa ajili ya OTRS</title>

    <para>
    You can use OTRS using different database back-ends:
<application>MySQL</application>, <application>PostgreSQL</application> or
<application>Oracle</application>. The most popular database to deploy OTRS
on is MySQL.  This chapter shows the steps you need to take to configure
MySQL on a SUSE-based server. Of course you can install the database on a
dedicated database server if needed for scalability or other purposes.
    </para>
    <note>
        <para>
            Kama ukifwatat sura hii katika openSUSE 12.3 na kuendelea hutaweza
kusakinisha <application>MySQL</application> lakini
<application>MariaDB</application> badala yake, uma wa MySQL tangamanifu
wakanuni za MySQL. Hili sio tatizo, itafanya kazi vizuri tuu (na hata vizuri
zaidi wakati mwingine).
        </para>
    </note>
    <para>
        Sakinisha MySQL kwa kutekeleza amri ifuatayo kama mzizi:
    </para>

    <para>
        <screen><![CDATA[
linux:~ # zypper install mysql perl-DBD-mysql
        ]]></screen>
    </para>

    <para>
        This will install MySQL with the default options on your system. You'll need
to change the defaults in order to make it suitable for OTRS. With a text
editor open the file <filename>/etc/my.cnf</filename> and add following
lines under the [mysqld] section:
    </para>

    <para>
        <screen><![CDATA[
max_allowed_packet   = 64M
query_cache_size     = 32M
innodb_log_file_size = 256M
        ]]></screen>
    </para>

    <note>
        <para>Please note that OTRS requires utf8 as database storage encoding.</para>
    </note>

    <para>
        Now execute <command>systemctl restart mysql.service</command> to re-start
the database server and activate these changes. Then run
<command>/usr/bin/mysql_secure_installation</command> and follow the
on-screen instructions to set a database root password, remove anonymous
access and remove the test database. Lastly, run <command>systemctl enable
mysql.service</command> in order to make sure MySQL is automatically started
at server startup time.
    </para>

    </section>

    <section id="suse-installing-rpm">
        <title>Kusakinisha OTRS</title>
    <para>
    Install OTRS with via the command line using <command>zypper</command>. This
will also pull in some dependencies such as the Apache web server and some
Perl modules. Make sure you copied the OTRS RPM file to the current
directory.
    </para>
    <para>
        <screen><![CDATA[
otrs-sles:~ # zypper install otrs*.rpm
....
Retrieving package otrs-x.x.x-01.noarch (1/26), 17.5 MiB (74.3 MiB unpacked)
Installing: otrs-x.x.x-01 [done]
Additional rpm output:
Check OTRS user ... otrs added.

...

otrs-sles:~ #
        ]]></screen>
    </para>

    <para>
        Now restart Apache with the command <command>systemctl restart
apache2.service</command> to load the configuration changes for OTRS.
    </para>
    </section>

    <section id="suse-installation-perl-modules">
        <title>Kusakinisha moduli za perl za ziada.</title>
        <para>
            OTRS needs more modules than can be installed via the package manager per
default. You can post-install them manually.  Running the
<filename>otrs.CheckEnvironment.pl</filename> script located at
<filename>/opt/otrs/bin/</filename> will let you know which modules are
missing, and must or can be installed.  Optional modules may include those
needed for communication with MDAs via IMAP(S) or gernerating PDF output.
        </para>
        <para>
            On SLES you shoud add an external repository in order to get missing
modules.  Choose the repository needed for your OS version from here: <ulink
url="http://download.opensuse.org/repositories/devel:/languages:/perl/">
http://download.opensuse.org/repositories/devel:/languages:/perl/
</ulink>. As an example, the repository for SLES 11 SP 3 would be added like
this:
        </para>

        <para>
            <screen><![CDATA[
zypper ar -f -n perl http://download.opensuse.org/repositories/devel:/languages:/perl/SLE_11_SP3 Perl
            ]]></screen>
        </para>

        <para>
            Kwenye openSUSE 12.3 hifadhi ya ziada inahitajika kwa ajili ya moduli
Mail::IMAPClient tu, kama utahitaji kama unahitaji kukusanya barua kutoka
kwenye seva ya IMAP inayolindwa na TLS. Mstari husika utaonekana kama hivi:
        </para>

        <para>
            <screen><![CDATA[
zypper ar -f -n perl http://download.opensuse.org/repositories/devel:/languages:/perl/openSUSE_12.3/ Perl
            ]]></screen>
        </para>
        <para>
            Mara ya kwanza unatumia zypper baada ya kuongeza hii hifadhi, utaombwa
kuweka ufunguo wake. Sasa unaweza kusakinisha moduli zinazokosekana kama
hapa chini.
        </para>
        <para>
            <screen><![CDATA[
otrs-sles:/opt/otrs # zypper install -y "perl(YAML::LibYAML)"
Refreshing service 'susecloud'.
Retrieving repository 'perl' metadata [\]

New repository or package signing key received:
Key ID: DCCA98DDDCEF338C
Key Name: devel:languages:perl OBS Project &lt;devel:languages:perl@build.opensuse.org&gt;
Key Fingerprint: 36F0AC0BCA9D8AF2871703C5DCCA98DDDCEF338C
Key Created: Wed Oct 10 22:04:18 2012
Key Expires: Fri Dec 19 22:04:18 2014
Repository: perl

Do you want to reject the key, trust temporarily, or trust always? [r/t/a/?] (r): a
Retrieving repository 'perl' metadata [done]
Building repository 'perl' cache [done]
Loading repository data...
Reading installed packages...
'perl(YAML::LibYAML)' not found in package names. Trying capabilities.
Resolving package dependencies...

The following NEW package is going to be installed:
  perl-YAML-LibYAML

The following package is not supported by its vendor:
  perl-YAML-LibYAML

Retrieving package perl-YAML-LibYAML-0.38-12.4.x86_64 (1/1), 75.0 KiB (196.0 KiB unpacked)
Retrieving: perl-YAML-LibYAML-0.38-12.4.x86_64.rpm [done (55.7 KiB/s)]
Installing: perl-YAML-LibYAML-0.38-12.4 [done]
            ]]></screen>
        </para>

        <para>
        Hatua inayofuata ni kusanidi OTRS kwa kutumia kisakinishi cha wavuti, kama
ilivyoelezewa <link linkend="web-installer">katika kifungu hiki</link>.
        </para>

        <para>
            Now you can start the OTRS daemon and activate corresponding watchdog cron
job (this must be done by the <literal>otrs</literal> user):
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>

        <para>
            That's it, congratulations!
        </para>

    </section>

</section>

<section id="installation-on-centos">
    <title>Kusakinisha OTRS katika mifumo endeshi ya Red Hat Enterprise Linux au CentOS
system</title>

    <para>
        This section describes the installation of our RPM package on a Red Hat
Enterprise Linux (RHEL) or CentOS server.
    </para>

    <section>
        <title>Preparation: Disable SELinux</title>
        <note>
            <para>
                If your system uses SELinux, you should disable it, otherwise OTRS will not
work correctly.
            </para>
        </note>
        <para>
            Here's how to disable SELinux for RHEL/CentOS/Fedora:
            <itemizedlist>
                <listitem>
                    <para>
                        Configure SELINUX=disabled in the /etc/selinux/config file:
                    </para>
                    <para>
                        <screen><![CDATA[
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
SELINUX=disabled
# SELINUXTYPE= can take one of these two values:
#       targeted - Targeted processes are protected,
#       mls - Multi Level Security protection.
SELINUXTYPE=targeted
                        ]]></screen>
                    </para>
                </listitem>
                <listitem>
                    <para>
            Reboot your system. After reboot, confirm that the getenforce command
returns <literal>Disabled</literal>:
                    </para>
                    <para>
                    <screen><![CDATA[
shell> getenforce
Disabled
                        ]]></screen>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section id="rhel-preparing-database-mysql">
    <title>Kuandaa hifadhidata kwa ajili ya OTRS</title>

    <para>
    You can use OTRS using different database back-ends:
<application>MySQL</application>, <application>PostgreSQL</application> or
<application>Oracle</application>. The most popular database to deploy OTRS
on is MySQL.  This chapter shows the steps you need to take to configure
MySQL on a RHEL-based server.  Of course you can install the database on a
dedicated database server if needed for scalability or other purposes.
    </para>

    <para>
        Install MySQL (or MariaDB) by executing the following command as root:
    </para>

    <para>
        <screen><![CDATA[
shell> yum -y install mariadb-server
        ]]></screen>
    </para>

    <para>
        This will install MySQL with the default options on your system. You'll need
to change the defaults in order to make it suitable for OTRS. With a text
editor create a new file <filename>/etc/my.cnf.d/zotrs.cnf</filename> with
the following content:
    </para>

    <para>
        <screen><![CDATA[
[mysqld]
max_allowed_packet   = 64M
query_cache_size     = 32M
innodb_log_file_size = 256M
        ]]></screen>
    </para>

    <para>
        Now execute <command>systemctl start mariadb</command> to re-start the
database server and activate these changes. Then run
<command>/usr/bin/mysql_secure_installation</command> and follow the
on-screen instructions to set a database root password, remove anonymous
access and remove the test database.
    </para>

    <note>
        <para>Please note that OTRS requires utf8 as database storage encoding.</para>
    </note>

    </section>

    <section id="rhel-installing-rpm">
        <title>Kusakinisha OTRS</title>
    <para>
    Install OTRS with via the command line using <command>yum</command>. This
will also pull in some dependencies such as the Apache web server and some
Perl modules. Make sure you copied the OTRS RPM file to the current
directory.
    </para>
    <para>
        <screen><![CDATA[
shell> yum install --nogpgcheck otrs-x.x.*.rpm
...
Dependencies Resolved

================================================================================
 Package                    Arch   Version                Repository       Size
================================================================================
Installing:
 otrs                       noarch x.x.x-01               /otrs-x.x.x-01.noarch
                                                                           74 M
Installing for dependencies:
 apr                        x86_64 1.3.9-5.el6_2          updates         123 k
 ...
 procmail                   x86_64 3.22-25.1.el6          base            163 k

Transaction Summary
================================================================================
Install      26 Package(s)

Total size: 80 M
Total download size: 6.0 M
Installed size: 88 M
Downloading Packages:
(1/25): apr-1.3.9-5.el6_2.x86_64.rpm                     | 123 kB     00:00
...
(25/25): procmail-3.22-25.1.el6.x86_64.rpm               | 163 kB     00:00
--------------------------------------------------------------------------------
Total                                           887 kB/s | 6.0 MB     00:06
Running rpm_check_debug
Running Transaction Test
Transaction Test Succeeded
Running Transaction
  Installing : apr-1.3.9-5.el6_2.x86_64                               1/26
  ...
  Installing : otrs-x.x.x-01.noarch                                   26/26
Check OTRS user ... otrs added.

...

shell>
        ]]></screen>
    </para>

    <para>
        Now restart Apache with the command <command>systemctl restart
httpd.service</command> to load the configuration changes for OTRS.
    </para>
    </section>

    <section id="rhel-installation-perl-modules">
        <title>Kusakinisha moduli za perl za ziada.</title>
        <para>OTRS inahitaji baadhi ya moduli zaidi ya zilizosakinishwa na RPM. Unaweza
kuzisakinisha baadaye kwa mikono. Unaweza kuona moduli gani unakosa kwa
kuanzisha hati <filename>bin/otrs.CheckEnvironment.pl</filename> iliyopo kwenye
mpangilio orodha <filename>/opt/otrs</filename>. Baadhi ya moduli
zinahitajika tu kwa ajili ya sifa za hiari, kama mawasiliano na seva ya (za)
IMAP au uzalishaji wa PDF. Kwenye Redhat au CentOS tunashauri kusakinisha
hizi moduli kutoka kwenye hifadhi ya EPEL,  hifadhi inayodumishwa na mradi
wa Fedora, ambayo inatoa vifurushi vya ubora wa juu kwa ajili ya RHEL na
vipngele vyake. Kwa taarifa zaidi angalia <ulink
url="http://fedoraproject.org/wiki/EPEL">tovuti ya EPEL </ulink>.
        </para>

        <para>
            If you're on RHEL 7 or CentOS 7, you can get the latest package for EPEL
from <ulink url="https://download.fedoraproject.org/pub/epel/7/x86_64/">this
site</ulink>.  You can add this repository to yum it in one go by copying
the RPM URL you find on this page and executing this command:
        </para>

        <para>
            <screen><![CDATA[
shell> yum -y install http://download.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm

...

Installed:
  epel-release.noarch 0:7-8

Complete!
            ]]></screen>
        </para>
        <para>
            Mara ya kwanza kutumia yum baada ya kuongeza hifadhi hii, utaombwa kuweka
ufunguo wake. Sasa unaweza kusakinisha moduli zinazokosekana kama hapa
chini:
        </para>
        <para>
            <screen><![CDATA[
shell> yum -y install "perl(Text::CSV_XS)"

...

Installed:
  perl-Text-CSV_XS.x86_64 0:0.85-1.el6

Complete!
shell>
            ]]></screen>
        </para>

        <para>
        Hatua inayofuata ni kusanidi OTRS kwa kutumia kisakinishi cha wavuti, kama
ilivyoelezewa <link linkend="web-installer">katika kifungu hiki</link>.
        </para>

        <para>
            Now you can start the OTRS daemon and activate corresponding watchdog cron
job (this must be done by the <literal>otrs</literal> user):
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
shell> /opt/otrs/bin/Cron.sh start
            ]]></screen>
        </para>

        <para>
            That's it, congratulations!
        </para>
    </section>

    <section id="rhel-installation-dbd-oracle">
        <title>Usakinishaji wa kiendeshi cha hifadhidata ya Oracle kwenye Red Hat / CentOS</title>
        <para>
            Kama unataka kutumia OTRS kwenye hifadhidata Oracle, utahitaji
kukusanya-zalisha na kusakinisha kiendeshi cha hifadhidata
<application>DBD::Oracle</application>. Hii ni ngumu kidogo kusakinisha
zaidi ya vifurushi vingine; hii ni kwasababu Oracle ni hifadhidata
inayomilikiwa kibinafsi na si mradi wa Red Hat wala Centos unaruhusiwa
kusambaza viendeshi katika hifadhi zao za RPM.
        </para>
        <para>
            Kwanza kabisa tutahitaji kusakinisha <application>gcc</application>,
<application>make</application> na <application>CPAN</application> ili
tuweze kukusanya-zalisha na kusakinisha kiendeshi. Chini unaona amri katika
CentOS; katika matoleo mengine inaweza kuonekana tofauti kidogo.
        </para>

        <para>
            <screen><![CDATA[
shell> yum -y install gcc make "perl(CPAN)"
            ]]></screen>
        </para>

        <para>
            Hatua inayofuata ni kupata na kusakinisha programu ya hifadhidata. Kwa hili
utahitaji kujiunga kwa ajili ya akaunti ya bure katika tovuti ya
Oracle. Unaweza kupakua viendeshi katika ukurasa huu: <ulink
url="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html">
http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html</ulink>
Tafadhali chagua toleo la x86 au x86-64  la Linux kwa kutegemea na muundo wa
mfumo wako. Unaweza kukagua hili kwa kutumia <command>uname -i</command>. Ni
aidha 'x86_64' kwa ajili ya x86-64 au 'i386' kwa ajili ya x86. Unatakiwa
kupakua vifurushi 'Instant Client Package - Basic', 'Instant Client Package
- SQL*Plus', na 'Instant Client Package - SDK'. Zihifadhi mahali kwenye
diski yako. Sasa kama mtumiaji mzizi unaweza kusakinisha vifurushi hivyo kwa
kutumia amri ifuatayo:
        </para>
        <para>
            <screen><![CDATA[
shell> yum install oracle-instantclient*
            ]]></screen>
        </para>
        <para>
            Baada ya hii unatakiwa kuseti vishika nafasi vya mazingira viwili na
kusanya-zalisha kiendeshi cha DBD::Oracle. Kwa mara nyingine, fanya kazi
hizi kama mtumiaji mzizi. Hatua zimeorodheshwa chini. Tafadhali tambua kwa
ajili ya ufupisho baadhi ya mistari iliyotolewa na amri imeondolewa.
        </para>
        <para>
            <screen><![CDATA[
shell> export ORACLE_HOME=/usr/lib/oracle/11.2/client64
shell> export LD_LIBRARY_PATH=$ORACLE_HOME/lib
shell> cpan
cpan[1]> look DBD::Oracle
...
Fetching with LWP:
  http://www.perl.org/CPAN/authors/id/P/PY/PYTHIAN/CHECKSUMS
Checksum for /root/.cpan/sources/authors/id/P/PY/PYTHIAN/DBD-Oracle-1.62.tar.gz ok
Scanning cache /root/.cpan/build for sizes
DONE
...
Working directory is /root/.cpan/build/DBD-Oracle-1.62-ZH6LNy
[root@localhost DBD-Oracle-1.62-ZH6LNy]# perl Makefile.PL
...
[root@localhost DBD-Oracle-1.62-ZH6LNy]# make
...
[root@localhost DBD-Oracle-1.62-ZH6LNy]# make install
...
cpan[2]> exit
Terminal does not support GetHistory.
Lockfile removed.
            ]]></screen>
        </para>

    <para>
    Now you should edit the file <filename>Kernel/Config.pm</filename> to
provide ORACLE_HOME.  The next step is to configure OTRS using the web
installer, as described <link linkend="web-installer">in this
section</link>.
    </para>

    <note>
        <para>Please note that OTRS requires utf8 as database storage encoding.</para>
    </note>

    </section>

</section>

<section id="installation-on-debian">
    <title>Kusakinisha OTRS kwenye mfumo wa Debian au Ubuntu</title>
    <important>
        <para>
            Tafadhali sakinisha OTRS <link linkend="manual-installation-of-otrs">kutoka
kwenye chanzo</link>, na usitumie vifurushi vya OTRS ambavyo vinatolewa na
Debian/Ubuntu.
        </para>
    </important>
    <para>
        The installation of required Perl modules is easier if you use the available
packages:
    </para>
    <para>
        <screen><![CDATA[
apt-get install libapache2-mod-perl2 libdbd-mysql-perl libtimedate-perl libnet-dns-perl libnet-ldap-perl \
    libio-socket-ssl-perl libpdf-api2-perl libdbd-mysql-perl libsoap-lite-perl libtext-csv-xs-perl \
    libjson-xs-perl libapache-dbi-perl libxml-libxml-perl libxml-libxslt-perl libyaml-perl \
    libarchive-zip-perl libcrypt-eksblowfish-perl libencode-hanextra-perl libmail-imapclient-perl \
    libtemplate-perl
        ]]></screen>
    </para>
</section>

</section>
