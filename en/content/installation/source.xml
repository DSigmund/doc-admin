<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<section id="manual-installation-of-otrs">

    <title>Installation From Source (Linux, Unix)</title>

    <section role="NotInToc" id="installation-disable-selinux">
        <title>Preparation: Disable SELinux</title>
        <note>
            <para>
                If your system uses SELinux, you should disable it, otherwise OTRS will not work correctly.
            </para>
        </note>
        <para>
            Here's how to disable SELinux for RHEL/CentOS/Fedora:
            <itemizedlist>
                <listitem>
                    <para>
                        Configure SELINUX=disabled in the /etc/selinux/config file:
                    </para>
                    <para>
                        <screen><![CDATA[
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#       enforcing - SELinux security policy is enforced.
#       permissive - SELinux prints warnings instead of enforcing.
#       disabled - No SELinux policy is loaded.
SELINUX=disabled
# SELINUXTYPE= can take one of these two values:
#       targeted - Targeted processes are protected,
#       mls - Multi Level Security protection.
SELINUXTYPE=targeted
                        ]]></screen>
                    </para>
                </listitem>
                <listitem>
                    <para>
            Reboot your system. After reboot, confirm that the getenforce command returns <literal>Disabled</literal>:
                    </para>
                    <para>
                    <screen><![CDATA[
shell> getenforce
Disabled
                        ]]></screen>
                    </para>
                </listitem>
            </itemizedlist>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 1: Unpack and Install the Application</title>

        <para>
        Unpack the source archive (for example, using <command>tar</command>) into the directory <filename>/opt</filename>, and rename the directory from otrs-x.x.x to otrs (see Script below).
        </para>

        <para>
        <screen><![CDATA[
shell> tar xzf /tmp/otrs-x.x.x.tar.gz
shell> mv otrs-x.x.x /opt/otrs
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="installation-of-perl-modules">
        <title>Step 2: Install Additional Programs and Perl Modules</title>
        <para>
            Use the following script to get an overview of all installed and
            required CPAN modules and other external dependencies.
        </para>

        <para>
            <screen><![CDATA[
shell> perl /opt/otrs/bin/otrs.CheckEnvironment.pl
Checking for Perl Modules:
  o Archive::Tar.....................ok (v1.90)
  o Archive::Zip.....................ok (v1.37)
  o Crypt::Eksblowfish::Bcrypt.......ok (v0.009)
...
            ]]></screen>
        </para>

        <note>
            <para>
                Please note that OTRS requires a working Perl installation with all "core" modules such as the module
                <literal>version</literal>. These modules are not explicitly checked by the script.
                You may need to install a <literal>perl-core</literal> package on some systems
                like RHEL that do not install the Perl core packages by default.
            </para>
        </note>

    </section>

    <section role="NotInToc">
        <title>Step 3: Create the OTRS User</title>
        <para>
            Create a dedicated user for OTRS:
        </para>
        <para>
            <screen><![CDATA[
shell> useradd -d /opt/otrs -c 'OTRS user' otrs
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 4: Activate the Default Config File</title>
        <para>
            There is one OTRS config file bundled in <filename>$OTRS_HOME/Kernel/Config.pm.dist</filename>.
            You must activate it by copying it without the ".dist" filename extension.
        </para>
        <para>
            <screen><![CDATA[
shell> cp /opt/otrs/Kernel/Config.pm.dist /opt/otrs/Kernel/Config.pm
    ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="web-server-configuration">
        <title>Step 5: Configuring the Apache web server</title>

        <para>
            OTRS comes with an own built-in web server that is used behind apache as a reverse proxy (or any other reverse proxy server). A few apache modules are needed for correct operation: <literal>proxy_module</literal>, <literal>proxy_http_module</literal> and <literal>proxy_wstunnel_module</literal>.
        </para>

        <para>
            <screen><![CDATA[
# On some systems like Debian and SuSE, these modules need to be specifically enabled:

a2enmod proxy
a2enmod proxy_http
a2enmod proxy_wstunnel
        ]]></screen>
        </para>

        <para>
            Most <application>Apache</application>  installations have a <filename>conf.d</filename> directory included.
            On Linux systems you can usually find this directory  under <filename>/etc/apache</filename> or <filename>/etc/apache2</filename>.
            Log in as root, change to the <filename>conf.d</filename> directory and link the appropriate template in
            <filename>/opt/otrs/scripts/apache2-httpd.include.conf</filename> to a file called <filename>zzz_otrs.conf</filename>
            in the Apache configuration directory (to make sure it is loaded after the other configurations).
        </para>

        <para>
            <screen><![CDATA[
# Debian/Ubuntu:
shell> ln -s /opt/otrs/scripts/apache2-httpd.include.conf /etc/apache2/sites-enabled/zzz_otrs.conf
        ]]></screen>
        </para>

        <para>
            Now you can restart your web server to load the new configuration settings.
            On most systems you can do that with the command <command>systemctl restart apache2.service</command>.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 6: File Permissions</title>
        <para>
            Please execute the following command as root user to set the file and directory permissions for OTRS.
            It will try to detect the correct user and group settings needed for your setup.
        </para>

        <para>
        <screen><![CDATA[
shell> cd /opt/otrs/
shell> bin/otrs.SetPermissions.pl
        ]]></screen>
        </para>
    </section>

    <section role="NotInToc" id="database-configuration">
        <title>Step 7: Database Setup and Basic System Configuration</title>
        <para>
            Please use the web installer at <ulink url="http://localhost/otrs/installer.pl">http://localhost/otrs/installer.pl</ulink> (replace "localhost" with your OTRS hostname) to setup your database and basic system settings such as email accounts.
        </para>
        <note>
            <para>
                The following configuration settings are recommended for MySQL setups. Please add the following
                lines to <filename>/etc/my.cnf</filename> under the [mysqld] section:
            </para>
            <para>
                <screen><![CDATA[
max_allowed_packet   = 64M
query_cache_size     = 32M
innodb_log_file_size = 256M
                ]]></screen>
            </para>
        </note>
        <note>
            <para>Please note that OTRS requires utf8 as database storage encoding.</para>
        </note>
    </section>

    <section role="NotInToc">
        <title>Step 8: Start the OTRS Daemon and Web Server</title>

        <para>
            The new OTRS daemon is responsible for handling any asynchronous and recurring tasks in OTRS. The built-in OTRS web server process handles the web requests handed over from Apache. Both processes must be started from
            the <literal>otrs</literal> user.
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/otrs.Daemon.pl start
shell> /opt/otrs/bin/otrs.WebServer.pl
            ]]></screen>
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 9: First login</title>
        <para>
            Now you are ready to login to your system at <ulink url="http://localhost/otrs/index.pl">http://localhost/otrs/index.pl</ulink> with the credentials you configured in the web installer (User: root@localhost).
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 10: Cron jobs for the OTRS user</title>
        <para>
            There are two default OTRS cron files in <filename>/opt/otrs/var/cron/*.dist</filename>,
            and their purpose is to make sure that the OTRS Daemon is running.
            They need to be be activated by copying them without the ".dist" filename extension.
        </para>

        <para>
            <screen><![CDATA[
shell> cd /opt/otrs/var/cron
shell> for foo in *.dist; do cp $foo `basename $foo .dist`; done
            ]]></screen>
        </para>

        <para>
            To schedule these cron jobs on your system, you can use the script <filename>Cron.sh</filename>
            with the <literal>otrs</literal> user.
        </para>

        <para>
            <screen><![CDATA[
shell> /opt/otrs/bin/Cron.sh start

# Stopping the cron jobs is also possible (useful for maintenance):
shell> /opt/otrs/bin/Cron.sh stop
            ]]></screen>
        </para>

        <para>
            With this step, the basic system setup is finished.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 11: Setup bash autocompletion (optional)</title>
        <para>
            All regular OTRS commandline operations happen via the otrs Console interface
            <filename>bin/otrs.Console.pl</filename>. This provides an auto completion
            for the bash shell which makes finding the right command and options much easier.
        </para>
        <para>
            You can activate the bash autocompletion by installing the package <literal>bash-completion</literal>.
            It will automatically detect and load the file <filename>/opt/otrs/.bash_completion</filename> for the <literal>otrs</literal> user.
        </para>
        <para>
            After restarting your shell, you can just type <filename>bin/otrs.Console.pl</filename> followed by TAB,
            and it will list all available commands. If you type a few characters of the command name, TAB will show
            all matching commands. After typing a complete command, all possible options and arguments will be shown
            by pressing TAB.
        </para>
    </section>

    <section role="NotInToc">
        <title>Step 12: Further Information</title>
        <para>
            We advise you to read the OTRS <link linkend="performance-tuning">performance tuning chapter</link>.
        </para>
        <para>
            Please have a look at the list of <link linkend="additional-resources">additional resources</link> for information about OTRS Group, the creator of and service provider for <ulink url="https://www.otrs.com">OTRS</ulink>, and futher resources.
        </para>
    </section>

</section>
