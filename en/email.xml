<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- $Id: email.xml,v 1.6 2005-09-21 09:26:39 cs Exp $ -->

<chapter id="email">
<title>Sending/Receiving emails</title>

<sect1 id="email-sending">
<title>Sending emails</title>

<sect2 id="email-sending-sendmail">
<title>Via Sendmail (default)</title>

<para>
OTRS can send out emails via Sendmail (e. g.
 <ulink url="http://www.sendmail.org/">Sendmail</ulink>,
 <ulink url="http://www.postfix.org/">Postfix</ulink>,
 <ulink url="http://www.qmail.org">Qmail</ulink> or
 <ulink url="http://www.exim.org">Exim</ulink>).
The default configuration to use Sendmail should work out of the box.
</para>

<para>
You can configure the sendmail settings via the graphical configuration
frontend (Framework::Core::Sendmail) or via
<filename>Kernel/Config.pm</filename>:
</para>

<para>
<programlisting>
    # SendmailModule
    # (Where is sendmail located and some options.
    # See 'man sendmail' for details.)
    $Self-&gt;{'SendmailModule'} = 'Kernel::System::Email::Sendmail';
    $Self-&gt;{'SendmailModule::CMD'} = '/usr/sbin/sendmail -t -i -f ';
</programlisting>
</para>

</sect2>

<sect2 id="email-sending-smtp">
<title>Via SMTP relay/smarthost</title>

<para>
OTRS can send out emails via SMTP (
<ulink url="http://www.ietf.org/rfc/rfc821.txt">Simple Mail Transfer Protocol / RFC 821</ulink>).
This settings will mostly be needed on non unix platforms (e. g. win32).
</para>

<para>
The sendmail settings for a smarthost can be configured either via the
graphical administration frontend (Framework::Core::Sendmail) or via
<filename>Kernel/Config.pm</filename>:
</para>

<para>
<programlisting>
    # SendmailModule
    $Self-&gt;{"SendmailModule"} = "Kernel::System::Email::SMTP";
    $Self-&gt;{"SendmailModule::Host"} = "mail.example.com";
    $Self-&gt;{"SendmailModule::AuthUser"} = "";
    $Self-&gt;{"SendmailModule::AuthPassword"} = "";
</programlisting>
</para>
</sect2>

</sect1>

<sect1 id="email-receiving">
<title>Receiving emails</title>

<sect2 id="email-receiving-pop3">
<title>Via POP3 accounts - the easy way (PostMasterPOP3.pl)</title>

<para>
OTRS is able to receive emails from POP3 accounts.
</para>

<para>
Configure your POP3 accounts via the admin interface (POP3 Account).
</para>

<para>
<screenshot>
<screeninfo>Configure your POP3 accounts</screeninfo>
<graphic srccredit="Adminarea postmasterpop3 - screenshot" scale="40" fileref="screenshots/admin-postmasterpop3.png"></graphic>
</screenshot>
</para>

<para>
If a new POP3 account is created a POP3 server, a username and password
must be specifyed. If you select "Yes" for "Trusted", the X-OTRS headers
are evaluated and executed if such headers are in the incoming message.
Because the X-OTRS header can execute some actions in the ticket system you
should "Trusted" only set to "Yes" for such senders that are known very
well. X-OTRS-Header are used by the

<link linkend="adminarea-postmasterfilter">
filter module
</link>

in OTRS. The X-OTRS headers are explained

<link linkend="table-of-x-otrs-headers">
in this table
</link>


more detailed. If you have created filter rules they are executed and used
even if "Trusted" is set to "Yes".
</para>

<para>
Also the distribution of incoming messages can be controled if they shall
be sorted by queue or by the content of the To: field. If "Dispatching by
selected queue" is selected for "Dispatching" all incomming messages will
be sorted into the queue that can be specified also. The address, where the
mail was sent to, doesn't matter. If "Dispatching by email To: field" was
selected for "Dispatching", the system checks if a queue is linked with the
address in the To: field of the incoming mail. A address can be linked in
the

<link linkend="adminarea-emailaddresses">
mailaddress management
</link>

section of the admin area. Is the address in the To field linked with a
queue, the new message will be sorted into the linked queue. Can no link
between the address in the To: field and queue be found, the message is
sorted into the "Raw" queue in the system, which is the

<link linkend="Ticket:Core::PostMaster:PostmasterDefaultQueue">
PostmasterDefaultQueue
</link>

after a default installation.
</para>

<para>
All data for the POP3 accounts are saved in the database of OTRS. The
<filename>PostMasterPOP3.pl</filename>, script which is located in the
<filename>bin</filename> directory of your OTRS installation, uses the
settings in the database and fetches the mails. You can execute
<filename>./bin/PostMasterPOP3.pl</filename> manualy to check if all your
POP3 settings are working properly. If you want to fetch your mails
automaticly every ten minutes, you can use a

<link linkend="cronjobs">
cron job
</link>

and the example entries that are available in the file
<filename>var/cron/postmaster_pop3.dist</filename>.
</para>
</sect2>

<sect2 id="email-receiving-cmd">
<title>Via command line program and e. g. procmail (PostMaster.pl)</title>

<para>
If POP3 can't be used to get the emails into OTRS, the commandline
programm <filename>bin/PostMaster.pl</filename> might be a solution.
<filename>bin/PostMaster.pl</filename> takes the mails via STDIN and pipes
them directly into OTRS. That means emails will be shown in your OTRS system
if the MDA (mail delivery agent, e. g. procmail) executes
<filename>bin/PostMaster.pl</filename>
</para>

<para>
To test <filename>bin/PostMaster.pl</filename> without MDA on the command
line execute the following command:
</para>

<para>
<screen>
linux:/opt/otrs# cd bin
linux:/opt/otrs/bin# cat ../doc/test-email-1.box | ./PostMaster.pl
linux:/opt/otrs/bin#
</screen>
</para>

<para>
If the email is shown in the QueueView then your setup works fine.
</para>

<para>
Procmail is a very common e-mail filter in the Linux enviroment. It will be
installed on most systems. If not, have a look at the
<ulink url="http://www.procmail.org/"><citetitle>procmail homepage</citetitle></ulink>.
</para>

<para>
To configure procmail for OTRS (requires a procmail configured MTA (e. g.
sendmail,  postfix, exim or qmail)) use the
<filename>~otrs/.procmailrc.dist</filename> file and copy it to
<filename>.procmailrc</filename>. Add the following:
</para>

<para>
<programlisting>
SYS_HOME=$HOME
PATH=/bin:/usr/bin:/usr/local/bin
# --
# Pipe all email into the PostMaster process.
# --
:0 :
| $SYS_HOME/bin/PostMaster.pl
</programlisting>
</para>

<para>
All emails sent to the local otrs user will be piped into
<filename>bin/PostMaster.pl</filename> and then shown in your QueueView.
</para>
</sect2>

<sect2 id="email-receiving-fetchmail">
<title>Fetching emails via POP3 or IMAP and fetchmail for PostMaster.pl</title>

<para>
In order to get e-mails from your mail server via a POP3 or IMAP mailbox to
the OTRS machine/local otrs account and to procmail use
<ulink url="http://www.tuxedo.org/~esr/fetchmail/">fetchmail</ulink>.
</para>

<note>
<para>
A working SMTP configuration on the OTRS machine is required.
</para>
</note>

<para>
You can use the <filename>.fetchmailrc.dist</filename> in the home
directory of OTRS and copy it to <filename>.fetchmailrc</filename>.
Modfiy/change it for your needs.
</para>

<example id='fetchmailrc'>
<title>.fetchmailrc</title>

<para>
<programlisting>
#poll (mailserver) protocol POP3 user (user) password (password) is (localuser)
poll mail.example.com protocol POP3 user joe password mama is otrs
</programlisting>
</para>

</example>

<para>
Don't forget to set the .fetchmailrc to 710 ("chmod 710 .fetchmailrc")!
</para>

<para>
With the <filename>.fetchmailrc</filename> from the example above, all e-mails
will be forwarded to the local otrs account, if the command
<command>fetchmail -a</command> is executed. Setup a cronjob with this
command, if you want to fetch the mails regularyly.
</para>
</sect2>

<sect2 id="email-receiving-filter">
<title>Filtering/dispatching by OTRS/PostMaster modules (for more complex
dispatching)</title>

<para>
If you use the bin/PostMaster.pl or bin/PostMasterPOP3.pl method, you can
insert or modify X-OTRS header entries with the PostMaster filter modules.
With the X-OTRS headers the ticket system can execute some actions on
incomming mails, sort them into a specific queue, change the priority oder
change the customer ID for example. More information about the X-OTRS
headers are available in the chapter about

<link linkend="adminarea-postmasterpop3-account">
adding POP3 accounts
</link>

in the admin area of OTRS.
</para>

<para>
There exist some default filter modules:
</para>

<note>
<para>
The job name (e. g.
$Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'JobName'}) needs to be unique!
</para>
</note>

<para>
Kernel::System::PostMaster::Filter::Match is a default module to
match on some email header (e. g. From, To, Subject, ...). It can set
new email headers (e. g. X-OTRS-Ignore: yes or X-OTRS-Queue: spam) if a
filter rule matches. The following example jobs can be inserted in
<filename>Kernel/Config.pm</filename>
</para>

<example id='filter-module-match-example'>
<title>Example jobs for the filter module Kernel::System::PostMaster::Filter::Match</title>

<para>
<programlisting>
    # Job Name: 1-Match
    # (block/ignore all spam email with From: noreply@)
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'1-Match'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::Match',
        Match =&gt; {
            From =&gt; 'noreply@',
        },
        Set =&gt; {
            'X-OTRS-Ignore' =&gt; 'yes',
        },
    };
    # Job Name: 2-Match
    # (sort emails with From: sales@example.com and Subject: **ORDER**
    # into queue 'Order')
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'2-Match'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::Match',
        Match =&gt; {
            To =&gt; 'sales@example.com',
            Subject =&gt; '**ORDER**',
        },
        Set =&gt; {
            'X-OTRS-Queue' =&gt; 'Order',
        },
    };
</programlisting>
</para>

</example>

<para>
Kernel::System::PostMaster::Filter::CMD is a default module to
pipe the email into an external command. The output is given to STDOUT and
if the result is true, then set new email header (e. g. X-OTRS-Ignore: yes
or X-OTRS-Queue: spam). The following example can be used in
<filename>Kernel/Config.pm</filename>
</para>

<example id='filter-module-cmd-example'>
<title>Example job for the filter module Kernel::System::PostMaster::Filter::CMD</title>

<para>
<programlisting>
    # Job Name: 5-SpamAssassin
    # (SpamAssassin example setup, ignore spam emails)
    $Self-&gt;{'PostMaster::PreFilterModule'}-&gt;{'5-SpamAssassin'} = {
        Module =&gt; 'Kernel::System::PostMaster::Filter::CMD',
        CMD =&gt; '/usr/bin/spamassassin | grep -i "X-Spam-Status: yes"',
        Set =&gt; {
            'X-OTRS-Ignore' =&gt; 'yes',
        },
    };
</programlisting>
</para>

</example>

<para>
Ofcourse it's also possible to develop own PostMaster filter modules.
</para>

</sect2>

</sect1>

</chapter>
