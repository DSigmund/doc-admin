<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
  "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<!-- $Id: installation-and-basic-configuration.xml,v 1.45 2010-11-10 13:17:23 mb Exp $ -->

<chapter id="installation-and-basic-configuration">
<title>Installation / Upgrade of the OTRS framework</title>

<abstract>
<para>
This chapter describes the installation and the basic configuration of the
central OTRS framework. You'll find information about installing OTRS
from source or with a binary package, for example an RPM or with the
Windows Installer.
</para>

<para>
The configuration of the web and database servers, the interface between
OTRS and the database, the installation of additional Perl modules, setting
proper access rights for OTRS, setting up the cron jobs for OTRS and some
basic settings in the configuration files of OTRS are covered in this chapter.
</para>

<para>
When you follow the steps in this chapter, you will have a running OTRS
system installed on your computer, where you can login and
administrate the system via the web interface.
</para>
</abstract>

<section id="installation-of-prepared-packages">
<title>The simple way - Installation of pre-built packages</title>

<para>
The simplest and most comfortable way to install OTRS is to use pre-built
packages. You can find them in the download area on

<ulink url="http://www.otrs.org">
<citetitle>http://www.otrs.org</citetitle>
</ulink>

. The following sections describe the installation of OTRS with a pre-built
or binary package on SUSE, Debian and Microsoft Windows systems. Use
pre-built packages to install OTRS and only setup OTRS manually, if you have
no other possibility.
</para>

<section id="installation-on-suse">
<title>Installing the rpm on a SUSE Linux server</title>

<para>
This section describes the installation of a pre-built rpm package on a SUSE
Linux distro. We tested all recent SLES and OpenSUSE versions. Before you
start the installation please have a look on

<ulink url="http://www.otrs.org/download">
<citetitle>http://www.otrs.org/download</citetitle>
</ulink>

and check, if a newer OTRS rpm package is available. Please use the newer
rpm package, if available.
</para>

<para>
Please install OTRS with <application>yast</application> (yast2) or via
the command line and <command>rpm</command>. Because OTRS needs some Perl
modules which are not installed on a SUSE system by default, we recommend
to use <application>yast</application>, because it solves the package
dependencies automatically.
</para>

<para>
If you decide to install OTRS via the command line and
<application>rpm</application>, first you have to manually install the needed
Perl modules. Assuming you saved the file
<filename>otrs.rpm</filename> into the directory
<filename>/tmp</filename>, you can execute the command specified in the Script 3.1
to install OTRS.
</para>

<para>
Note: If you install it on SLES9 or OES, follow this description to
install the missing perl-GD packages. http://faq.otrs.org/otrs/public.pl?FAQID=49
</para>

<para>
<screen>
linux:~ # rpm -i /tmp/otrs-xxx.rpm
otrs                        ##################################################
Check OTRS user (/etc/passwd)... otrs exists.

Next steps:

[SuSEconfig]
 Execute 'SuSEconfig' to configure the web server.

[start Apache and MySQL]
 Execute 'rcapache restart' and 'rcmysql start' in case they don't run.

[install the OTRS database]
 Use a web browser and open this link:
 http://localhost/otrs/installer.pl

[OTRS services]
 Start OTRS 'rcotrs start-force' (rcotrs {start|stop|status|restart|start-force|stop-force}).

Have fun!

 Your OTRS Team
 http://otrs.org/

linux:~ #
</screen>
</para>

<para>
    <emphasis>Script 3.1. Command to install OTRS.</emphasis>
</para>

<para>
After the installation of the OTRS rpm package, you have to run
<application>SuSEconfig</application>, as shown in the Script 3.2.
</para>

<para>
<screen>
linux:~ # SuSEconfig
Starting SuSEconfig, the SuSE Configuration Tool...
Running in full featured mode.
Reading /etc/sysconfig and updating the system...
Executing /sbin/conf.d/SuSEconfig.aaa_at_first...
Executing /sbin/conf.d/SuSEconfig.apache...
Including /opt/otrs/scripts/apache-httpd.include.conf
Executing /sbin/conf.d/SuSEconfig.bootsplash...
Executing /sbin/conf.d/SuSEconfig.doublecheck...
Executing /sbin/conf.d/SuSEconfig.guile...
Executing /sbin/conf.d/SuSEconfig.hostname...
Executing /sbin/conf.d/SuSEconfig.ispell...
Executing /sbin/conf.d/SuSEconfig.perl...
Executing /sbin/conf.d/SuSEconfig.permissions...
Executing /sbin/conf.d/SuSEconfig.postfix...
Setting up postfix local as MDA...
Setting SPAM protection to "off"...
Executing /sbin/conf.d/SuSEconfig.profiles...
Finished.
linux:~ #
</screen>
</para>

<para>
    <emphasis>Script 3.2. Running the SuSEconfig command.</emphasis>
</para>

<para>
The installation of the OTRS rpm is finished. Restart your web server to
load the OTRS specific changes in its configuration, as shown in the
Script 3.3.
</para>

<para>
<screen>
linux:~ # rcapache restart
Shutting down httpd                                         done
Starting httpd [ PERL ]                                     done
linux:~ #
</screen>
</para>

<para>
    <emphasis>Script 3.3. Restarting the web server.</emphasis>
</para>

<para>
In the next step you have to setup the OTRS database, as described in the
<link linkend="database-configuration">
section 3.2.4.
</link>
</para>

</section>

<section id="installation-on-centos">
<title>Installing OTRS on a CentOS system</title>

<para>
On the OTRS Wiki you can find detailed instructions for setting up OTRS on a
CentOS system. Please note that these instructions will also apply to RedHat
systems as those use the same source:

<ulink url="http://wiki.otrs.org/index.php?title=Installation_of_OTRS_3.0b1_on_CentOS_5.5">
http://wiki.otrs.org/index.php?title=Installation_of_OTRS_3.0b1_on_CentOS_5.5
</ulink>
.
</para>

</section>
<section id="installation-on-debian">
<title>Installing OTRS on a Debian system</title>

<para>
On the OTRS Wiki you can find detailed instructions for setting up OTRS on a Debian system:
<ulink url="http://wiki.otrs.org/index.php?title=Installation_on_Debian_5.04_lenny">
http://wiki.otrs.org/index.php?title=Installation_on_Debian_5.04_lenny
</ulink>
.
</para>

</section>

<section id="installation-on-ubuntu">
<title>Installing OTRS on a Ubuntu system</title>

<para>
On the OTRS Wiki you can find detailed instructions for setting up OTRS on an Ubuntu system:
<ulink url="http://wiki.otrs.org/index.php?title=Installation_on_Ubuntu_Lucid_Lynx_(10.4)">
http://wiki.otrs.org/index.php?title=Installation_on_Ubuntu_Lucid_Lynx_(10.4)
</ulink>

.
</para>

</section>

<section id="installation-on-windows">
<title>Installing OTRS on Microsoft Windows systems</title>

<para>
Installing OTRS on a Microsoft Windows system is very easy. Download the latest
installer for Win32 from

<ulink url="http://www.otrs.org/download/">
<citetitle>http://www.otrs.org/download/</citetitle>
</ulink>

and save the file to your local file system. Then simply click on the file
to execute the installer, follow the few installation steps to setup the
system. After that you will be able to login as OTRS administrator and
configure the system according to your needs. To log in as OTRS administrator
use the username root@localhost and the default root password.
</para>

<warning>
<para>
Please change the password for the root@localhost account as soon as possible.
</para>
</warning>

<important>
<para>
The Win32 installer for OTRS contains all needed components for OTRS,
i.e. the <application>apache2</application>
web server, the <application>MySQL</application> database server,
<application>Perl</application> (with all needed modules) and
<application>cron</application> for Windows will be installed. For that reason
you should only install OTRS on Windows systems that don't already have
 <application>apache2</application> or another web server and
<application>MySQL</application> installed.
</para>
</important>

</section>

</section>

<section id="manual-installation-of-otrs">
<title>Installation from source (Linux, Unix)</title>

<section id="preparing-manual-installation">
<title>Preparing the installation from source</title>

<para>
If you want to install OTRS from source, first download the source archive as .tar.gz,
.tar.bz2, or .zip file from

<ulink url="http://www.otrs.org/download/">
<citetitle>http://www.otrs.org/download/</citetitle>
</ulink>
</para>

<para>
Unpack the archive for example with <command>tar</command> into the
directory <filename>/opt</filename> and rename the directory from otrs-3.0 to otrs
(see Script 3.4 below).
</para>

<para>
<screen>
linux:/opt# tar xf /tmp/otrs-3.0.tar.gz
linux:/opt# mv otrs-3.0 otrs
linux:/opt# ls
otrs
linux:/opt#
</screen>
</para>

<para>
    <emphasis>Script 3.4. Firsts steps to install OTRS.</emphasis>
</para>

<para>
Because the modules of OTRS should not be executed with root rights, you should add a new
user for OTRS as the next step. The home directory of this
new user should be <filename>/opt/otrs</filename>. If your web server is not
running with the same user rights as the new otrs user, which is the case
on most systems, you have to add the new otrs user to the group of the web
server user (see Script 3.5 below).
</para>

<para>
<screen>
linux:/opt# useradd -r -d /opt/otrs/ -c 'OTRS user' otrs
linux:/opt# usermod -G nogroup otrs
linux:/opt#
</screen>
</para>

<para>
    <emphasis>Script 3.5. Adding a new user and adding it to a group.</emphasis>
</para>

<para>
Now you have to copy some sample configuration files. The system will later
use the copied files. The files are located in
<filename>/opt/otrs/Kernel</filename> and
<filename>/opt/otrs/Kernel/Config</filename> and have the suffix .dist (see Script 3.6 below).
</para>

<para>
<screen>
linux:/opt# cd otrs/Kernel/
linux:/opt/otrs/Kernel# cp Config.pm.dist Config.pm
linux:/opt/otrs/Kernel# cd Config
linux:/opt/otrs/Kernel/Config# cp GenericAgent.pm.dist GenericAgent.pm
</screen>
</para>

<para>
    <emphasis>Script 3.6. Copying some sample files.</emphasis>
</para>

<para>
The last step to prepare the installation of OTRS is to set the proper
access rights for the files. You can use the script
<command>otrs.SetPermissions.pl</command>, which is located in the
<filename>bin</filename> directory, in the home directory of the OTRS user.
You can execute the script with the following parameters:
</para>

<para>
<cmdsynopsis>
  <command>otrs.SetPermissions.pl</command>
    <arg choice='req'>
      <replaceable>Home directory of the OTRS user</replaceable>
    </arg>
    <arg choice='req'>
      --otrs-user=
      <replaceable>OTRS user</replaceable>
    </arg>
    <arg choice='req'>
      --web-user=
      <replaceable>Web server user</replaceable>
    </arg>
    <arg choice='opt'>
      --otrs-group=
      <replaceable>Group of the OTRS user</replaceable>
    </arg>
    <arg choice='opt'>
      --web-group=
      <replaceable>Group of the web server user</replaceable>
    </arg>
  </cmdsynopsis>
</para>

<para>
If your web server is running with the same user rights as OTRS, the command
to set the proper access rights is <command>otrs.SetPermissions.sl
/opt/otrs --otrs-user=otrs --web-user=otrs</command>. On SUSE systems
the web server is running with the user rights of wwwrun. On Debian-based systems
this is www-data. You would use the command <command>otrs.SetPermissions.sl
/opt/otrs --otrs-user=otrs --web-user=wwwrun --otrs-group=nogroup --web-group=www</command>
to set the proper access rights.
</para>

</section>

<section id="installation-of-perl-modules">
<title>Installation of Perl modules</title>

<para>
OTRS needs some additional Perl modules, as described in the Table 3-1. If you install OTRS
from source, you'll have to install these modules manually. This can either be done with
the package manager of your Linux distribution (<application>yast</application>,
<application>apt-get</application>) or, like described in this section,
through the Perl shell and CPAN. If you're using ActiveState Perl, for instance
on Windows, you could use PPM, the built-in Perl Package Manager. If possible we advise you
to use your package manager.
</para>

<para>

<table id="table-of-needed-perl-modules">
<title>Needed Perl modules for OTRS</title>
  <tgroup cols="2">
    <thead>
      <row>
        <entry>
          Name
        </entry>
        <entry>
          Description
        </entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>
          DBI
        </entry>
        <entry>
          Establishes a connection to the database back-end.
        </entry>
      </row>
      <row>
        <entry>
          DBD::mysql
        </entry>
        <entry>
          Contains special functions to connect to the MySQL
          database back-end (only required if MySQL is used).
        </entry>
      </row>
      <row>
        <entry>
          DBD::pg
        </entry>
        <entry>
          Contains special functions to connect to the PostgreSQL
          database back-end (only required if PostgreSQL is used).
        </entry>
      </row>
      <row>
        <entry>
          Digest::MD5
        </entry>
        <entry>
          Allows the use of the md5 algorithm.
        </entry>
      </row>
      <row>
        <entry>
          CSS::Minifier
        </entry>
        <entry>
          Minifies a CSS file and writes the outpout directly to another file.
        </entry>
      </row>
      <row>
        <entry>
          Crypt::PasswdMD5
        </entry>
        <entry>
          Provides interoperable MD5-based crypt functions.
        </entry>
      </row>
      <row>
        <entry>
          MIME::Base64
        </entry>
        <entry>
          Encodes / decodes base64 strings, e.g. for mail attachments.
        </entry>
      </row>
      <row>
        <entry>
          JavaScript:Minifier
        </entry>
        <entry>
          Minifies a JavaScript file and writes the outpout directly to another file.
        </entry>
      </row>
      <row>
        <entry>
          Net::DNS
        </entry>
        <entry>
          Perl interface to the domain name system.
        </entry>
      </row>
      <row>
        <entry>
          LWP::UserAgent
        </entry>
        <entry>
          Processes HTTP requests.
        </entry>
      </row>
      <row>
        <entry>
          Net::LDAP
        </entry>
        <entry>
          Perl interface to a LDAP directory (only required a LDAP back-end is used).
        </entry>
      </row>
      <row>
        <entry>
          GD
        </entry>
        <entry>
          Interface to the GD graphics library (only required if the OTRS stats
          module is used).
        </entry>
      </row>
      <row>
        <entry>
          GD::Text, GD::Graph, GD::Graph::lines, GD::Text::Align
        </entry>
        <entry>
          Some more text- and graphic tools for the GD graphics library (only
          required if the OTRS stats module is used).
        </entry>
      </row>
      <row>
        <entry>
          PDF::API2, Compress::Zlib
        </entry>
        <entry>
          Needed to generate the PDF output for reports, search results and for the
          ticket print view.
        </entry>
      </row>
    </tbody>
  </tgroup>
</table>

</para>

<para>
You can verify which modules you need to install with
<command>otrs.checkModules</command>. This script is located in the
 <filename>bin</filename>
directory, in the home directory of the OTRS user (see Script 3.7 below).
</para>

<para>
Please note that some modules are optional.
</para>

<para>
<screen>
linux:~# cd /opt/otrs/bin/
linux:/opt/otrs/bin# ./otrs.checkModules
   o CGI............................ok (v3.49)
   o Crypt::PasswdMD5...............ok (v1.3)
   o CSS::Minifier..................ok (v0.01)
   o Date::Format...................ok (v2.24)
   o Date::Pcalc....................ok (v1.2)
   o DBI............................ok (v1.609)
   o DBD::mysql.....................ok (v4.013)
   o Digest::MD5....................ok (v2.36_01)
   o Encode::HanExtra...............ok (v0.23)
   o GD.............................ok (v2.44)
      o GD::Text....................ok (v0.86)
      o GD::Graph...................ok (v1.44)
      o GD::Graph::lines............ok (v1.15)
      o GD::Text::Align.............ok (v1.18)
   o IO::Scalar.....................ok (v2.110)
   o IO::Wrap.......................ok (v2.110)
   o JavaScript::Minifier...........ok (v1.05)
   o JSON...........................ok (v2.21)
      o JSON::PP....................ok (v2.27003)
      o JSON::XS....................Not installed! (Optional - Install it for faster AJAX/JavaScript handling.)
   o LWP::UserAgent.................ok (v5.829)
   o Mail::Internet.................ok (v2.06)
   o Mail::POP3Client...............ok (v2.18 )
      o IO::Socket::SSL.............ok (v1.31)
   o MIME::Base64...................ok (v3.07_01)
   o MIME::Tools....................ok (v5.428)
   o Net::DNS.......................ok (v0.65)
   o Net::POP3......................ok (v2.29)
   o Net::IMAP::Simple..............ok (v1.1916)
      o Net::IMAP::Simple::SSL......ok (v1.3)
   o Net::SMTP......................ok (v2.31)
      o Authen::SASL................ok (v2.15)
      o Net::SMTP::SSL..............ok (v1.01)
   o Net::LDAP......................ok (v0.4001)
   o PDF::API2......................ok (v0.73)
      o Compress::Zlib..............ok (v2.008)
   o SOAP::Lite.....................ok (v0.712)
   o Text::CSV......................ok (v1.18)
      o Text::CSV_PP................ok (v1.26)
      o Text::CSV_XS................Not installed! (Optional - Optional, install it for faster CSV handling.)
   o XML::Parser....................ok (v2.36)
linux:/opt/otrs/bin#
</screen>
</para>

<para>
    <emphasis>Script 3.7. Checking needed modules.</emphasis>
</para>

<para>
To install one of the modules from above via CPAN, you have to execute the
command <command>perl -e shell -MCPAN</command>. The Perl shell will be
started in interactive mode and the CPAN module will be loaded. If CPAN is
already configured, you can install the modules with the command
<command>install</command> followed by the name of the module. CPAN takes
care of the dependencies of a module to other Perl modules and will let you know,
if other modules are needed.
</para>


<para>
Execute also the two commands
<command>perl -cw bin/cgi-bin/index.pl</command> and
<command>perl -cw bin/otrs.PostMaster.pl</command> after changing into the
directory <filename>/opt/otrs</filename>. If the output of
both commands is "syntax OK", your Perl is properly set up (see Script 3.8 below).
</para>

<para>
<screen>
linux:~# cd /opt/otrs
linux:/opt/otrs# perl -cw bin/cgi-bin/index.pl
cgi-bin/installer.pl syntax OK
linux:/opt/otrs# perl -cw bin/otrs.PostMaster.pl
otrs.PostMaster.pl syntax OK
linux:/opt/otrs#
</screen>
</para>

<para>
    <emphasis>Script 3.8. Checking syntaxis.</emphasis>
</para>

</section>

<section id="web-server-configuration">
<title>Configuring the apache web server</title>

<para>
This section describes the basic configuration of the
<application>apache</application> web server with mod_cgi for OTRS. The web server
should be able to execute CGI scripts. OTRS won't work if the Perl scripts
cannot be parsed. Check the configuration files of your web server, and search for the
line that loads the CGI module. If you see something like the following,
the CGI module should already be in use.
</para>

<para>
LoadModule cgi_module /usr/lib/apache2/modules/mod_cgi.so
</para>


<para>
To access the web interface of OTRS comfortably, via a short address, an
Alias and a ScriptAlias entry is needed. Most
<application>apache</application>  installations have a
<filename>conf.d</filename> directory included. On linux systems you can
find this directory very often under <filename>/etc/apache</filename> or
<filename>/etc/apache2</filename>. Log in as root, change to the
<filename>conf.d</filename> directory and copy the appropriate
template in <filename>/opt/otrs/scripts/apache2-httpd.include.conf</filename>
to a file called <filename>otrs.conf</filename> in the Apache configuration directory.
</para>


<para>
Restart your web server to load the new configuration settings. On most systems you can start/restart your web server
with the command <command>/etc/init.d/apache2 restart</command>(see Script 3.11 below).
</para>

<para>
<screen>
linux:/etc/apache2/conf.d# /etc/init.d/apache2 restart
Forcing reload of web server: Apache2.
linux:/etc/apache2/conf.d#
</screen>
</para>

<para>
    <emphasis>Script 3.11. Restarting the web server.</emphasis>
</para>

<para>
Now your web server should be configured for OTRS.
</para>

<para>
If you choose to increase performance, and you can install mod_perl, then you
can leave mod_cgi off, and configure the
<application>apache</application> web server for use with mod_perl, in
the following manner.
</para>

<para>
Please ensure that mod_perl is installed and loaded, in order to take advantage of
this feature. Due to the nature of the start-up script, your server will not fail
to start, if the mod_perl is not properly loaded or compiled in your apache web server, unless
mod_cgi is also on. Technically speaking you can leave mod_cgi on as well, but you
should not.
</para>

<para>
Search your /etc/apache* directory directory for mod_perl.so (see Script 3.12 below)
to see if the module is already loaded somewhere, or not.
</para>

<para>
<screen> #:/ grep -Rn mod_perl.so /etc/apache*</screen>
</para>

<para>
    <emphasis>Script 3.12. Searching for mod_perl.</emphasis>
</para>

<para>
When you use the appropriate start script (listed above), and the module
is loaded, the script (when commented in) /opt/otrs/scripts/apache2-perl-startup.pl can be
used to load the perl modules into memory one time, saving on load times and
increasing performance.
</para>
</section>

<section id="database-configuration">
<title>Configuring the database</title>

<section id="installation-of-database-with-the-web-installer">
<title>The simple way - Using the web installer (works only with
<application>MySQL</application>)</title>

<para>
If you use <application>MySQL</application> as the database back-end, you can use
the OTRS web installer:
</para>

<para>
<ulink url="http://localhost/otrs/installer.pl">
<citetitle>http://localhost/otrs/installer.pl</citetitle>
</ulink>
</para>

<para>
When the web installer starts, please follow the next steps to setup your system:
</para>

<para>
1. Check out the information about the OTRS offices and click on next to continue (see Figure 3.1 below).
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - Welcome screen</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer1.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.1. Welcome screen.</emphasis>
</para>

<para>
2. Read the GNU Affero General Public License (see Figure 3.2 below) and accept it, by clicking the corresponding
button at the buttom of the page.
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - License (1/4)</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer2.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.2. GNU Affero General Public License.</emphasis>
</para>

<para>
3. Provide the username and password of the administrator, the ip address of the computer which
hosts OTRS and the type of database system to be used. After that, check the settings (see Figure
3.3 below).
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - Create database (2/4) initial settings</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer3.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.3. Database initial settings.</emphasis>
</para>

<para>
If the checking was successful, you will get a notification. Press ok to continue (see Figure
3.4 below).
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - Create database (2/4) successful checking notification</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer4.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.4. Successful checking notification.</emphasis>
</para>

<para>
4. Create a new database user, choose a name for the database and click on next (see Figure 3.5 below).
</para>

<warning>
<para>
It is never a good idea to use default passwords. Please change the default
password for the OTRS database!
</para>
</warning>

<para>
<screenshot>
<screeninfo>installer.pl screen - Create database (2/4) all settings</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer5.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.5. Database settings.</emphasis>
</para>

<para>
If the database and its user were successfully created, you will get a setup notification, as
shown in the Figure 3.6. Click next to go to the next screen.
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - Create Database (2/4) setup successful</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer6.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.6. Successfully database setup notification.</emphasis>
</para>

<para>
5. Provide all the required system settings and click next (see Figure 3.7 below).
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - System Settings (3/4)</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer7.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.7. System settings.</emphasis>
</para>

<para>
6. If you want, you can provide the needed data to configure your inbound and outbound mail
or skip this step by pressing the right button  at the bottom of the screen (see Figure 3.8 below).
</para>

<para>
<screenshot>
<screeninfo>installer.pl screen - Mail Configuration (3/4)</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer8.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.8. Mail configuration.</emphasis>
</para>

<para>
7. Restart the OTRS service now, to use the new configuration settings shown in the Script 3.13.
</para>

<para>
<screen>
linux:~ # rcotrs restart-force
Shutting down OTRS
 Disable /opt/otrs/bin/otrs.PostMaster.pl ... done.
no crontab for otrs
 Shutting down cronjobs ... failed!
Shutting down OTRS (completely)
 Shutting down Apache ... done.
 Shutting down MySQL ... done.
                                                                     done
Starting OTRS (completely)
 Starting Apache ... done.
 Starting MySQL ... done.
Starting OTRS
 Checking Apache ... done.
 Checking MySQL ... done.
 Checking database connect... (It looks Ok!).
 Enable /opt/otrs/bin/otrs.PostMaster.pl ... done.
 Checking otrs spool dir...  done.
 Creating cronjobs (source /opt/otrs/var/cron/*) ... done.

  -->> http://linux.example.com/otrs/index.pl &lt;&lt;--
                                                                     done
                                                                     done
linux:~ #
</screen>
</para>

<para>
    <emphasis>Script 3.13. Restarting the OTRS service.</emphasis>
</para>

<para>
Congratulations! Now the installation of OTRS is finished and you should be able to
work with the system (see Figure 3.9 below). To log into the web interface of OTRS, use the address

<ulink url="http://localhost/otrs/index.pl">
<citetitle>http://localhost/otrs/index.pl</citetitle>
</ulink>

in your web browser. Log in as OTRS administrator, using the username root@localhost
and the password root. After that you can configure the system for your needs.
</para>

<warning>
<para>
Please change the password for the root@localhost account as soon as possible.
</para>
</warning>

<para>
<screenshot>
<screeninfo>installer.pl screen - Finished (4/4)</screeninfo>
<graphic srccredit="installer.pl - screenshot" scale="40" fileref="screenshots/installer9.png"></graphic>
</screenshot>
</para>

<para>
    <emphasis>Figure 3.9. Final steps to install OTRS.</emphasis>
</para>

</section>

<section id="manual-installation-of-database">
<title>Installing the OTRS database manually</title>

<para>
If you can't use the web installer to setup the OTRS database, you have to
set it up manually. Scripts with the SQL statements to create and configure
the database are located in <filename>scripts/database</filename>, in the
home directory of the OTRS user (see Script 3.14 below).
</para>

<para>
<screen>
linux:~# cd /opt/otrs/scripts/database/
linux:/opt/otrs/scripts/database# ls
otrs-initial_insert.db2.sql         otrs-schema.mysql.sql
otrs-schema.oracle.sql
otrs-initial_insert.mssql.sql       otrs-schema-post.db2.sql
otrs-initial_insert.mysql.sql       otrs-schema.postgresql.sql
otrs-initial_insert.oracle.sql
otrs-initial_insert.postgresql.sql  otrs-schema-post.mssql.sql
otrs-initial_insert.xml             otrs-schema-post.mysql.sql
otrs-schema.db2.sql                 otrs-schema-post.oracle.sql
 otrs-schema-post.postgresql.sql
otrs-schema.mssql.sql               otrs-schema.xml
linux:/opt/otrs/scripts/database#
</screen>
</para>

<para>
    <emphasis>Script 3.14. Files needed to create and configure the database.</emphasis>
</para>

<para>
To setup the database for the different database back-ends the .sql files
must be processed in a special order.
</para>

<para>
<orderedlist numeration="arabic">
<title>Create the OTRS database manually step by step</title>
<listitem>
<para>
Creating the DB: Create the database, that you want to use for OTRS, with
your database client or your database interface.
</para>
</listitem>
<listitem>
<para>
Creating the tables: With the otrs-schema.DatabaseType.sql files
(e.g.. <filename>otrs-schema.oracle.sql</filename>,
<filename>otrs-schema.postgresql.sql</filename>) you can create the tables
in your OTRS database.
</para>
</listitem>
<listitem>
<para>
Inserting the initial system data: OTRS needs some initial system data to
work properly (e.g. the different ticket states, ticket and
notification types). Depending on the type of your database Use one of the files
<filename>otrs-initial_insert.mysql.sql</filename>,
<filename>otrs-initial_insert.db2.sql</filename>,
<filename>otrs-initial_insert.oracle.sql</filename>,
<filename>otrs-initial_insert.postgresql.sql</filename> or
<filename>otrs-initial_insert.mssql.sql </filename>.
</para>
</listitem>
<listitem>
<para>
Creating references between tables: The last step is to create the
references between the different tables in the OTRS database.
Use the otrs-schema-post.DatabaseType.sql file to create these
(e.g. <filename>otrs-schema-oracle.post.sql</filename>,
<filename>otrs-schema-post.postgresql.sql</filename>).
</para>
</listitem>
</orderedlist>
</para>

<para>
After you have finished the database setup you should check and set proper
access rights for the OTRS database. It should be enough to grant access to
one user. Depending on the database server you are using, setting up the
access rights differs, but it should be possible either with your database
client or your graphical database front-end.
</para>

<para>
If your database and the access rights are configured properly, you have
to tell OTRS which database back-end you want to use and how the ticket
system can connect to the database. Open the file
<filename>Kernel/Config.pm</filename> located in the home directory of the OTRS
user and change the parameters shown in the Script 3.15 to your needs.
</para>

<para>
<programlisting>

    # DatabaseHost
    # (The database host.)
    $Self->{'DatabaseHost'} = 'localhost';

    # Database
    # (The database name.)
    $Self->{Database} = 'otrs';

    # DatabaseUser
    # (The database user.)
    $Self->{DatabaseUser} = 'otrs';

    # DatabasePw
    # (The password of database user.)
    $Self->{DatabasePw} = 'some-pass';

</programlisting>
</para>

<para>
    <emphasis>Script 3.15. Parameters to be customized.</emphasis>
</para>

</section>

</section>

<section id="cronjobs">
<title>Setting up the cron jobs for OTRS</title>

<para>
OTRS needs some cron jobs to work properly. The cron jobs should be run
with the same user rights that were specified for the OTRS modules. That
means that the cron jobs must be inserted into the crontab file of the OTRS
user.
</para>

<para>
All scripts with the cron jobs are located in
<filename>var/cron</filename>, in the home directory of the OTRS user (see Script 3.16 below).
</para>

<para>
<screen>
linux:~# cd /opt/otrs/var/cron
linux:/opt/otrs/var/cron# ls
aaa_base.dist                generic_agent.dist       rebuild_ticket_index.dist
cache.dist                   pending_jobs.dist        session.dist
fetchmail.dist               postmaster.dist          unlock.dist
generic_agent-database.dist  postmaster_mailbox.dist
linux:/opt/otrs/var/cron#
</screen>
</para>

<para>
    <emphasis>Script 3.16. Files needed to create the cron jobs.</emphasis>
</para>

<para>
All scripts are ending in .dist. You should copy them to files with no ending.
If you are using bash, you might want to use the command listed in Script 3.17
below.
</para>

<para>
<screen>
linux:/opt/otrs/var/cron# for foo in *.dist; do cp $foo
`basename $foo .dist`; done
linux:/opt/otrs/var/cron# ls
aaa_base                generic_agent-database.dist  rebuild_ticket_index
aaa_base.dist           generic_agent.dist           rebuild_ticket_index.dist
cache                   pending_jobs                 session
cache.dist              pending_jobs.dist            session.dist
fetchmail               postmaster                   unlock
fetchmail.dist          postmaster.dist              unlock.dist
generic_agent           postmaster_mailbox
generic_agent-database  postmaster_mailbox.dist
linux:/opt/otrs/var/cron#
</screen>
</para>

<para>
    <emphasis>
        Script 3.17. Copying and renaming all the files needed to create the cron jobs.
    </emphasis>
</para>

<para>
Table 3-2 describes the different cron jobs and what they do.
</para>

<para>
<table id="table-of-cronjobs-for-otrs">
<title>Description of several cron job scripts.</title>
  <tgroup cols="2">
    <thead>
      <row>
        <entry>
          Script
        </entry>
        <entry>
          Function
        </entry>
      </row>
    </thead>
    <tbody>
      <row>
        <entry>
          aaa_base
        </entry>
        <entry>
          Sets the basics for the crontab of the OTRS user.
        </entry>
      </row>
      <row>
        <entry>
          cache
        </entry>
        <entry>
          Removes expired cache entries from disk. Clears the loader cache for CSS and JavaScript files.
        </entry>
      </row>
      <row>
        <entry>
          fetchmail
        </entry>
        <entry>
          Used only if new mails will be fetched with fetchmail into the ticket
          system.
        </entry>
      </row>
      <row>
        <entry>
          generic_agent
        </entry>
        <entry>
          Executes the jobs of the GenericAgent that are not stored in the database
          but in own config files.
        </entry>
      </row>
      <row>
        <entry>
          generic_agent-database
        </entry>
        <entry>
          Executes the jobs of the GenericAgent that are stored in the database.
        </entry>
      </row>
      <row>
        <entry>
          pending_jobs
        </entry>
        <entry>
          Checks in the system for pending tickets, and closes them or sends reminders if needed.
        </entry>
      </row>
      <row>
        <entry>
          postmaster
        </entry>
        <entry>
          Checks the message queue of the ticket system and delivers messages that
          are still in the queues.
        </entry>
      </row>
      <row>
        <entry>
          postmaster_mailbox
        </entry>
        <entry>
          Fetches the mails from the POP3 accounts that were specified in the admin
          area, in the section for "PostMaster Mail Accounts".
        </entry>
      </row>
      <row>
        <entry>
          rebuild_ticket_index
        </entry>
        <entry>
          Rebuilds the ticket index, which improves the speed of the QueueView.
        </entry>
      </row>
      <row>
        <entry>
          session
        </entry>
        <entry>
          Removes old and no longer needed session ID's.
        </entry>
      </row>
      <row>
        <entry>
          unlock
        </entry>
        <entry>
          Unlocks tickets in the system.
        </entry>
      </row>
    </tbody>
  </tgroup>
</table>
</para>

<para>
To setup all cron jobs the script <filename>bin/Cron.sh</filename> can be
used, which is located in the home directory of the OTRS user. When this script
is executed, it needs a parameter to tell if you want to install,
remove or reinstall the cron jobs. The following parameters can be used:
</para>

<para>
<cmdsynopsis>
  <command>Cron.sh</command>
    <arg choice='req'>
      <replaceable>start</replaceable>
    </arg>
    <arg choice='req'>
      <replaceable>stop</replaceable>
    </arg>
    <arg choice='req'>
      <replaceable>restart</replaceable>
    </arg>
    <arg choice='opt'>
      <replaceable>OTRS user</replaceable>
    </arg>
  </cmdsynopsis>
</para>

<para>
Because the cron jobs need to be installed in the crontab file of the OTRS
user, you need to be logged in as OTRS user. If you are logged in as root,
you can change to the OTRS user with the command
<command>su otrs</command>. Execute the commands specified in the Script 3.18
below to install the cron jobs.
</para>

<warning>
<para>
Please note that other crontab entries of the OTRS user will be overwritten
or removed by the <filename>Cron.sh</filename> script. Please change the
<filename>Cron.sh</filename> script to keep also other crontab entries if needed.
</para>
</warning>

<para>
<screen>
linux:/opt/otrs/var/cron# cd /opt/otrs/bin/
linux:/opt/otrs/bin# su otrs
linux:~/bin$ ./Cron.sh start
/opt/otrs/bin
Cron.sh - start/stop OTRS cronjobs - &lt;$Revision: 1.45 $&gt;
Copyright (C) 2001-2009 OTRS AG, http://otrs.org/
(using /opt/otrs) done
linux:~/bin$ exit
exit
linux:/opt/otrs/bin#
</screen>
</para>

<para>
    <emphasis>Script 3.18. Installing the cron jobs.</emphasis>
</para>

<para>
The command <command>crontab -l -u otrs</command>, which can be executed as
root, shows you the crontab file of the OTRS user and you can check if all
entries are right (see Script 3.19 below).
</para>

<para>
<screen>
linux:/opt/otrs/bin# crontab -l -u otrs
# --
# cron/aaa_base - base crontab package
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# Who gets the cron emails?
MAILTO="root@localhost"

# --
# cron/cache - delete expired cache
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# delete expired cache weekly (Sunday mornings)
20 0 * * 0  $HOME/bin/otrs.CacheDelete.pl --expired >> /dev/null
30 0 * * 0  $HOME/bin/otrs.LoaderCache.pl -o delete >> /dev/null

# --
# cron/fetchmail - fetchmail cron of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# fetch every 5 minutes emails via fetchmail
#*/5 * * * * /usr/bin/fetchmail -a &gt;&gt; /dev/null

# --
# cron/generic_agent - GenericAgent.pl cron of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# start generic agent every 20 minutes
*/20 * * * * $HOME/bin/GenericAgent.pl &gt;&gt; /dev/null
# example to execute GenericAgent.pl on 23:00 with
# Kernel::Config::GenericAgentMove job file
#0 23 * * * $HOME/bin/GenericAgent.pl -c "Kernel::Config::GenericAgentMove" &gt;&gt; /dev/null
# --
# cron/generic_agent - GenericAgent.pl cron of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# start generic agent every 10 minutes
*/10 * * * * $HOME/bin/GenericAgent.pl -c db &gt;&gt; /dev/null
# --
# cron/pending_jobs - pending_jobs cron of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# check every 120 min the pending jobs
45 */2 * * * $HOME/bin/PendingJobs.pl &gt;&gt; /dev/null
# --
# cron/postmaster - postmaster cron of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# check daily the spool directory of OTRS
#10 0 * * * * test -e /etc/init.d/otrs &amp; /etc/init.d/otrs cleanup &gt;&gt; /dev/null; test -e /etc/rc.d/init.d/otrs &amp;&amp; /etc/rc.d/init.d/otrs cleanup &gt;&gt; /dev/null
10 0 * * * $HOME/bin/otrs.cleanup &gt;&gt; /dev/null
# --
# cron/postmaster_pop3 - postmaster_pop3 cron of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# fetch emails every 10 minutes
*/10 * * * * $HOME/bin/PostMasterPOP3.pl &gt;&gt; /dev/null
# --
# cron/rebuild_ticket_index - rebuild ticket index for OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# just every day
01 01 * * * $HOME/bin/RebuildTicketIndex.pl &gt;&gt; /dev/null

# --
# cron/session - delete old session ids of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# delete every 120 minutes old/idle session ids
55 */2 * * * $HOME/bin/DeleteSessionIDs.pl --expired &gt;&gt; /dev/null

# --
# cron/unlock - unlock old locked ticket of the OTRS
# Copyright (C) 2001-2010 OTRS AG, http://otrs.org/
# --
# This software comes with ABSOLUTELY NO WARRANTY.
# --
# unlock every hour old locked tickets
35 * * * * $HOME/bin/UnlockTickets.pl --timeout &gt;&gt; /dev/null

linux:/opt/otrs/bin#
</screen>
</para>

<para>
    <emphasis>Script 3.19. Crontab file.</emphasis>
</para>

</section>

</section>

<section id="upgrade">
<title>Upgrading the OTRS Frameworks</title>
<para>
These instructions are for people upgrading OTRS from "2.4" to "3.0".
</para>
<para>
If you are running a lower version of OTRS you need to follow the upgrade path
to 2.4 first (1.1-&gt;1.2-&gt;1.3-&gt;2.0-&gt;2.1-&gt;2.2-&gt;2.3-&gt;2.4 ...).
</para>

<section id="upgrade-2.4-to-3.0">
<title>Upgrading .tar.gz or RPM</title>
  <itemizedlist>
      <listitem>
        <para>
    Stop all relevant services
        </para>
        <para>
    e. g. (depends on used services):
        </para>
        <para>
    shell&gt; /etc/init.d/cron stop
        </para>
        <para>
    shell&gt; /etc/init.d/postfix stop
        </para>
        <para>
    shell&gt; /etc/init.d/apache stop
        </para>
        <para>
    shell&gt; /etc/init.d/mysql stop
        </para>
      </listitem>
      <listitem>
        <para>
    Backup everything below $OTRS_HOME (default: OTRS_HOME=/opt/otrs). Kernel/Config.pm, Kernel/Config/GenericAgent.pm, Kernel/Config/Files/ZZZAuto.pm, var/*, as well as the database.
        </para>
      </listitem>
      <listitem>
        <para>
    Make sure that you have backed up everything.
        </para>
      </listitem>
      <listitem>
        <para>
    Setup new system (optional). If possible try this install on a separate machine for testing first.
        </para>
      </listitem>
      <listitem>
        <para>
    Install the new release (tar or RPM)
        </para>
         <itemizedlist>
          <listitem>
            <para>
    With the tarball:
            </para>
            <para>
    shell&gt; cd /opt
            </para>
            <para>
    shell&gt; tar -xzf otrs-x.x.x.tar.gz
            </para>
            <para>
    shell&gt; ln -s otrs-x.x.x otrs
            </para>
            <para>
    Restore old config files.
            </para>
            <para>
    o Kernel/Config.pm
            </para>
            <para>
    o Kernel/Config/GenericAgent.pm
            </para>
            <para>
    o Kernel/Config/Files/ZZZAuto.pm
            </para>
          </listitem>
          <listitem>
            <para>
    With the RPM:
            </para>
            <para>
    shell&gt; rpm -Uvh otrs-x.x.x.-01.rpm
            </para>
            <para>
    Restore old config files not needed, done by RPM.
            </para>
          </listitem>
         </itemizedlist>
      </listitem>
      <listitem>
        <para>
    Own themes
        </para>
        <para>
    Note: The OTRS themes between 2.4 and 3.0 are _not_ compatible, so don't use your old themes)!
        </para>
        <para>
    Themes are located under $OTRS_HOME/Kernel/Output/HTML/*/*.dtl (default: OTRS_HOME=/opt/otrs)
        </para>
      </listitem>
      <listitem>
        <para>
    Set file permissions
        </para>
        <para>
If you use the tarball, execute $OTRS_HOME/bin/otrs.SetPermissions.pl!
        </para>
      </listitem>
      <listitem>
        <para>
Apply the database changes (part 1/2)
        </para>
        <para>
            shell&gt; cd /opt/otrs/
        </para>
        <para>
MySQL:
        </para>
        <para>
shell&gt; cat scripts/DBUpdate-to-3.0.mysql.sql | mysql -p -f -u root otrs
        </para>
        <para>
PostgreSQL:
        </para>
        <para>
shell&gt; cat scripts/DBUpdate-to-3.0.postgresql.sql | psql otrs
        </para>
      </listitem>
      <listitem>
        <para>
Run the migration script (as OTRS user, _not_ as root):
You must execute the migration script to migrate some data from the old database
structure to the new one. Please run
        </para>
        <para>
shell&gt; scripts/DBUpdate-to-3.0.pl
        </para>
      </listitem>
      <listitem>
        <para>
Apply the database changes (part 2/2):
        </para>
        <para>
MySQL:
        </para>
        <para>
shell&gt; cat scripts/DBUpdate-to-3.0-post.mysql.sql | mysql -p -f -u root otrs
        </para>
        <para>
PostgreSQL:
        </para>
        <para>
shell&gt; cat scripts/DBUpdate-to-3.0-post.postgresql.sql | psql otrs
        </para>
      </listitem>
      <listitem>
        <para>
Refresh the configuration and delete caches. Please run:
        </para>
        <para>
shell&gt; bin/otrs.RebuildConfig.pl
        </para>
        <para>
shell&gt; bin/otrs.DeleteCache.pl
        </para>
      </listitem>
      <listitem>
        <para>
Restart your services
        </para>
        <para>
    e. g. (depends on used services):
        </para>
        <para>
    shell&gt; /etc/init.d/cron start
        </para>
        <para>
    shell&gt; /etc/init.d/postfix start
        </para>
        <para>
    shell&gt; /etc/init.d/apache start
        </para>
        <para>
    shell&gt; /etc/init.d/mysql start
        </para>
      </listitem>
      <listitem>
        <para>
    Check for encoding issues
        </para>
        <para>
    With OTRS 3.0, the default charset of OTRS was changed from "iso-8859-1" to "utf-8".
        </para>
        <para>
    This will only affect you if you did not specify a charset in Kernel/Config.pm (all
    installations that were made with the web installer have a custom setting there) or
    if you didn't change the default charset in the AdminSysConfig.
        </para>
        <para>
    If you experience problems with the new charset, add this line to Kernel/Config.pm:
        </para>
        <para>
    $Self->{'DefaultCharset'} = 'iso-8859-1';
        </para>
        <para>
    In general, using "utf-8" is the recommended mode of running OTRS, and switching from
    "iso-8859-1" should work well.
        </para>
      </listitem>
  </itemizedlist>
</section>

<section id="upgrade-windows-installer">
<title>Upgrading Windows Installer</title>
<para>
There's currently no in-place upgrade available for OTRS installations that were
done with the Windows Installer. The upgrade process basically consists of
backing up the database and the filesystem, uninstalling OTRS, installing the
new version, restoring the database and running the upgrade procedure if needed.
</para>

<para>Upgrading is described in
<ulink url="http://faq.otrs.org/otrs/public.pl?Action=PublicFAQ;ItemID=351">FAQ# 4200351</ulink>, and
there is also an informative
<ulink url="http://www.youtube.com/watch?v=sf0R-reMTWc">YouTube video</ulink>
available.
</para>
</section>

</section>

</chapter>
